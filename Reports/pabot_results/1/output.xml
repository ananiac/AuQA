<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.5 on win32)" generated="20210721 11:54:35.210" rpa="false" schemaversion="2">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="staleStatePrevention" source="C:\Users\grees\PycharmProjects\AuQA\Testcases\staleStatePrevention.robot">
<test id="s1-s1-t1" name="StaleStatePreventionForSensors">
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210721 11:54:35.478" level="INFO">${current_time} = 11:54:35</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${current_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Add Time To Time" library="DateTime">
<var>${stop_time}</var>
<arg>${current_time}</arg>
<arg>${duration_of_test}</arg>
<arg>timer</arg>
<arg>exclude_millis=yes</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20210721 11:54:35.478" level="INFO">${stop_time} = 12:14:35</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${stop_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>9999</value>
<iter>
<var name="${i}">0</var>
<kw name="writeTemperatureToSensors">
<kw name="getCurrentTemperatureOfSensorsAandB" library="apiresources">
<var>${current_temperature}</var>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:35.478" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:35.478" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:35.478" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:35.478"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:36.766" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:54:36.766" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:28 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:54:36.766" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:36.766"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:36.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:36.766" endtime="20210721 11:54:36.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:54:36.766" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:54:36.766" endtime="20210721 11:54:36.766"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.766" endtime="20210721 11:54:36.766"/>
</kw>
<msg timestamp="20210721 11:54:36.766" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:36.766"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:36.813" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:54:36.766" endtime="20210721 11:54:36.813"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:54:36.813" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:54:36.813" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:54:36.813" endtime="20210721 11:54:36.813"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:54:36.813" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:54:36.813" endtime="20210721 11:54:36.813"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.813" endtime="20210721 11:54:36.828"/>
</kw>
<msg timestamp="20210721 11:54:36.828" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:54:36.766" endtime="20210721 11:54:36.828"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Getting temperature of Sensor A-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:36.828" endtime="20210721 11:54:36.828"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:36.850" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:54:36.828" endtime="20210721 11:54:36.850"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:36.866" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:54:36.866" endtime="20210721 11:54:36.866"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.866" endtime="20210721 11:54:36.866"/>
</kw>
<msg timestamp="20210721 11:54:36.866" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:54:36.828" endtime="20210721 11:54:36.866"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:36.882" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:54:36.866" endtime="20210721 11:54:36.882"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:36.882" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:54:36.882" endtime="20210721 11:54:36.882"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.882" endtime="20210721 11:54:36.882"/>
</kw>
<msg timestamp="20210721 11:54:36.882" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:54:36.866" endtime="20210721 11:54:36.882"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:36.930" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:54:36.882" endtime="20210721 11:54:36.930"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:36.930" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:54:36.930" endtime="20210721 11:54:36.930"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.930" endtime="20210721 11:54:36.930"/>
</kw>
<msg timestamp="20210721 11:54:36.930" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:54:36.882" endtime="20210721 11:54:36.930"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:36.966" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:54:36.945" endtime="20210721 11:54:36.966"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:36.966" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:54:36.966" endtime="20210721 11:54:36.966"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:36.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:36.966" endtime="20210721 11:54:36.966"/>
</kw>
<msg timestamp="20210721 11:54:36.966" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:54:36.930" endtime="20210721 11:54:36.966"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${current_temp}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].pointCurrent.value</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">${field_value_list} = [65]</msg>
<status status="PASS" starttime="20210721 11:54:36.982" endtime="20210721 11:54:37.013"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">${field_value} = 65</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<msg timestamp="20210721 11:54:37.013" level="INFO">${current_temp} = 65</msg>
<status status="PASS" starttime="20210721 11:54:36.966" endtime="20210721 11:54:37.013"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</branch>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</if>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</branch>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</if>
<status status="PASS" starttime="20210721 11:54:36.828" endtime="20210721 11:54:37.013"/>
</iter>
<status status="PASS" starttime="20210721 11:54:36.828" endtime="20210721 11:54:37.013"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>Current temperature of Sensor A is:${current_temp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${current_temp}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:37.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.013"/>
</kw>
<msg timestamp="20210721 11:54:37.013" level="INFO">${current_temperature} = 65</msg>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:37.013"/>
</kw>
<if>
<branch type="IF" condition="${current_temperature}==${sensor_point_cooling_temp}">
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Fetch the number of rack sensors -----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:37.033"/>
</kw>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:37.033" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:54:37.033" endtime="20210721 11:54:37.033"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:37.033" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:54:37.033" endtime="20210721 11:54:37.033"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:37.033" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:37.033" endtime="20210721 11:54:37.033"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:38.154" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:54:38.154" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:29 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:54:38.154" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:37.033" endtime="20210721 11:54:38.154"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:38.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:38.154" endtime="20210721 11:54:38.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:54:38.169" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:54:38.154" endtime="20210721 11:54:38.169"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.169" endtime="20210721 11:54:38.169"/>
</kw>
<msg timestamp="20210721 11:54:38.169" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:54:37.033" endtime="20210721 11:54:38.169"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:38.201" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:54:38.169" endtime="20210721 11:54:38.201"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:54:38.201" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:54:38.201" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.201"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:54:38.201" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.201"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.201"/>
</kw>
<msg timestamp="20210721 11:54:38.201" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:54:38.169" endtime="20210721 11:54:38.201"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for all sensor points-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.201"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.201"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:38.232" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.232"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:38.232" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:38.232" endtime="20210721 11:54:38.232"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.232" endtime="20210721 11:54:38.232"/>
</kw>
<msg timestamp="20210721 11:54:38.232" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:38.232"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:38.254" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:38.232" endtime="20210721 11:54:38.254"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:38.254" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:38.254" endtime="20210721 11:54:38.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.254" endtime="20210721 11:54:38.254"/>
</kw>
<msg timestamp="20210721 11:54:38.254" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:38.232" endtime="20210721 11:54:38.254"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:38.285" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:54:38.254" endtime="20210721 11:54:38.301"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:38.301" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:54:38.301" endtime="20210721 11:54:38.301"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.301" endtime="20210721 11:54:38.301"/>
</kw>
<msg timestamp="20210721 11:54:38.301" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:54:38.254" endtime="20210721 11:54:38.301"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:54:38.301" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:38.332"/>
</kw>
<msg timestamp="20210721 11:54:38.332" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:54:38.301" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:38.332" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:38.332"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:39.372" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:39.372" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:30 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:39.372" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:39.372"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:39.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:39.372" endtime="20210721 11:54:39.388"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:39.388" endtime="20210721 11:54:39.388"/>
</kw>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:39.404"/>
</kw>
<status status="PASS" starttime="20210721 11:54:38.332" endtime="20210721 11:54:39.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:39.419" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:39.404" endtime="20210721 11:54:39.419"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:39.419" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:39.419" endtime="20210721 11:54:39.419"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:39.435" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:39.419" endtime="20210721 11:54:39.435"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:40.507" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:40.507" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:40.507" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:39.435" endtime="20210721 11:54:40.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:40.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:40.507" endtime="20210721 11:54:40.538"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:40.538" endtime="20210721 11:54:40.538"/>
</kw>
<status status="PASS" starttime="20210721 11:54:39.404" endtime="20210721 11:54:40.538"/>
</kw>
<status status="PASS" starttime="20210721 11:54:39.404" endtime="20210721 11:54:40.538"/>
</kw>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:40.554"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:40.554" endtime="20210721 11:54:40.560"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:40.792" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:40.560" endtime="20210721 11:54:40.792"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:40.808" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:40.808" endtime="20210721 11:54:40.808"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:40.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:40.808" endtime="20210721 11:54:40.808"/>
</kw>
<msg timestamp="20210721 11:54:40.808" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:40.560" endtime="20210721 11:54:40.808"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:41.093" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:40.823" endtime="20210721 11:54:41.093"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:41.093" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:41.093" endtime="20210721 11:54:41.093"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:41.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:41.093" endtime="20210721 11:54:41.093"/>
</kw>
<msg timestamp="20210721 11:54:41.109" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:40.823" endtime="20210721 11:54:41.109"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:41.394" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:54:41.109" endtime="20210721 11:54:41.394"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:41.410" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:54:41.394" endtime="20210721 11:54:41.410"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:41.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:41.410" endtime="20210721 11:54:41.410"/>
</kw>
<msg timestamp="20210721 11:54:41.410" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:54:41.109" endtime="20210721 11:54:41.410"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:41.642" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:54:41.426" endtime="20210721 11:54:41.642"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:41.664" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:54:41.657" endtime="20210721 11:54:41.664"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:41.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:41.666" endtime="20210721 11:54:41.666"/>
</kw>
<msg timestamp="20210721 11:54:41.666" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:54:41.410" endtime="20210721 11:54:41.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:41.685" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:41.676" endtime="20210721 11:54:41.685"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:41.687" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:41.687" endtime="20210721 11:54:41.687"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:41.695" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:41.687" endtime="20210721 11:54:41.697"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:42.611" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:42.611" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:42.611" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:41.697" endtime="20210721 11:54:42.611"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:42.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:42.611" endtime="20210721 11:54:42.611"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:42.611" endtime="20210721 11:54:42.611"/>
</kw>
<status status="PASS" starttime="20210721 11:54:41.676" endtime="20210721 11:54:42.611"/>
</kw>
<status status="PASS" starttime="20210721 11:54:41.666" endtime="20210721 11:54:42.611"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:42.627" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:42.627" endtime="20210721 11:54:42.627"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:42.627" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:42.627" endtime="20210721 11:54:42.627"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:42.627" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:42.627" endtime="20210721 11:54:42.627"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:43.529" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:43.529" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:43.529" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:42.627" endtime="20210721 11:54:43.529"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:43.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:43.529"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:43.529"/>
</kw>
<status status="PASS" starttime="20210721 11:54:42.611" endtime="20210721 11:54:43.529"/>
</kw>
<status status="PASS" starttime="20210721 11:54:42.611" endtime="20210721 11:54:43.529"/>
</kw>
<status status="PASS" starttime="20210721 11:54:40.554" endtime="20210721 11:54:43.529"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:43.529"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:43.566" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:43.566"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:43.566" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:43.566" endtime="20210721 11:54:43.566"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:43.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:43.566" endtime="20210721 11:54:43.566"/>
</kw>
<msg timestamp="20210721 11:54:43.566" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:43.566"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:43.598" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:43.566" endtime="20210721 11:54:43.598"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:43.598" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:43.598" endtime="20210721 11:54:43.613"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:43.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:43.613" endtime="20210721 11:54:43.613"/>
</kw>
<msg timestamp="20210721 11:54:43.613" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:43.566" endtime="20210721 11:54:43.613"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:43.651" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:54:43.613" endtime="20210721 11:54:43.651"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:43.651" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:54:43.651" endtime="20210721 11:54:43.651"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:43.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:43.651" endtime="20210721 11:54:43.651"/>
</kw>
<msg timestamp="20210721 11:54:43.651" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:54:43.613" endtime="20210721 11:54:43.651"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:54:43.651" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:43.698"/>
</kw>
<msg timestamp="20210721 11:54:43.698" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:54:43.651" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:43.698" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:43.698"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:44.631" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:44.631" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:36 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:44.631" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:44.631"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:44.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:44.631" endtime="20210721 11:54:44.631"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:44.631" endtime="20210721 11:54:44.631"/>
</kw>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:44.631"/>
</kw>
<status status="PASS" starttime="20210721 11:54:43.698" endtime="20210721 11:54:44.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:44.647" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:44.647" endtime="20210721 11:54:44.647"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:44.647" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:44.647" endtime="20210721 11:54:44.647"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:44.647" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:44.647" endtime="20210721 11:54:44.647"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:45.540" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:45.540" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:36 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:45.541" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:44.647" endtime="20210721 11:54:45.541"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:45.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:45.541" endtime="20210721 11:54:45.543"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:45.543" endtime="20210721 11:54:45.543"/>
</kw>
<status status="PASS" starttime="20210721 11:54:44.647" endtime="20210721 11:54:45.544"/>
</kw>
<status status="PASS" starttime="20210721 11:54:44.631" endtime="20210721 11:54:45.544"/>
</kw>
<status status="PASS" starttime="20210721 11:54:43.529" endtime="20210721 11:54:45.544"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:45.545" endtime="20210721 11:54:45.545"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:45.581" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:45.546" endtime="20210721 11:54:45.581"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:45.582" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:45.581" endtime="20210721 11:54:45.582"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:45.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:45.582" endtime="20210721 11:54:45.583"/>
</kw>
<msg timestamp="20210721 11:54:45.583" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:45.545" endtime="20210721 11:54:45.583"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:45.622" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:45.584" endtime="20210721 11:54:45.623"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:45.624" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:45.623" endtime="20210721 11:54:45.625"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:45.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:45.625" endtime="20210721 11:54:45.626"/>
</kw>
<msg timestamp="20210721 11:54:45.626" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:45.583" endtime="20210721 11:54:45.626"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:45.665" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:54:45.627" endtime="20210721 11:54:45.665"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:45.667" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:54:45.666" endtime="20210721 11:54:45.667"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:45.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:45.667" endtime="20210721 11:54:45.668"/>
</kw>
<msg timestamp="20210721 11:54:45.669" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:54:45.626" endtime="20210721 11:54:45.669"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:45.703" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:54:45.670" endtime="20210721 11:54:45.703"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:45.705" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:54:45.703" endtime="20210721 11:54:45.705"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:45.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:45.705" endtime="20210721 11:54:45.706"/>
</kw>
<msg timestamp="20210721 11:54:45.706" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:54:45.669" endtime="20210721 11:54:45.706"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:45.708" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:45.708" endtime="20210721 11:54:45.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:45.709" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:45.709" endtime="20210721 11:54:45.709"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:45.710" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:45.710" endtime="20210721 11:54:45.710"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:46.611" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:46.612" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:38 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:46.612" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:45.711" endtime="20210721 11:54:46.612"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:46.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:46.613" endtime="20210721 11:54:46.616"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:46.616" endtime="20210721 11:54:46.616"/>
</kw>
<status status="PASS" starttime="20210721 11:54:45.707" endtime="20210721 11:54:46.616"/>
</kw>
<status status="PASS" starttime="20210721 11:54:45.706" endtime="20210721 11:54:46.616"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:46.618" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:46.617" endtime="20210721 11:54:46.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:46.618" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:46.618" endtime="20210721 11:54:46.618"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:46.619" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:46.618" endtime="20210721 11:54:46.619"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:47.549" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:47.549" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:38 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:47.550" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:46.619" endtime="20210721 11:54:47.550"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:47.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:47.551" endtime="20210721 11:54:47.554"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:47.554" endtime="20210721 11:54:47.554"/>
</kw>
<status status="PASS" starttime="20210721 11:54:46.617" endtime="20210721 11:54:47.554"/>
</kw>
<status status="PASS" starttime="20210721 11:54:46.616" endtime="20210721 11:54:47.555"/>
</kw>
<status status="PASS" starttime="20210721 11:54:45.544" endtime="20210721 11:54:47.555"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:47.555" endtime="20210721 11:54:47.555"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:47.576" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:47.556" endtime="20210721 11:54:47.576"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:47.576" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:47.576" endtime="20210721 11:54:47.576"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:47.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:47.577" endtime="20210721 11:54:47.577"/>
</kw>
<msg timestamp="20210721 11:54:47.577" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:47.555" endtime="20210721 11:54:47.577"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:47.598" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:47.578" endtime="20210721 11:54:47.598"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:47.598" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:47.598" endtime="20210721 11:54:47.599"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:47.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:47.599" endtime="20210721 11:54:47.599"/>
</kw>
<msg timestamp="20210721 11:54:47.599" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:47.577" endtime="20210721 11:54:47.599"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:47.620" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:54:47.600" endtime="20210721 11:54:47.620"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:47.621" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:54:47.620" endtime="20210721 11:54:47.621"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:47.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:47.621" endtime="20210721 11:54:47.621"/>
</kw>
<msg timestamp="20210721 11:54:47.622" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:54:47.599" endtime="20210721 11:54:47.622"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:47.643" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:54:47.622" endtime="20210721 11:54:47.643"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:47.644" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:54:47.643" endtime="20210721 11:54:47.644"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:47.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:47.644" endtime="20210721 11:54:47.644"/>
</kw>
<msg timestamp="20210721 11:54:47.645" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:54:47.622" endtime="20210721 11:54:47.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:47.646" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:47.646" endtime="20210721 11:54:47.646"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:47.647" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:47.646" endtime="20210721 11:54:47.647"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:47.648" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:47.647" endtime="20210721 11:54:47.648"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:48.610" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:48.610" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:39 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:48.611" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:47.648" endtime="20210721 11:54:48.611"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:48.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:48.612" endtime="20210721 11:54:48.615"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:48.615" endtime="20210721 11:54:48.615"/>
</kw>
<status status="PASS" starttime="20210721 11:54:47.645" endtime="20210721 11:54:48.615"/>
</kw>
<status status="PASS" starttime="20210721 11:54:47.645" endtime="20210721 11:54:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:48.617" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:48.616" endtime="20210721 11:54:48.617"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:48.617" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:48.617" endtime="20210721 11:54:48.617"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:48.618" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:48.617" endtime="20210721 11:54:48.618"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:49.738" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:49.738" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:40 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:49.738" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:48.618" endtime="20210721 11:54:49.738"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:49.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:49.738" endtime="20210721 11:54:49.739"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:49.739" endtime="20210721 11:54:49.740"/>
</kw>
<status status="PASS" starttime="20210721 11:54:48.616" endtime="20210721 11:54:49.740"/>
</kw>
<status status="PASS" starttime="20210721 11:54:48.615" endtime="20210721 11:54:49.740"/>
</kw>
<status status="PASS" starttime="20210721 11:54:47.555" endtime="20210721 11:54:49.740"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:49.741" endtime="20210721 11:54:49.741"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:49.763" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:49.742" endtime="20210721 11:54:49.763"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:49.764" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:49.763" endtime="20210721 11:54:49.764"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:49.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:49.764" endtime="20210721 11:54:49.764"/>
</kw>
<msg timestamp="20210721 11:54:49.764" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:49.741" endtime="20210721 11:54:49.764"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:49.787" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:49.766" endtime="20210721 11:54:49.787"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:49.787" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:49.787" endtime="20210721 11:54:49.787"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:49.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:49.788" endtime="20210721 11:54:49.788"/>
</kw>
<msg timestamp="20210721 11:54:49.788" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:49.765" endtime="20210721 11:54:49.788"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:49.809" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 11:54:49.789" endtime="20210721 11:54:49.809"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:49.810" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 11:54:49.810" endtime="20210721 11:54:49.810"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:49.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:49.810" endtime="20210721 11:54:49.810"/>
</kw>
<msg timestamp="20210721 11:54:49.811" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 11:54:49.788" endtime="20210721 11:54:49.811"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:49.833" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 11:54:49.811" endtime="20210721 11:54:49.833"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:49.834" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 11:54:49.833" endtime="20210721 11:54:49.834"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:49.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:49.834" endtime="20210721 11:54:49.834"/>
</kw>
<msg timestamp="20210721 11:54:49.835" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 11:54:49.811" endtime="20210721 11:54:49.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:49.836" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:49.836" endtime="20210721 11:54:49.836"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:49.837" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:49.836" endtime="20210721 11:54:49.837"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:49.837" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:49.837" endtime="20210721 11:54:49.838"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:50.737" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:50.737" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:42 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:50.738" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:49.838" endtime="20210721 11:54:50.738"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:50.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:50.738" endtime="20210721 11:54:50.740"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:50.740" endtime="20210721 11:54:50.740"/>
</kw>
<status status="PASS" starttime="20210721 11:54:49.835" endtime="20210721 11:54:50.741"/>
</kw>
<status status="PASS" starttime="20210721 11:54:49.835" endtime="20210721 11:54:50.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:50.743" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:50.742" endtime="20210721 11:54:50.743"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:50.743" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:50.743" endtime="20210721 11:54:50.744"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:50.744" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:50.744" endtime="20210721 11:54:50.744"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:51.650" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:51.650" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:43 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:51.651" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:50.745" endtime="20210721 11:54:51.651"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:51.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:51.652" endtime="20210721 11:54:51.654"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:51.654" endtime="20210721 11:54:51.655"/>
</kw>
<status status="PASS" starttime="20210721 11:54:50.741" endtime="20210721 11:54:51.655"/>
</kw>
<status status="PASS" starttime="20210721 11:54:50.741" endtime="20210721 11:54:51.655"/>
</kw>
<status status="PASS" starttime="20210721 11:54:49.741" endtime="20210721 11:54:51.655"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:51.655" endtime="20210721 11:54:51.656"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:51.676" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:51.656" endtime="20210721 11:54:51.676"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:51.677" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:51.677" endtime="20210721 11:54:51.677"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:51.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:51.677" endtime="20210721 11:54:51.677"/>
</kw>
<msg timestamp="20210721 11:54:51.678" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:51.656" endtime="20210721 11:54:51.678"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:51.698" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:51.678" endtime="20210721 11:54:51.698"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:51.699" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:51.699" endtime="20210721 11:54:51.699"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:51.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:51.699" endtime="20210721 11:54:51.700"/>
</kw>
<msg timestamp="20210721 11:54:51.700" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:51.678" endtime="20210721 11:54:51.700"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:51.720" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 11:54:51.701" endtime="20210721 11:54:51.720"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:51.721" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 11:54:51.720" endtime="20210721 11:54:51.721"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:51.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:51.721" endtime="20210721 11:54:51.721"/>
</kw>
<msg timestamp="20210721 11:54:51.722" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 11:54:51.700" endtime="20210721 11:54:51.722"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:51.742" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 11:54:51.722" endtime="20210721 11:54:51.742"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:51.743" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 11:54:51.743" endtime="20210721 11:54:51.743"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:51.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:51.743" endtime="20210721 11:54:51.744"/>
</kw>
<msg timestamp="20210721 11:54:51.744" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 11:54:51.722" endtime="20210721 11:54:51.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:51.746" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:51.745" endtime="20210721 11:54:51.746"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:51.746" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:51.746" endtime="20210721 11:54:51.746"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:51.747" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:51.747" endtime="20210721 11:54:51.747"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:52.668" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:52.668" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:52.668" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:51.747" endtime="20210721 11:54:52.668"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:52.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:52.668" endtime="20210721 11:54:52.668"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:52.668" endtime="20210721 11:54:52.668"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.745" endtime="20210721 11:54:52.668"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.744" endtime="20210721 11:54:52.668"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:52.668" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:52.668" endtime="20210721 11:54:52.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:52.683" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:52.683" endtime="20210721 11:54:52.683"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:52.683" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:52.683" endtime="20210721 11:54:52.683"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:53.601" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:53.601" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:53.601" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:52.683" endtime="20210721 11:54:53.601"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:53.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:53.617"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:53.617"/>
</kw>
<status status="PASS" starttime="20210721 11:54:52.668" endtime="20210721 11:54:53.617"/>
</kw>
<status status="PASS" starttime="20210721 11:54:52.668" endtime="20210721 11:54:53.617"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.655" endtime="20210721 11:54:53.617"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:53.617"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:53.686" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:53.686"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:53.687" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:53.686" endtime="20210721 11:54:53.687"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:53.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:53.687" endtime="20210721 11:54:53.687"/>
</kw>
<msg timestamp="20210721 11:54:53.688" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:53.688"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:53.724" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:54:53.690" endtime="20210721 11:54:53.740"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:53.740" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:53.740" endtime="20210721 11:54:53.740"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:53.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:53.740" endtime="20210721 11:54:53.740"/>
</kw>
<msg timestamp="20210721 11:54:53.740" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:54:53.688" endtime="20210721 11:54:53.740"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:53.786" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 11:54:53.740" endtime="20210721 11:54:53.786"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:53.786" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 11:54:53.786" endtime="20210721 11:54:53.786"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:53.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:53.786" endtime="20210721 11:54:53.786"/>
</kw>
<msg timestamp="20210721 11:54:53.786" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 11:54:53.740" endtime="20210721 11:54:53.786"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:53.817" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 11:54:53.786" endtime="20210721 11:54:53.817"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:53.817" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 11:54:53.817" endtime="20210721 11:54:53.817"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:53.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:53.817" endtime="20210721 11:54:53.833"/>
</kw>
<msg timestamp="20210721 11:54:53.833" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 11:54:53.786" endtime="20210721 11:54:53.833"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:53.833" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:53.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:53.833" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:53.833"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:53.833" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:53.833"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:54.748" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:54.748" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:54.748" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:54.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:54.748"/>
</kw>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:54.748"/>
</kw>
<status status="PASS" starttime="20210721 11:54:53.833" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:54.748" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:54:54.748" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:54:54.748" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:54.748"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:54:55.674" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:54:55.674" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:22:47 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:54:55.674" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:54:54.764" endtime="20210721 11:54:55.674"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:54:55.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.674"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.674"/>
</kw>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:55.674"/>
</kw>
<status status="PASS" starttime="20210721 11:54:54.748" endtime="20210721 11:54:55.674"/>
</kw>
<status status="PASS" starttime="20210721 11:54:53.617" endtime="20210721 11:54:55.674"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.674"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.706" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.706"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.706" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:55.706" endtime="20210721 11:54:55.706"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.706" endtime="20210721 11:54:55.706"/>
</kw>
<msg timestamp="20210721 11:54:55.706" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.706"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.752" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:54:55.706" endtime="20210721 11:54:55.752"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.752" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:55.752" endtime="20210721 11:54:55.752"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.752" endtime="20210721 11:54:55.752"/>
</kw>
<msg timestamp="20210721 11:54:55.752" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:55.706" endtime="20210721 11:54:55.752"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.790" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 11:54:55.752" endtime="20210721 11:54:55.790"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.790" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 11:54:55.790" endtime="20210721 11:54:55.790"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.790" endtime="20210721 11:54:55.790"/>
</kw>
<msg timestamp="20210721 11:54:55.790" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 11:54:55.752" endtime="20210721 11:54:55.790"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.863" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 11:54:55.790" endtime="20210721 11:54:55.863"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.864" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 11:54:55.863" endtime="20210721 11:54:55.864"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.864" endtime="20210721 11:54:55.865"/>
</kw>
<msg timestamp="20210721 11:54:55.866" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 11:54:55.790" endtime="20210721 11:54:55.866"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:55.866" endtime="20210721 11:54:55.867"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:55.867" endtime="20210721 11:54:55.868"/>
</kw>
<status status="PASS" starttime="20210721 11:54:55.674" endtime="20210721 11:54:55.868"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:55.869" endtime="20210721 11:54:55.870"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.908" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:54:55.871" endtime="20210721 11:54:55.908"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.909" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:55.909" endtime="20210721 11:54:55.909"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.909" endtime="20210721 11:54:55.909"/>
</kw>
<msg timestamp="20210721 11:54:55.909" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:55.870" endtime="20210721 11:54:55.909"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:55.961" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:54:55.909" endtime="20210721 11:54:55.961"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:55.961" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:55.961" endtime="20210721 11:54:55.961"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:55.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:55.961" endtime="20210721 11:54:55.961"/>
</kw>
<msg timestamp="20210721 11:54:55.961" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:55.909" endtime="20210721 11:54:55.961"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.006" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 11:54:55.961" endtime="20210721 11:54:56.006"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.006" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 11:54:56.006" endtime="20210721 11:54:56.006"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.006" endtime="20210721 11:54:56.006"/>
</kw>
<msg timestamp="20210721 11:54:56.006" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 11:54:55.961" endtime="20210721 11:54:56.006"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.054" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 11:54:56.006" endtime="20210721 11:54:56.054"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.054" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 11:54:56.054" endtime="20210721 11:54:56.054"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.054" endtime="20210721 11:54:56.054"/>
</kw>
<msg timestamp="20210721 11:54:56.054" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210721 11:54:56.006" endtime="20210721 11:54:56.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:56.054" endtime="20210721 11:54:56.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:56.054" endtime="20210721 11:54:56.054"/>
</kw>
<status status="PASS" starttime="20210721 11:54:55.869" endtime="20210721 11:54:56.070"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:56.070" endtime="20210721 11:54:56.070"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.120" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:54:56.070" endtime="20210721 11:54:56.120"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.120" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:56.120" endtime="20210721 11:54:56.120"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.120" endtime="20210721 11:54:56.120"/>
</kw>
<msg timestamp="20210721 11:54:56.120" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:54:56.070" endtime="20210721 11:54:56.120"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.167" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:54:56.120" endtime="20210721 11:54:56.167"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.167" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:56.167" endtime="20210721 11:54:56.167"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.167" endtime="20210721 11:54:56.175"/>
</kw>
<msg timestamp="20210721 11:54:56.175" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:54:56.120" endtime="20210721 11:54:56.175"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.222" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210721 11:54:56.175" endtime="20210721 11:54:56.222"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.222" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210721 11:54:56.222" endtime="20210721 11:54:56.222"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.222" endtime="20210721 11:54:56.222"/>
</kw>
<msg timestamp="20210721 11:54:56.222" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210721 11:54:56.175" endtime="20210721 11:54:56.222"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:54:56.254" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210721 11:54:56.222" endtime="20210721 11:54:56.254"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:54:56.254" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210721 11:54:56.254" endtime="20210721 11:54:56.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:54:56.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:54:56.254" endtime="20210721 11:54:56.269"/>
</kw>
<msg timestamp="20210721 11:54:56.269" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210721 11:54:56.222" endtime="20210721 11:54:56.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</kw>
<status status="PASS" starttime="20210721 11:54:56.070" endtime="20210721 11:54:56.269"/>
</iter>
<status status="PASS" starttime="20210721 11:54:38.201" endtime="20210721 11:54:56.269"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>******************************Temperature set for all rack sensors*********************************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</kw>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:56.269"/>
</kw>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:56.269"/>
</branch>
<branch type="ELSE IF" condition="${current_temperature}==${sensor_point_hot_temp}">
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<status status="NOT RUN" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for temperature changes</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:54:56.269" endtime="20210721 11:54:56.269"/>
</branch>
<status status="PASS" starttime="20210721 11:54:37.013" endtime="20210721 11:54:56.269"/>
</if>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:54:56.269"/>
</kw>
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:56.276" endtime="20210721 11:54:56.276"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210721 11:54:56.276" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<status status="PASS" starttime="20210721 11:54:56.269" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="timeRemainingToFinishTest">
<var>${time_left}</var>
<arg>${stop_time}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${current_time} = 11:55:56</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<var>${time_left_in_loop}</var>
<arg>${stop_time}</arg>
<arg>${current_time}</arg>
<arg>timer</arg>
<arg>exclude_millis=yes</arg>
<doc>Subtracts time from another time and returns the resulting time.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${time_left_in_loop} = 00:18:39</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_left_in_loop}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Convert Time" library="DateTime">
<var>${time}</var>
<arg>${time_left_in_loop}</arg>
<doc>Converts between supported `time formats`.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${time} = 1119.0</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${time_int}</var>
<arg>${time}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${time_int} = 1119</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<msg timestamp="20210721 11:55:56.278" level="INFO">${time_left} = 1119</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<if>
<branch type="IF" condition="${time_left} &lt; 1">
<kw name="Get Current Date" library="DateTime">
<var>${t}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>exit time ${t}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</branch>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</if>
<status status="PASS" starttime="20210721 11:54:35.478" endtime="20210721 11:55:56.278"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="writeTemperatureToSensors">
<kw name="getCurrentTemperatureOfSensorsAandB" library="apiresources">
<var>${current_temperature}</var>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:56.278" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:56.278"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:57.196" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:55:57.196" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:55:57.196" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:57.196"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:57.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:57.196" endtime="20210721 11:55:57.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:55:57.196" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:57.196" endtime="20210721 11:55:57.196"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.196" endtime="20210721 11:55:57.196"/>
</kw>
<msg timestamp="20210721 11:55:57.196" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:57.196"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.212" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:55:57.196" endtime="20210721 11:55:57.212"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:55:57.212" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:55:57.212" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.212"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:55:57.212" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.212"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.212"/>
</kw>
<msg timestamp="20210721 11:55:57.212" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:57.196" endtime="20210721 11:55:57.212"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Getting temperature of Sensor A-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.212"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.243" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:55:57.227" endtime="20210721 11:55:57.243"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:57.243" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:55:57.243" endtime="20210721 11:55:57.243"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.243" endtime="20210721 11:55:57.243"/>
</kw>
<msg timestamp="20210721 11:55:57.243" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.243"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.249" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:55:57.243" endtime="20210721 11:55:57.249"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:57.249" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:55:57.249" endtime="20210721 11:55:57.249"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.249" endtime="20210721 11:55:57.249"/>
</kw>
<msg timestamp="20210721 11:55:57.249" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:55:57.243" endtime="20210721 11:55:57.249"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.265" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:55:57.249" endtime="20210721 11:55:57.265"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:57.265" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:57.265" endtime="20210721 11:55:57.281"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.281" endtime="20210721 11:55:57.281"/>
</kw>
<msg timestamp="20210721 11:55:57.281" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:57.249" endtime="20210721 11:55:57.281"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.296" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:55:57.281" endtime="20210721 11:55:57.296"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:57.296" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:57.296" endtime="20210721 11:55:57.296"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.296" endtime="20210721 11:55:57.296"/>
</kw>
<msg timestamp="20210721 11:55:57.296" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:57.281" endtime="20210721 11:55:57.296"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${current_temp}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].pointCurrent.value</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${field_value_list} = [65]</msg>
<status status="PASS" starttime="20210721 11:55:57.296" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${field_value} = 65</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<msg timestamp="20210721 11:55:57.312" level="INFO">${current_temp} = 65</msg>
<status status="PASS" starttime="20210721 11:55:57.296" endtime="20210721 11:55:57.312"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</branch>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</if>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</branch>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</if>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.312"/>
</iter>
<status status="PASS" starttime="20210721 11:55:57.212" endtime="20210721 11:55:57.312"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>Current temperature of Sensor A is:${current_temp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${current_temp}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<msg timestamp="20210721 11:55:57.312" level="INFO">${current_temperature} = 65</msg>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:55:57.312"/>
</kw>
<if>
<branch type="IF" condition="${current_temperature}==${sensor_point_cooling_temp}">
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Fetch the number of rack sensors -----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:57.312" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:57.312"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:58.228" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:55:58.228" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:49 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:55:58.228" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:58.228"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:58.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:58.228" endtime="20210721 11:55:58.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:55:58.228" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:58.228" endtime="20210721 11:55:58.228"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.228" endtime="20210721 11:55:58.228"/>
</kw>
<msg timestamp="20210721 11:55:58.228" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:55:58.228"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:58.244" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:55:58.228" endtime="20210721 11:55:58.244"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:55:58.244" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:55:58.251" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:55:58.244" endtime="20210721 11:55:58.251"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:55:58.251" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.251"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.251"/>
</kw>
<msg timestamp="20210721 11:55:58.251" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:58.228" endtime="20210721 11:55:58.251"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for all sensor points-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.251"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.251"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:58.271" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.271"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:58.271" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:58.271" endtime="20210721 11:55:58.271"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.271" endtime="20210721 11:55:58.271"/>
</kw>
<msg timestamp="20210721 11:55:58.271" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:55:58.271"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:58.287" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:58.271" endtime="20210721 11:55:58.287"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:58.287" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:58.287" endtime="20210721 11:55:58.287"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.287" endtime="20210721 11:55:58.287"/>
</kw>
<msg timestamp="20210721 11:55:58.287" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:58.271" endtime="20210721 11:55:58.287"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:58.303" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:55:58.287" endtime="20210721 11:55:58.303"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:58.303" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:58.303" endtime="20210721 11:55:58.303"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.303" endtime="20210721 11:55:58.303"/>
</kw>
<msg timestamp="20210721 11:55:58.303" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:58.287" endtime="20210721 11:55:58.303"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:55:58.303" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:58.318"/>
</kw>
<msg timestamp="20210721 11:55:58.318" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:58.303" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:58.318" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:58.318"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:59.352" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:59.352" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:50 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:59.352" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:59.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:55:59.352"/>
</kw>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:59.352"/>
</kw>
<status status="PASS" starttime="20210721 11:55:58.318" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:59.352" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:59.352" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:59.352" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:55:59.352"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:00.232" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:00.232" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:51 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:00.232" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:56:00.232"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:00.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:00.232"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:00.232"/>
</kw>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:56:00.232"/>
</kw>
<status status="PASS" starttime="20210721 11:55:59.352" endtime="20210721 11:56:00.232"/>
</kw>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:56:00.232"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:00.232"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:00.254" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:00.254"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:00.254" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:00.254" endtime="20210721 11:56:00.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:00.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:00.254" endtime="20210721 11:56:00.254"/>
</kw>
<msg timestamp="20210721 11:56:00.254" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:00.254"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:00.269" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:00.254" endtime="20210721 11:56:00.269"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:00.269" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:00.269" endtime="20210721 11:56:00.269"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:00.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:00.269" endtime="20210721 11:56:00.269"/>
</kw>
<msg timestamp="20210721 11:56:00.269" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:00.254" endtime="20210721 11:56:00.269"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:00.301" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:56:00.285" endtime="20210721 11:56:00.301"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:00.301" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:56:00.301" endtime="20210721 11:56:00.301"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:00.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:00.301" endtime="20210721 11:56:00.301"/>
</kw>
<msg timestamp="20210721 11:56:00.301" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:56:00.269" endtime="20210721 11:56:00.301"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:56:00.301" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:00.316"/>
</kw>
<msg timestamp="20210721 11:56:00.316" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:56:00.301" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:00.316" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:00.316"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:01.221" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:01.221" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:52 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:01.221" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:01.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:01.221"/>
</kw>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:01.221"/>
</kw>
<status status="PASS" starttime="20210721 11:56:00.316" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:01.221" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:01.221" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:01.221" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:01.221"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:02.152" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:02.152" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:53 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:02.152" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:02.152"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:02.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:02.152" endtime="20210721 11:56:02.158"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:02.158" endtime="20210721 11:56:02.158"/>
</kw>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:02.158"/>
</kw>
<status status="PASS" starttime="20210721 11:56:01.221" endtime="20210721 11:56:02.158"/>
</kw>
<status status="PASS" starttime="20210721 11:56:00.232" endtime="20210721 11:56:02.158"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:02.158" endtime="20210721 11:56:02.158"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:02.189" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:02.158" endtime="20210721 11:56:02.189"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:02.189" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:02.189" endtime="20210721 11:56:02.189"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:02.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:02.189" endtime="20210721 11:56:02.189"/>
</kw>
<msg timestamp="20210721 11:56:02.189" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:02.158" endtime="20210721 11:56:02.189"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:02.205" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:02.189" endtime="20210721 11:56:02.205"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:02.205" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:02.205" endtime="20210721 11:56:02.205"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:02.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:02.205" endtime="20210721 11:56:02.205"/>
</kw>
<msg timestamp="20210721 11:56:02.205" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:02.189" endtime="20210721 11:56:02.205"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:02.221" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:56:02.205" endtime="20210721 11:56:02.221"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:02.221" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:56:02.221" endtime="20210721 11:56:02.221"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:02.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:02.221" endtime="20210721 11:56:02.221"/>
</kw>
<msg timestamp="20210721 11:56:02.221" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:56:02.205" endtime="20210721 11:56:02.221"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:56:02.221" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:02.236"/>
</kw>
<msg timestamp="20210721 11:56:02.236" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:56:02.221" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:02.236" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:02.236"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:03.154" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:03.154" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:54 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:03.154" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:03.154"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:03.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:03.154" endtime="20210721 11:56:03.154"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:03.154" endtime="20210721 11:56:03.154"/>
</kw>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:03.154"/>
</kw>
<status status="PASS" starttime="20210721 11:56:02.236" endtime="20210721 11:56:03.154"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:03.160" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:03.160" endtime="20210721 11:56:03.160"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:03.160" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:03.160" endtime="20210721 11:56:03.160"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:03.160" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:03.160" endtime="20210721 11:56:03.160"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:04.053" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:04.053" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:04.053" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:03.160" endtime="20210721 11:56:04.053"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:04.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:04.053" endtime="20210721 11:56:04.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:04.062" endtime="20210721 11:56:04.062"/>
</kw>
<status status="PASS" starttime="20210721 11:56:03.160" endtime="20210721 11:56:04.062"/>
</kw>
<status status="PASS" starttime="20210721 11:56:03.154" endtime="20210721 11:56:04.062"/>
</kw>
<status status="PASS" starttime="20210721 11:56:02.158" endtime="20210721 11:56:04.062"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:04.062" endtime="20210721 11:56:04.062"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:04.093" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:04.062" endtime="20210721 11:56:04.093"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:04.093" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:04.093" endtime="20210721 11:56:04.093"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:04.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:04.093" endtime="20210721 11:56:04.093"/>
</kw>
<msg timestamp="20210721 11:56:04.109" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:04.062" endtime="20210721 11:56:04.109"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:04.124" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:04.109" endtime="20210721 11:56:04.124"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:04.124" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:04.124" endtime="20210721 11:56:04.124"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:04.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:04.124" endtime="20210721 11:56:04.124"/>
</kw>
<msg timestamp="20210721 11:56:04.124" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:04.109" endtime="20210721 11:56:04.124"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:04.140" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:56:04.124" endtime="20210721 11:56:04.140"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:04.140" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:56:04.140" endtime="20210721 11:56:04.140"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:04.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:04.140" endtime="20210721 11:56:04.140"/>
</kw>
<msg timestamp="20210721 11:56:04.140" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:56:04.124" endtime="20210721 11:56:04.140"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:04.155" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:56:04.140" endtime="20210721 11:56:04.155"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:04.155" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:56:04.155" endtime="20210721 11:56:04.155"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:04.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:04.155" endtime="20210721 11:56:04.155"/>
</kw>
<msg timestamp="20210721 11:56:04.162" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:56:04.140" endtime="20210721 11:56:04.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:04.162" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:04.162"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:04.162" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:04.162"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:04.162" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:04.162"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:05.063" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:05.063" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:56 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:05.063" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:05.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.063"/>
</kw>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:05.063"/>
</kw>
<status status="PASS" starttime="20210721 11:56:04.162" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:05.063" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:05.063" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:05.063" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.063"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:05.964" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:05.964" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:57 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:05.964" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.964"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:05.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:05.964" endtime="20210721 11:56:05.964"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:05.980" endtime="20210721 11:56:05.980"/>
</kw>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.980"/>
</kw>
<status status="PASS" starttime="20210721 11:56:05.063" endtime="20210721 11:56:05.980"/>
</kw>
<status status="PASS" starttime="20210721 11:56:04.062" endtime="20210721 11:56:05.980"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:05.980" endtime="20210721 11:56:05.980"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:05.996" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:05.980" endtime="20210721 11:56:05.996"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:05.996" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:05.996" endtime="20210721 11:56:05.996"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:05.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:05.996" endtime="20210721 11:56:05.996"/>
</kw>
<msg timestamp="20210721 11:56:05.996" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:05.980" endtime="20210721 11:56:05.996"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:06.011" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:05.996" endtime="20210721 11:56:06.011"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:06.011" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:06.011" endtime="20210721 11:56:06.011"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:06.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:06.011" endtime="20210721 11:56:06.011"/>
</kw>
<msg timestamp="20210721 11:56:06.011" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:05.996" endtime="20210721 11:56:06.011"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:06.044" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:56:06.011" endtime="20210721 11:56:06.044"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:06.044" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:56:06.044" endtime="20210721 11:56:06.044"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:06.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:06.044" endtime="20210721 11:56:06.044"/>
</kw>
<msg timestamp="20210721 11:56:06.044" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:56:06.011" endtime="20210721 11:56:06.044"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:06.059" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:56:06.044" endtime="20210721 11:56:06.059"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:06.059" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:56:06.059" endtime="20210721 11:56:06.059"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:06.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:06.059" endtime="20210721 11:56:06.059"/>
</kw>
<msg timestamp="20210721 11:56:06.059" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:56:06.044" endtime="20210721 11:56:06.059"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:06.064" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:06.064" endtime="20210721 11:56:06.064"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:06.064" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:06.064" endtime="20210721 11:56:06.064"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:06.064" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:06.064" endtime="20210721 11:56:06.064"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:06.960" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:06.960" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:58 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:06.960" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:06.064" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:06.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:06.966"/>
</kw>
<status status="PASS" starttime="20210721 11:56:06.064" endtime="20210721 11:56:06.966"/>
</kw>
<status status="PASS" starttime="20210721 11:56:06.059" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:06.966" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:06.966" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:06.966" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:06.966"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:07.883" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:07.883" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:59 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:07.883" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:07.883"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:07.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:07.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:07.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:07.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:06.966" endtime="20210721 11:56:07.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:05.980" endtime="20210721 11:56:07.883"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:07.883"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:07.900" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:07.900"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:07.900" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:07.900" endtime="20210721 11:56:07.900"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:07.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:07.900" endtime="20210721 11:56:07.900"/>
</kw>
<msg timestamp="20210721 11:56:07.900" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:07.900"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:07.916" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:07.900" endtime="20210721 11:56:07.916"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:07.916" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:07.916" endtime="20210721 11:56:07.916"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:07.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:07.916" endtime="20210721 11:56:07.916"/>
</kw>
<msg timestamp="20210721 11:56:07.931" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:07.900" endtime="20210721 11:56:07.931"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:07.947" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 11:56:07.931" endtime="20210721 11:56:07.947"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:07.947" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 11:56:07.947" endtime="20210721 11:56:07.947"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:07.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:07.947" endtime="20210721 11:56:07.947"/>
</kw>
<msg timestamp="20210721 11:56:07.947" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 11:56:07.931" endtime="20210721 11:56:07.947"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:07.962" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 11:56:07.947" endtime="20210721 11:56:07.962"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:07.962" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 11:56:07.962" endtime="20210721 11:56:07.962"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:07.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:07.962" endtime="20210721 11:56:07.962"/>
</kw>
<msg timestamp="20210721 11:56:07.962" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 11:56:07.947" endtime="20210721 11:56:07.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:07.968" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:07.962" endtime="20210721 11:56:07.968"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:07.968" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:07.968" endtime="20210721 11:56:07.968"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:07.968" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:07.968" endtime="20210721 11:56:07.968"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:08.867" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:08.867" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:00 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:08.867" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:07.968" endtime="20210721 11:56:08.867"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:08.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:08.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:08.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:07.962" endtime="20210721 11:56:08.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:07.962" endtime="20210721 11:56:08.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:08.883" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:08.883"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:08.883" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:08.883"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:08.883" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:08.883"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:09.785" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:09.785" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:01 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:09.785" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:09.785"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:09.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:09.785"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:09.785"/>
</kw>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:09.785"/>
</kw>
<status status="PASS" starttime="20210721 11:56:08.883" endtime="20210721 11:56:09.785"/>
</kw>
<status status="PASS" starttime="20210721 11:56:07.883" endtime="20210721 11:56:09.785"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:09.785"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:09.816" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:09.816"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:09.816" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:09.816" endtime="20210721 11:56:09.816"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:09.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:09.816" endtime="20210721 11:56:09.816"/>
</kw>
<msg timestamp="20210721 11:56:09.816" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:09.816"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:09.833" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:09.816" endtime="20210721 11:56:09.833"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:09.833" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:09.833" endtime="20210721 11:56:09.833"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:09.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:09.833" endtime="20210721 11:56:09.833"/>
</kw>
<msg timestamp="20210721 11:56:09.833" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:09.816" endtime="20210721 11:56:09.833"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:09.848" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 11:56:09.833" endtime="20210721 11:56:09.848"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:09.848" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 11:56:09.848" endtime="20210721 11:56:09.848"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:09.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:09.848" endtime="20210721 11:56:09.848"/>
</kw>
<msg timestamp="20210721 11:56:09.848" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 11:56:09.833" endtime="20210721 11:56:09.848"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 11:56:09.848" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:09.869"/>
</kw>
<msg timestamp="20210721 11:56:09.869" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 11:56:09.848" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:09.869" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:09.869"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:10.787" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:10.803" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:02 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:10.803" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:10.803"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:10.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:10.803" endtime="20210721 11:56:10.803"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:10.803" endtime="20210721 11:56:10.803"/>
</kw>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:10.803"/>
</kw>
<status status="PASS" starttime="20210721 11:56:09.869" endtime="20210721 11:56:10.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:10.818" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:10.803" endtime="20210721 11:56:10.818"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:10.818" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:10.818" endtime="20210721 11:56:10.818"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:10.818" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:10.818" endtime="20210721 11:56:10.818"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:11.720" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:11.720" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:03 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:11.720" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:10.818" endtime="20210721 11:56:11.720"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:11.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:11.720"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:11.720"/>
</kw>
<status status="PASS" starttime="20210721 11:56:10.803" endtime="20210721 11:56:11.720"/>
</kw>
<status status="PASS" starttime="20210721 11:56:10.803" endtime="20210721 11:56:11.720"/>
</kw>
<status status="PASS" starttime="20210721 11:56:09.785" endtime="20210721 11:56:11.720"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:11.720"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:11.735" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:11.735"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:11.735" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:11.735" endtime="20210721 11:56:11.735"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:11.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:11.735" endtime="20210721 11:56:11.735"/>
</kw>
<msg timestamp="20210721 11:56:11.735" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:11.735"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:11.752" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:56:11.735" endtime="20210721 11:56:11.752"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:11.752" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:11.752" endtime="20210721 11:56:11.752"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:11.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:11.752" endtime="20210721 11:56:11.752"/>
</kw>
<msg timestamp="20210721 11:56:11.752" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:56:11.735" endtime="20210721 11:56:11.752"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:11.773" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 11:56:11.752" endtime="20210721 11:56:11.773"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:11.773" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 11:56:11.773" endtime="20210721 11:56:11.773"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:11.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:11.773" endtime="20210721 11:56:11.773"/>
</kw>
<msg timestamp="20210721 11:56:11.773" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 11:56:11.752" endtime="20210721 11:56:11.773"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:11.789" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 11:56:11.773" endtime="20210721 11:56:11.789"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:11.789" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 11:56:11.789" endtime="20210721 11:56:11.789"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:11.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:11.789" endtime="20210721 11:56:11.789"/>
</kw>
<msg timestamp="20210721 11:56:11.789" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 11:56:11.773" endtime="20210721 11:56:11.789"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:11.805" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:11.789" endtime="20210721 11:56:11.805"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:11.805" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:11.805" endtime="20210721 11:56:11.805"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:11.805" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:11.805" endtime="20210721 11:56:11.805"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:12.706" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:12.706" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:04 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:12.706" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:11.805" endtime="20210721 11:56:12.706"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:12.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:12.706" endtime="20210721 11:56:12.706"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:12.706" endtime="20210721 11:56:12.706"/>
</kw>
<status status="PASS" starttime="20210721 11:56:11.789" endtime="20210721 11:56:12.722"/>
</kw>
<status status="PASS" starttime="20210721 11:56:11.789" endtime="20210721 11:56:12.722"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:12.722" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:12.722"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:56:12.722" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:12.722"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:56:12.722" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:12.722"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:56:13.623" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:56:13.623" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:24:05 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:56:13.623" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:13.623"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:56:13.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.623"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.623"/>
</kw>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:13.623"/>
</kw>
<status status="PASS" starttime="20210721 11:56:12.722" endtime="20210721 11:56:13.623"/>
</kw>
<status status="PASS" starttime="20210721 11:56:11.720" endtime="20210721 11:56:13.623"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.623"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.639" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.639"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.639" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.639" endtime="20210721 11:56:13.639"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.639" endtime="20210721 11:56:13.639"/>
</kw>
<msg timestamp="20210721 11:56:13.639" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.639"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.663" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:56:13.639" endtime="20210721 11:56:13.663"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.663" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.663" endtime="20210721 11:56:13.663"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.663" endtime="20210721 11:56:13.663"/>
</kw>
<msg timestamp="20210721 11:56:13.663" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.639" endtime="20210721 11:56:13.663"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.692" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 11:56:13.663" endtime="20210721 11:56:13.692"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.692" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 11:56:13.692" endtime="20210721 11:56:13.692"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.692" endtime="20210721 11:56:13.693"/>
</kw>
<msg timestamp="20210721 11:56:13.693" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 11:56:13.663" endtime="20210721 11:56:13.693"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.702" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 11:56:13.693" endtime="20210721 11:56:13.702"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.702" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.702"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.702"/>
</kw>
<msg timestamp="20210721 11:56:13.702" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 11:56:13.693" endtime="20210721 11:56:13.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.702"/>
</kw>
<status status="PASS" starttime="20210721 11:56:13.623" endtime="20210721 11:56:13.702"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.702"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.718" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.718"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.718" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.718" endtime="20210721 11:56:13.718"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.718" endtime="20210721 11:56:13.718"/>
</kw>
<msg timestamp="20210721 11:56:13.718" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.718"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.749" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:56:13.718" endtime="20210721 11:56:13.749"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.749" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.749" endtime="20210721 11:56:13.749"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.749" endtime="20210721 11:56:13.749"/>
</kw>
<msg timestamp="20210721 11:56:13.749" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.718" endtime="20210721 11:56:13.749"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.765" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 11:56:13.749" endtime="20210721 11:56:13.765"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.765" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 11:56:13.765" endtime="20210721 11:56:13.765"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.765" endtime="20210721 11:56:13.765"/>
</kw>
<msg timestamp="20210721 11:56:13.765" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 11:56:13.749" endtime="20210721 11:56:13.765"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.792" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 11:56:13.765" endtime="20210721 11:56:13.792"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.792" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.792"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.792"/>
</kw>
<msg timestamp="20210721 11:56:13.792" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210721 11:56:13.765" endtime="20210721 11:56:13.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.792"/>
</kw>
<status status="PASS" starttime="20210721 11:56:13.702" endtime="20210721 11:56:13.792"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.792"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.807" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.807"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.807" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.807" endtime="20210721 11:56:13.807"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.807" endtime="20210721 11:56:13.807"/>
</kw>
<msg timestamp="20210721 11:56:13.807" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.807"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.823" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:56:13.807" endtime="20210721 11:56:13.823"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.823" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.823" endtime="20210721 11:56:13.823"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.823" endtime="20210721 11:56:13.823"/>
</kw>
<msg timestamp="20210721 11:56:13.823" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:56:13.807" endtime="20210721 11:56:13.823"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.839" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210721 11:56:13.823" endtime="20210721 11:56:13.839"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.839" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210721 11:56:13.839" endtime="20210721 11:56:13.839"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.839" endtime="20210721 11:56:13.839"/>
</kw>
<msg timestamp="20210721 11:56:13.839" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210721 11:56:13.823" endtime="20210721 11:56:13.839"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:56:13.854" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210721 11:56:13.839" endtime="20210721 11:56:13.854"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:56:13.854" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210721 11:56:13.854" endtime="20210721 11:56:13.854"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:56:13.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:56:13.854" endtime="20210721 11:56:13.854"/>
</kw>
<msg timestamp="20210721 11:56:13.854" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210721 11:56:13.839" endtime="20210721 11:56:13.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.854" endtime="20210721 11:56:13.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</kw>
<status status="PASS" starttime="20210721 11:56:13.792" endtime="20210721 11:56:13.870"/>
</iter>
<status status="PASS" starttime="20210721 11:55:58.251" endtime="20210721 11:56:13.870"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>******************************Temperature set for all rack sensors*********************************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</kw>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:56:13.870"/>
</kw>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:56:13.870"/>
</branch>
<branch type="ELSE IF" condition="${current_temperature}==${sensor_point_hot_temp}">
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<status status="NOT RUN" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for temperature changes</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</branch>
<status status="PASS" starttime="20210721 11:55:57.312" endtime="20210721 11:56:13.870"/>
</if>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:56:13.870"/>
</kw>
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:56:13.870" endtime="20210721 11:56:13.870"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:57:13.883" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210721 11:56:13.870" endtime="20210721 11:57:13.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:13.883" endtime="20210721 11:57:13.883"/>
</kw>
<status status="PASS" starttime="20210721 11:56:13.870" endtime="20210721 11:57:13.883"/>
</kw>
<kw name="timeRemainingToFinishTest">
<var>${time_left}</var>
<arg>${stop_time}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210721 11:57:13.883" level="INFO">${current_time} = 11:57:13</msg>
<status status="PASS" starttime="20210721 11:57:13.883" endtime="20210721 11:57:13.883"/>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<var>${time_left_in_loop}</var>
<arg>${stop_time}</arg>
<arg>${current_time}</arg>
<arg>timer</arg>
<arg>exclude_millis=yes</arg>
<doc>Subtracts time from another time and returns the resulting time.</doc>
<msg timestamp="20210721 11:57:13.883" level="INFO">${time_left_in_loop} = 00:17:22</msg>
<status status="PASS" starttime="20210721 11:57:13.883" endtime="20210721 11:57:13.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_left_in_loop}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:13.883" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Convert Time" library="DateTime">
<var>${time}</var>
<arg>${time_left_in_loop}</arg>
<doc>Converts between supported `time formats`.</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">${time} = 1042.0</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${time_int}</var>
<arg>${time}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">${time_int} = 1042</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<msg timestamp="20210721 11:57:13.889" level="INFO">${time_left} = 1042</msg>
<status status="PASS" starttime="20210721 11:57:13.883" endtime="20210721 11:57:13.889"/>
</kw>
<if>
<branch type="IF" condition="${time_left} &lt; 1">
<kw name="Get Current Date" library="DateTime">
<var>${t}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>exit time ${t}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</branch>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</if>
<status status="PASS" starttime="20210721 11:55:56.278" endtime="20210721 11:57:13.889"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="writeTemperatureToSensors">
<kw name="getCurrentTemperatureOfSensorsAandB" library="apiresources">
<var>${current_temperature}</var>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:13.889" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:13.889"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:14.822" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:57:14.822" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:06 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:57:14.822" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:14.822"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:14.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:14.822" endtime="20210721 11:57:14.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:14.822" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:14.822" endtime="20210721 11:57:14.822"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.822" endtime="20210721 11:57:14.822"/>
</kw>
<msg timestamp="20210721 11:57:14.822" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:14.822"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.838" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:57:14.822" endtime="20210721 11:57:14.838"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:57:14.838" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:57:14.838" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.838"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:57:14.838" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.838"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.838"/>
</kw>
<msg timestamp="20210721 11:57:14.838" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:14.822" endtime="20210721 11:57:14.838"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Getting temperature of Sensor A-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.838"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.869" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.869"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:14.869" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:57:14.869" endtime="20210721 11:57:14.869"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.869" endtime="20210721 11:57:14.869"/>
</kw>
<msg timestamp="20210721 11:57:14.869" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.869"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.885" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:57:14.869" endtime="20210721 11:57:14.885"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:14.885" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:57:14.885" endtime="20210721 11:57:14.885"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.885" endtime="20210721 11:57:14.885"/>
</kw>
<msg timestamp="20210721 11:57:14.891" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:57:14.869" endtime="20210721 11:57:14.891"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.907" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:57:14.891" endtime="20210721 11:57:14.907"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:14.907" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:14.907" endtime="20210721 11:57:14.907"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.907" endtime="20210721 11:57:14.907"/>
</kw>
<msg timestamp="20210721 11:57:14.907" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:14.891" endtime="20210721 11:57:14.907"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.923" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:57:14.907" endtime="20210721 11:57:14.923"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:14.923" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:14.923" endtime="20210721 11:57:14.923"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.923" endtime="20210721 11:57:14.923"/>
</kw>
<msg timestamp="20210721 11:57:14.923" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:14.907" endtime="20210721 11:57:14.923"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${current_temp}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].pointCurrent.value</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${field_value_list} = [65]</msg>
<status status="PASS" starttime="20210721 11:57:14.923" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${field_value} = 65</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<msg timestamp="20210721 11:57:14.938" level="INFO">${current_temp} = 65</msg>
<status status="PASS" starttime="20210721 11:57:14.923" endtime="20210721 11:57:14.938"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</branch>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</if>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</branch>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</if>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.938"/>
</iter>
<status status="PASS" starttime="20210721 11:57:14.838" endtime="20210721 11:57:14.938"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>Current temperature of Sensor A is:${current_temp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${current_temp}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<msg timestamp="20210721 11:57:14.938" level="INFO">${current_temperature} = 65</msg>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:14.938"/>
</kw>
<if>
<branch type="IF" condition="${current_temperature}==${sensor_point_cooling_temp}">
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Fetch the number of rack sensors -----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:14.938" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:14.938"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:15.857" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:57:15.857" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:07 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:57:15.857" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:15.857"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:15.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:15.857" endtime="20210721 11:57:15.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:15.873" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:15.873" endtime="20210721 11:57:15.873"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.873" endtime="20210721 11:57:15.873"/>
</kw>
<msg timestamp="20210721 11:57:15.873" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:15.873"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:15.909" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:57:15.873" endtime="20210721 11:57:15.909"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:57:15.909" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:57:15.909" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:57:15.909" endtime="20210721 11:57:15.909"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:57:15.925" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:15.909" endtime="20210721 11:57:15.925"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:15.925"/>
</kw>
<msg timestamp="20210721 11:57:15.925" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:15.873" endtime="20210721 11:57:15.925"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for all sensor points-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:15.925"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:15.925"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:15.940" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:15.940"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:15.940" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:15.940" endtime="20210721 11:57:15.940"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.940" endtime="20210721 11:57:15.940"/>
</kw>
<msg timestamp="20210721 11:57:15.940" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:15.940"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:15.956" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:15.940" endtime="20210721 11:57:15.956"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:15.956" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:15.956" endtime="20210721 11:57:15.956"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.956" endtime="20210721 11:57:15.956"/>
</kw>
<msg timestamp="20210721 11:57:15.956" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:15.940" endtime="20210721 11:57:15.956"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:15.971" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:57:15.956" endtime="20210721 11:57:15.971"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:15.971" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:15.971" endtime="20210721 11:57:15.971"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.971" endtime="20210721 11:57:15.971"/>
</kw>
<msg timestamp="20210721 11:57:15.971" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:15.956" endtime="20210721 11:57:15.971"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:15.994" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:57:15.971" endtime="20210721 11:57:15.994"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:15.994" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:15.994" endtime="20210721 11:57:15.994"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:15.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:15.994" endtime="20210721 11:57:15.994"/>
</kw>
<msg timestamp="20210721 11:57:15.996" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:15.971" endtime="20210721 11:57:15.996"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:15.996" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:15.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:15.996" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:15.996"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:15.996" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:15.996"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:16.890" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:16.905" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:08 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:16.905" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:16.905"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:16.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:16.905" endtime="20210721 11:57:16.905"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:16.905" endtime="20210721 11:57:16.914"/>
</kw>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:16.914"/>
</kw>
<status status="PASS" starttime="20210721 11:57:15.996" endtime="20210721 11:57:16.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:16.915" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:16.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:16.915" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:16.915"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:16.915" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:16.915"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:17.823" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:17.823" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:09 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:17.823" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:17.823"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:17.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:17.823" endtime="20210721 11:57:17.823"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:17.823" endtime="20210721 11:57:17.823"/>
</kw>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:17.823"/>
</kw>
<status status="PASS" starttime="20210721 11:57:16.915" endtime="20210721 11:57:17.823"/>
</kw>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:17.823"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:17.823" endtime="20210721 11:57:17.823"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:17.845" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:17.838" endtime="20210721 11:57:17.845"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:17.845" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:17.845" endtime="20210721 11:57:17.845"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:17.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:17.845" endtime="20210721 11:57:17.845"/>
</kw>
<msg timestamp="20210721 11:57:17.845" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:17.823" endtime="20210721 11:57:17.845"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:17.860" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:17.845" endtime="20210721 11:57:17.860"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:17.860" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:17.860" endtime="20210721 11:57:17.860"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:17.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:17.860" endtime="20210721 11:57:17.860"/>
</kw>
<msg timestamp="20210721 11:57:17.860" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:17.845" endtime="20210721 11:57:17.860"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:17.876" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:57:17.860" endtime="20210721 11:57:17.876"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:17.892" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:57:17.876" endtime="20210721 11:57:17.892"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:17.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:17.892" endtime="20210721 11:57:17.892"/>
</kw>
<msg timestamp="20210721 11:57:17.892" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:57:17.860" endtime="20210721 11:57:17.892"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:57:17.892" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:17.907"/>
</kw>
<msg timestamp="20210721 11:57:17.907" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:57:17.892" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:17.907" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:17.907"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:18.808" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:18.808" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:10 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:18.808" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:18.808"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:18.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:18.808" endtime="20210721 11:57:18.824"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:18.824"/>
</kw>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:18.824"/>
</kw>
<status status="PASS" starttime="20210721 11:57:17.907" endtime="20210721 11:57:18.824"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:18.824" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:18.824"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:18.824" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:18.824"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:18.824" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:18.824"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:19.730" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:19.730" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:11 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:19.730" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:19.730"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:19.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:19.730"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:19.730"/>
</kw>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:19.730"/>
</kw>
<status status="PASS" starttime="20210721 11:57:18.824" endtime="20210721 11:57:19.730"/>
</kw>
<status status="PASS" starttime="20210721 11:57:17.823" endtime="20210721 11:57:19.730"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:19.730"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:19.747" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:19.747"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:19.747" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:19.747" endtime="20210721 11:57:19.747"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:19.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:19.747" endtime="20210721 11:57:19.747"/>
</kw>
<msg timestamp="20210721 11:57:19.747" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:19.747"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:19.778" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:19.747" endtime="20210721 11:57:19.778"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:19.778" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:19.778" endtime="20210721 11:57:19.778"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:19.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:19.778" endtime="20210721 11:57:19.778"/>
</kw>
<msg timestamp="20210721 11:57:19.778" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:19.747" endtime="20210721 11:57:19.778"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:19.794" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:57:19.778" endtime="20210721 11:57:19.794"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:19.794" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:57:19.794" endtime="20210721 11:57:19.794"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:19.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:19.794" endtime="20210721 11:57:19.794"/>
</kw>
<msg timestamp="20210721 11:57:19.794" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:57:19.778" endtime="20210721 11:57:19.794"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:57:19.794" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:19.810"/>
</kw>
<msg timestamp="20210721 11:57:19.810" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:57:19.794" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:19.810" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:19.810"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:20.726" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:20.726" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:12 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:20.726" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:20.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:20.726"/>
</kw>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:20.726"/>
</kw>
<status status="PASS" starttime="20210721 11:57:19.810" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:20.726" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:20.726" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:20.726" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:20.726"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:21.650" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:21.650" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:13 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:21.650" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:21.650"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:21.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:21.650"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:21.650"/>
</kw>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:21.650"/>
</kw>
<status status="PASS" starttime="20210721 11:57:20.726" endtime="20210721 11:57:21.650"/>
</kw>
<status status="PASS" starttime="20210721 11:57:19.730" endtime="20210721 11:57:21.650"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:21.650"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:21.667" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:21.667"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:21.667" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:21.667" endtime="20210721 11:57:21.667"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:21.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:21.667" endtime="20210721 11:57:21.667"/>
</kw>
<msg timestamp="20210721 11:57:21.667" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:21.667"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:21.683" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:21.667" endtime="20210721 11:57:21.683"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:21.683" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:21.683" endtime="20210721 11:57:21.683"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:21.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:21.683" endtime="20210721 11:57:21.683"/>
</kw>
<msg timestamp="20210721 11:57:21.683" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:21.667" endtime="20210721 11:57:21.683"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:21.698" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:57:21.683" endtime="20210721 11:57:21.698"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:21.698" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:57:21.698" endtime="20210721 11:57:21.698"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:21.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:21.698" endtime="20210721 11:57:21.698"/>
</kw>
<msg timestamp="20210721 11:57:21.698" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:57:21.683" endtime="20210721 11:57:21.698"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:57:21.698" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:21.714"/>
</kw>
<msg timestamp="20210721 11:57:21.714" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:57:21.698" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:21.714" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:21.714"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:22.630" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:22.630" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:14 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:22.630" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:22.630"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:22.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:22.630" endtime="20210721 11:57:22.645"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:22.645" endtime="20210721 11:57:22.645"/>
</kw>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:22.646"/>
</kw>
<status status="PASS" starttime="20210721 11:57:21.714" endtime="20210721 11:57:22.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:22.646" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:22.646"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:22.646" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:22.646"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:22.646" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:22.646"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:23.537" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:23.537" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:14 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:23.537" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:23.537"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:23.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:23.537" endtime="20210721 11:57:23.537"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:23.537" endtime="20210721 11:57:23.537"/>
</kw>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:23.537"/>
</kw>
<status status="PASS" starttime="20210721 11:57:22.646" endtime="20210721 11:57:23.537"/>
</kw>
<status status="PASS" starttime="20210721 11:57:21.650" endtime="20210721 11:57:23.537"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:23.552" endtime="20210721 11:57:23.553"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:23.569" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:23.553" endtime="20210721 11:57:23.569"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:23.569" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:23.569" endtime="20210721 11:57:23.569"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:23.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:23.569" endtime="20210721 11:57:23.569"/>
</kw>
<msg timestamp="20210721 11:57:23.569" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:23.553" endtime="20210721 11:57:23.569"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:23.584" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:23.569" endtime="20210721 11:57:23.584"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:23.584" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:23.584" endtime="20210721 11:57:23.584"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:23.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:23.584" endtime="20210721 11:57:23.584"/>
</kw>
<msg timestamp="20210721 11:57:23.584" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:23.569" endtime="20210721 11:57:23.584"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:23.600" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:57:23.584" endtime="20210721 11:57:23.600"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:23.600" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:57:23.600" endtime="20210721 11:57:23.600"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:23.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:23.600" endtime="20210721 11:57:23.600"/>
</kw>
<msg timestamp="20210721 11:57:23.600" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:57:23.584" endtime="20210721 11:57:23.600"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:57:23.600" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:23.631"/>
</kw>
<msg timestamp="20210721 11:57:23.631" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:57:23.600" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:23.631" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:23.631"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:24.555" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:24.555" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:15 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:24.555" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:24.555"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:24.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:24.555" endtime="20210721 11:57:24.555"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:24.555" endtime="20210721 11:57:24.555"/>
</kw>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:24.555"/>
</kw>
<status status="PASS" starttime="20210721 11:57:23.631" endtime="20210721 11:57:24.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:24.571" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:24.571" endtime="20210721 11:57:24.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:24.571" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:24.571" endtime="20210721 11:57:24.571"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:24.571" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:24.571" endtime="20210721 11:57:24.571"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:25.473" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:25.473" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:16 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:25.489" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:24.571" endtime="20210721 11:57:25.489"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:25.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:25.489" endtime="20210721 11:57:25.492"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:25.492" endtime="20210721 11:57:25.493"/>
</kw>
<status status="PASS" starttime="20210721 11:57:24.571" endtime="20210721 11:57:25.493"/>
</kw>
<status status="PASS" starttime="20210721 11:57:24.555" endtime="20210721 11:57:25.493"/>
</kw>
<status status="PASS" starttime="20210721 11:57:23.537" endtime="20210721 11:57:25.493"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:25.493" endtime="20210721 11:57:25.493"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:25.509" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:25.493" endtime="20210721 11:57:25.509"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:25.509" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:25.509" endtime="20210721 11:57:25.509"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:25.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:25.509" endtime="20210721 11:57:25.509"/>
</kw>
<msg timestamp="20210721 11:57:25.509" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:25.493" endtime="20210721 11:57:25.509"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:25.524" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:25.509" endtime="20210721 11:57:25.524"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:25.524" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:25.524" endtime="20210721 11:57:25.524"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:25.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:25.524" endtime="20210721 11:57:25.524"/>
</kw>
<msg timestamp="20210721 11:57:25.524" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:25.509" endtime="20210721 11:57:25.524"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:25.540" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 11:57:25.524" endtime="20210721 11:57:25.540"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:25.540" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 11:57:25.540" endtime="20210721 11:57:25.540"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:25.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:25.540" endtime="20210721 11:57:25.540"/>
</kw>
<msg timestamp="20210721 11:57:25.540" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 11:57:25.524" endtime="20210721 11:57:25.540"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 11:57:25.540" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:25.558"/>
</kw>
<msg timestamp="20210721 11:57:25.558" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 11:57:25.540" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:25.558" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:25.558"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:26.527" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:26.527" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:17 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:26.527" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:26.527"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:26.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:26.527" endtime="20210721 11:57:26.543"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:26.543"/>
</kw>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:26.543"/>
</kw>
<status status="PASS" starttime="20210721 11:57:25.558" endtime="20210721 11:57:26.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:26.543" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:26.543"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:26.543" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:26.543"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:26.543" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:26.543"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:27.461" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:27.461" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:27.461" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:27.461"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:27.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:27.461"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:27.461"/>
</kw>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:27.461"/>
</kw>
<status status="PASS" starttime="20210721 11:57:26.543" endtime="20210721 11:57:27.461"/>
</kw>
<status status="PASS" starttime="20210721 11:57:25.493" endtime="20210721 11:57:27.461"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:27.461"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:27.477" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:27.477"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:27.477" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:27.477" endtime="20210721 11:57:27.477"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:27.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:27.477" endtime="20210721 11:57:27.477"/>
</kw>
<msg timestamp="20210721 11:57:27.477" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:27.477"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:27.493" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:27.477" endtime="20210721 11:57:27.493"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:27.493" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:27.493" endtime="20210721 11:57:27.493"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:27.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:27.493" endtime="20210721 11:57:27.493"/>
</kw>
<msg timestamp="20210721 11:57:27.493" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:27.477" endtime="20210721 11:57:27.493"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:27.508" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 11:57:27.493" endtime="20210721 11:57:27.508"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:27.508" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 11:57:27.508" endtime="20210721 11:57:27.508"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:27.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:27.508" endtime="20210721 11:57:27.508"/>
</kw>
<msg timestamp="20210721 11:57:27.508" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 11:57:27.493" endtime="20210721 11:57:27.508"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:27.524" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 11:57:27.524" endtime="20210721 11:57:27.524"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:27.524" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 11:57:27.524" endtime="20210721 11:57:27.524"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:27.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:27.524" endtime="20210721 11:57:27.540"/>
</kw>
<msg timestamp="20210721 11:57:27.540" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 11:57:27.508" endtime="20210721 11:57:27.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:27.540" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:27.540"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:27.540" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:27.540"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:27.540" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:27.540"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:28.444" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:28.444" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:19 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:28.444" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:28.444"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:28.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:28.459" endtime="20210721 11:57:28.459"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:28.459" endtime="20210721 11:57:28.463"/>
</kw>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:28.463"/>
</kw>
<status status="PASS" starttime="20210721 11:57:27.540" endtime="20210721 11:57:28.463"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:28.463" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:28.463"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:28.463" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:28.463"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:28.463" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:28.463"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:29.364" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:29.364" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:20 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:29.364" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:29.364"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:29.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:29.364" endtime="20210721 11:57:29.364"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:29.364" endtime="20210721 11:57:29.364"/>
</kw>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:29.364"/>
</kw>
<status status="PASS" starttime="20210721 11:57:28.463" endtime="20210721 11:57:29.364"/>
</kw>
<status status="PASS" starttime="20210721 11:57:27.461" endtime="20210721 11:57:29.364"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:29.380" endtime="20210721 11:57:29.380"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:29.411" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:57:29.380" endtime="20210721 11:57:29.411"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:29.411" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:29.411" endtime="20210721 11:57:29.411"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:29.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:29.411" endtime="20210721 11:57:29.411"/>
</kw>
<msg timestamp="20210721 11:57:29.411" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:57:29.380" endtime="20210721 11:57:29.411"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:29.427" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:57:29.411" endtime="20210721 11:57:29.427"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:29.427" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:29.427" endtime="20210721 11:57:29.427"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:29.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:29.427" endtime="20210721 11:57:29.427"/>
</kw>
<msg timestamp="20210721 11:57:29.427" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:57:29.411" endtime="20210721 11:57:29.427"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:29.442" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 11:57:29.427" endtime="20210721 11:57:29.442"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:29.442" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 11:57:29.442" endtime="20210721 11:57:29.442"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:29.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:29.442" endtime="20210721 11:57:29.442"/>
</kw>
<msg timestamp="20210721 11:57:29.442" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 11:57:29.427" endtime="20210721 11:57:29.442"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 11:57:29.442" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:29.465"/>
</kw>
<msg timestamp="20210721 11:57:29.465" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 11:57:29.442" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:29.465" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:29.465"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:30.386" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:30.386" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:21 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:30.386" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:30.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:30.386"/>
</kw>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:30.386"/>
</kw>
<status status="PASS" starttime="20210721 11:57:29.465" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:30.386" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:30.386" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:30.386" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:30.386"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:31.300" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:31.300" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:22 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:31.300" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:31.300"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:31.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:31.300" endtime="20210721 11:57:31.300"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.300" endtime="20210721 11:57:31.300"/>
</kw>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:31.315"/>
</kw>
<status status="PASS" starttime="20210721 11:57:30.386" endtime="20210721 11:57:31.315"/>
</kw>
<status status="PASS" starttime="20210721 11:57:29.364" endtime="20210721 11:57:31.315"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.315" endtime="20210721 11:57:31.315"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.347" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:57:31.315" endtime="20210721 11:57:31.347"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.347" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.347" endtime="20210721 11:57:31.347"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.347" endtime="20210721 11:57:31.347"/>
</kw>
<msg timestamp="20210721 11:57:31.347" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.315" endtime="20210721 11:57:31.347"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.369" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:57:31.347" endtime="20210721 11:57:31.369"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.369" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.369" endtime="20210721 11:57:31.369"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.369" endtime="20210721 11:57:31.369"/>
</kw>
<msg timestamp="20210721 11:57:31.369" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.347" endtime="20210721 11:57:31.369"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.384" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 11:57:31.369" endtime="20210721 11:57:31.384"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.384" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 11:57:31.384" endtime="20210721 11:57:31.384"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.384" endtime="20210721 11:57:31.384"/>
</kw>
<msg timestamp="20210721 11:57:31.384" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 11:57:31.369" endtime="20210721 11:57:31.384"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.400" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 11:57:31.384" endtime="20210721 11:57:31.400"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.400" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.400"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.400"/>
</kw>
<msg timestamp="20210721 11:57:31.400" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 11:57:31.384" endtime="20210721 11:57:31.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.400"/>
</kw>
<status status="PASS" starttime="20210721 11:57:31.315" endtime="20210721 11:57:31.400"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.400"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.416" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.416"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.416" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.416" endtime="20210721 11:57:31.416"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.416" endtime="20210721 11:57:31.416"/>
</kw>
<msg timestamp="20210721 11:57:31.416" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.416"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.431" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:57:31.416" endtime="20210721 11:57:31.431"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.431" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.431" endtime="20210721 11:57:31.431"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.431" endtime="20210721 11:57:31.431"/>
</kw>
<msg timestamp="20210721 11:57:31.431" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.416" endtime="20210721 11:57:31.431"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.447" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 11:57:31.431" endtime="20210721 11:57:31.447"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.447" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 11:57:31.447" endtime="20210721 11:57:31.447"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.447" endtime="20210721 11:57:31.447"/>
</kw>
<msg timestamp="20210721 11:57:31.462" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 11:57:31.431" endtime="20210721 11:57:31.462"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.471" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 11:57:31.462" endtime="20210721 11:57:31.471"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.471" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 11:57:31.471" endtime="20210721 11:57:31.471"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.471" endtime="20210721 11:57:31.479"/>
</kw>
<msg timestamp="20210721 11:57:31.479" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210721 11:57:31.462" endtime="20210721 11:57:31.479"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.479" endtime="20210721 11:57:31.479"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.479" endtime="20210721 11:57:31.479"/>
</kw>
<status status="PASS" starttime="20210721 11:57:31.400" endtime="20210721 11:57:31.479"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.481" endtime="20210721 11:57:31.481"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.492" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:57:31.481" endtime="20210721 11:57:31.492"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.492" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.492" endtime="20210721 11:57:31.492"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.492" endtime="20210721 11:57:31.492"/>
</kw>
<msg timestamp="20210721 11:57:31.492" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:57:31.481" endtime="20210721 11:57:31.492"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.512" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:57:31.492" endtime="20210721 11:57:31.512"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.512" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.512" endtime="20210721 11:57:31.512"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.512" endtime="20210721 11:57:31.512"/>
</kw>
<msg timestamp="20210721 11:57:31.512" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:57:31.492" endtime="20210721 11:57:31.512"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.533" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210721 11:57:31.512" endtime="20210721 11:57:31.533"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.533" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210721 11:57:31.533" endtime="20210721 11:57:31.533"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.533" endtime="20210721 11:57:31.533"/>
</kw>
<msg timestamp="20210721 11:57:31.533" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210721 11:57:31.512" endtime="20210721 11:57:31.533"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:31.551" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210721 11:57:31.533" endtime="20210721 11:57:31.551"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:31.551" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210721 11:57:31.551" endtime="20210721 11:57:31.551"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:31.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:31.551" endtime="20210721 11:57:31.551"/>
</kw>
<msg timestamp="20210721 11:57:31.551" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210721 11:57:31.533" endtime="20210721 11:57:31.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.551" endtime="20210721 11:57:31.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</kw>
<status status="PASS" starttime="20210721 11:57:31.481" endtime="20210721 11:57:31.554"/>
</iter>
<status status="PASS" starttime="20210721 11:57:15.925" endtime="20210721 11:57:31.554"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>******************************Temperature set for all rack sensors*********************************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</kw>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:31.554"/>
</kw>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:31.554"/>
</branch>
<branch type="ELSE IF" condition="${current_temperature}==${sensor_point_hot_temp}">
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<status status="NOT RUN" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for temperature changes</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</branch>
<status status="PASS" starttime="20210721 11:57:14.938" endtime="20210721 11:57:31.554"/>
</if>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:57:31.554"/>
</kw>
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:31.554" endtime="20210721 11:57:31.554"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210721 11:57:31.554" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<status status="PASS" starttime="20210721 11:57:31.554" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="timeRemainingToFinishTest">
<var>${time_left}</var>
<arg>${stop_time}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${current_time} = 11:58:31</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<var>${time_left_in_loop}</var>
<arg>${stop_time}</arg>
<arg>${current_time}</arg>
<arg>timer</arg>
<arg>exclude_millis=yes</arg>
<doc>Subtracts time from another time and returns the resulting time.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${time_left_in_loop} = 00:16:04</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_left_in_loop}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Convert Time" library="DateTime">
<var>${time}</var>
<arg>${time_left_in_loop}</arg>
<doc>Converts between supported `time formats`.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${time} = 964.0</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${time_int}</var>
<arg>${time}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${time_int} = 964</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<msg timestamp="20210721 11:58:31.564" level="INFO">${time_left} = 964</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<if>
<branch type="IF" condition="${time_left} &lt; 1">
<kw name="Get Current Date" library="DateTime">
<var>${t}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>exit time ${t}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</branch>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</if>
<status status="PASS" starttime="20210721 11:57:13.889" endtime="20210721 11:58:31.564"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="writeTemperatureToSensors">
<kw name="getCurrentTemperatureOfSensorsAandB" library="apiresources">
<var>${current_temperature}</var>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:31.564" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:31.564"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:32.451" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:58:32.451" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:23 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '446', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":100}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":100}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:58:32.451" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:32.451"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:32.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:32.451" endtime="20210721 11:58:32.451"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:32.451" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:58:32.451" endtime="20210721 11:58:32.451"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.451" endtime="20210721 11:58:32.451"/>
</kw>
<msg timestamp="20210721 11:58:32.451" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:32.451"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.466" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 100}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poi...</msg>
<status status="PASS" starttime="20210721 11:58:32.451" endtime="20210721 11:58:32.466"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:58:32.482" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:58:32.482" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:58:32.466" endtime="20210721 11:58:32.482"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:58:32.482" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.482"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.482"/>
</kw>
<msg timestamp="20210721 11:58:32.482" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:58:32.451" endtime="20210721 11:58:32.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Getting temperature of Sensor A-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.482"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.497" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.497"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:32.497" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:32.497" endtime="20210721 11:58:32.497"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.497" endtime="20210721 11:58:32.497"/>
</kw>
<msg timestamp="20210721 11:58:32.497" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.497"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.513" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:32.497" endtime="20210721 11:58:32.513"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:32.513" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:32.513" endtime="20210721 11:58:32.513"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.513" endtime="20210721 11:58:32.513"/>
</kw>
<msg timestamp="20210721 11:58:32.520" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:32.497" endtime="20210721 11:58:32.520"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.535" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:58:32.520" endtime="20210721 11:58:32.535"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:32.535" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:32.535" endtime="20210721 11:58:32.535"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.535" endtime="20210721 11:58:32.535"/>
</kw>
<msg timestamp="20210721 11:58:32.535" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:32.520" endtime="20210721 11:58:32.535"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.551" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:58:32.535" endtime="20210721 11:58:32.551"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:32.551" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:32.551" endtime="20210721 11:58:32.551"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.551" endtime="20210721 11:58:32.551"/>
</kw>
<msg timestamp="20210721 11:58:32.551" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:32.535" endtime="20210721 11:58:32.551"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${current_temp}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].pointCurrent.value</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${field_value_list} = [100]</msg>
<status status="PASS" starttime="20210721 11:58:32.551" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${field_value} = 100</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<msg timestamp="20210721 11:58:32.566" level="INFO">${current_temp} = 100</msg>
<status status="PASS" starttime="20210721 11:58:32.551" endtime="20210721 11:58:32.566"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</branch>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</if>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</branch>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</if>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.566"/>
</iter>
<status status="PASS" starttime="20210721 11:58:32.482" endtime="20210721 11:58:32.566"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>Current temperature of Sensor A is:${current_temp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${current_temp}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<msg timestamp="20210721 11:58:32.566" level="INFO">${current_temperature} = 100</msg>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:32.566"/>
</kw>
<if>
<branch type="IF" condition="${current_temperature}==${sensor_point_cooling_temp}">
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<status status="NOT RUN" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</branch>
<branch type="ELSE IF" condition="${current_temperature}==${sensor_point_hot_temp}">
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:32.566" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:32.566"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:33.468" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:58:33.468" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:24 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '446', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":100}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":100}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:58:33.468" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:33.468"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:33.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:33.468" endtime="20210721 11:58:33.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:33.468" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:58:33.468" endtime="20210721 11:58:33.468"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.468" endtime="20210721 11:58:33.484"/>
</kw>
<msg timestamp="20210721 11:58:33.484" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:33.484"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:33.499" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 100}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poi...</msg>
<status status="PASS" starttime="20210721 11:58:33.484" endtime="20210721 11:58:33.499"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:58:33.499" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:58:33.499" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.499"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:58:33.499" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.499"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.499"/>
</kw>
<msg timestamp="20210721 11:58:33.499" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:58:33.484" endtime="20210721 11:58:33.499"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.499"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.499"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:33.521" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.521"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:33.521" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:33.521" endtime="20210721 11:58:33.521"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.521" endtime="20210721 11:58:33.521"/>
</kw>
<msg timestamp="20210721 11:58:33.521" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.521"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:33.537" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:33.521" endtime="20210721 11:58:33.537"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:33.537" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:33.537" endtime="20210721 11:58:33.537"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.537" endtime="20210721 11:58:33.537"/>
</kw>
<msg timestamp="20210721 11:58:33.537" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:33.521" endtime="20210721 11:58:33.537"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:33.553" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:58:33.537" endtime="20210721 11:58:33.553"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:33.553" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:33.553" endtime="20210721 11:58:33.553"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.553" endtime="20210721 11:58:33.568"/>
</kw>
<msg timestamp="20210721 11:58:33.568" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:33.537" endtime="20210721 11:58:33.568"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:33.568" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:58:33.568" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<msg timestamp="20210721 11:58:33.584" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:33.568" endtime="20210721 11:58:33.584"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</branch>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</if>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</branch>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</if>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.584"/>
</iter>
<status status="PASS" starttime="20210721 11:58:33.499" endtime="20210721 11:58:33.584"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:33.584" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:33.584"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:34.523" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:34.523" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:25 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:34.523" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:34.523"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:34.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:34.539"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:34.539"/>
</kw>
<status status="PASS" starttime="20210721 11:58:33.584" endtime="20210721 11:58:34.539"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:34.539" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:34.539"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:34.539" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:34.539"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:34.539" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:34.539"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:35.440" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:35.440" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:26 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:35.440" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:35.440"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:35.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:35.440" endtime="20210721 11:58:35.440"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:35.440" endtime="20210721 11:58:35.440"/>
</kw>
<status status="PASS" starttime="20210721 11:58:34.539" endtime="20210721 11:58:35.440"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:35.440" endtime="20210721 11:58:35.440"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.471" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:35.455" endtime="20210721 11:58:35.471"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.471" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:35.471" endtime="20210721 11:58:35.471"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.471" endtime="20210721 11:58:35.471"/>
</kw>
<msg timestamp="20210721 11:58:35.471" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:35.455" endtime="20210721 11:58:35.471"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.487" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:35.471" endtime="20210721 11:58:35.487"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.487" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:35.487" endtime="20210721 11:58:35.487"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.487" endtime="20210721 11:58:35.487"/>
</kw>
<msg timestamp="20210721 11:58:35.487" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:35.471" endtime="20210721 11:58:35.487"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.502" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:58:35.487" endtime="20210721 11:58:35.502"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.502" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:35.502" endtime="20210721 11:58:35.502"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.502" endtime="20210721 11:58:35.502"/>
</kw>
<msg timestamp="20210721 11:58:35.502" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:58:35.487" endtime="20210721 11:58:35.502"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.518" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:58:35.502" endtime="20210721 11:58:35.518"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.524" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:35.518" endtime="20210721 11:58:35.524"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:35.524"/>
</kw>
<msg timestamp="20210721 11:58:35.524" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:58:35.502" endtime="20210721 11:58:35.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:35.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:35.524"/>
</kw>
<status status="PASS" starttime="20210721 11:58:35.440" endtime="20210721 11:58:35.524"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.540" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:35.540"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.540" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:35.540" endtime="20210721 11:58:35.540"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.540" endtime="20210721 11:58:35.540"/>
</kw>
<msg timestamp="20210721 11:58:35.540" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:35.540"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.556" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:35.540" endtime="20210721 11:58:35.556"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.556" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:35.556" endtime="20210721 11:58:35.556"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.556" endtime="20210721 11:58:35.556"/>
</kw>
<msg timestamp="20210721 11:58:35.556" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:35.540" endtime="20210721 11:58:35.556"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.571" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:58:35.556" endtime="20210721 11:58:35.571"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.571" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:58:35.571" endtime="20210721 11:58:35.571"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.571" endtime="20210721 11:58:35.571"/>
</kw>
<msg timestamp="20210721 11:58:35.571" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:58:35.556" endtime="20210721 11:58:35.571"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:58:35.571" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:35.587"/>
</kw>
<msg timestamp="20210721 11:58:35.587" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:58:35.571" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:35.587" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:35.587"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:36.488" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:36.488" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:27 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:36.488" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:36.488"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:36.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:36.488" endtime="20210721 11:58:36.488"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:36.488" endtime="20210721 11:58:36.488"/>
</kw>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:36.488"/>
</kw>
<status status="PASS" starttime="20210721 11:58:35.587" endtime="20210721 11:58:36.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:36.504" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:36.504"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:36.504" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:36.504"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:36.504" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:36.504"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:37.405" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:37.405" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:28 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:37.405" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:37.405"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:37.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:37.405" endtime="20210721 11:58:37.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:37.405" endtime="20210721 11:58:37.405"/>
</kw>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:37.405"/>
</kw>
<status status="PASS" starttime="20210721 11:58:36.504" endtime="20210721 11:58:37.405"/>
</kw>
<status status="PASS" starttime="20210721 11:58:35.524" endtime="20210721 11:58:37.405"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:37.427" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:37.405" endtime="20210721 11:58:37.427"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:37.427" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:37.427" endtime="20210721 11:58:37.427"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:37.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:37.427" endtime="20210721 11:58:37.443"/>
</kw>
<msg timestamp="20210721 11:58:37.443" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:37.405" endtime="20210721 11:58:37.443"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:37.458" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:37.443" endtime="20210721 11:58:37.458"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:37.458" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:37.458" endtime="20210721 11:58:37.458"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:37.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:37.458" endtime="20210721 11:58:37.458"/>
</kw>
<msg timestamp="20210721 11:58:37.458" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:37.443" endtime="20210721 11:58:37.458"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:37.474" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:58:37.458" endtime="20210721 11:58:37.474"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:37.474" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:58:37.474" endtime="20210721 11:58:37.474"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:37.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:37.474" endtime="20210721 11:58:37.474"/>
</kw>
<msg timestamp="20210721 11:58:37.474" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:58:37.458" endtime="20210721 11:58:37.474"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:58:37.474" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:37.490"/>
</kw>
<msg timestamp="20210721 11:58:37.490" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:58:37.474" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:37.490" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:37.490"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:38.360" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:38.360" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:29 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:38.360" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:38.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:38.360"/>
</kw>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:38.360"/>
</kw>
<status status="PASS" starttime="20210721 11:58:37.490" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:38.360" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:38.360" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:38.360" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:38.360"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:39.245" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:39.245" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:30 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:39.245" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:39.245"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:39.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:39.245" endtime="20210721 11:58:39.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:39.245" endtime="20210721 11:58:39.245"/>
</kw>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:39.245"/>
</kw>
<status status="PASS" starttime="20210721 11:58:38.360" endtime="20210721 11:58:39.245"/>
</kw>
<status status="PASS" starttime="20210721 11:58:37.405" endtime="20210721 11:58:39.245"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:39.292" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:39.261" endtime="20210721 11:58:39.292"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:39.292" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:39.292" endtime="20210721 11:58:39.292"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:39.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:39.292" endtime="20210721 11:58:39.292"/>
</kw>
<msg timestamp="20210721 11:58:39.292" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:39.245" endtime="20210721 11:58:39.292"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:39.308" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:39.292" endtime="20210721 11:58:39.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:39.308" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:39.308" endtime="20210721 11:58:39.308"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:39.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:39.308" endtime="20210721 11:58:39.308"/>
</kw>
<msg timestamp="20210721 11:58:39.308" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:39.292" endtime="20210721 11:58:39.308"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:39.330" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:58:39.308" endtime="20210721 11:58:39.330"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:39.330" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:58:39.330" endtime="20210721 11:58:39.330"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:39.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:39.330" endtime="20210721 11:58:39.330"/>
</kw>
<msg timestamp="20210721 11:58:39.330" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:58:39.308" endtime="20210721 11:58:39.330"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:39.342" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:58:39.330" endtime="20210721 11:58:39.342"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:39.342" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:58:39.342" endtime="20210721 11:58:39.342"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:39.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:39.342" endtime="20210721 11:58:39.342"/>
</kw>
<msg timestamp="20210721 11:58:39.342" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:58:39.330" endtime="20210721 11:58:39.342"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:39.342" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:39.342" endtime="20210721 11:58:39.350"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:39.351" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:39.351" endtime="20210721 11:58:39.351"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:39.351" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:39.351" endtime="20210721 11:58:39.351"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:40.241" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:40.241" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:40.241" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:39.351" endtime="20210721 11:58:40.241"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:40.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:40.241" endtime="20210721 11:58:40.249"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:40.249" endtime="20210721 11:58:40.249"/>
</kw>
<status status="PASS" starttime="20210721 11:58:39.342" endtime="20210721 11:58:40.249"/>
</kw>
<status status="PASS" starttime="20210721 11:58:39.342" endtime="20210721 11:58:40.249"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:40.261" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:40.259" endtime="20210721 11:58:40.261"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:40.261" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:40.261" endtime="20210721 11:58:40.261"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:40.261" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:40.261" endtime="20210721 11:58:40.261"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:41.169" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:41.169" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:32 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:41.169" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:40.261" endtime="20210721 11:58:41.169"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:41.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:41.169" endtime="20210721 11:58:41.180"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:41.180" endtime="20210721 11:58:41.180"/>
</kw>
<status status="PASS" starttime="20210721 11:58:40.259" endtime="20210721 11:58:41.180"/>
</kw>
<status status="PASS" starttime="20210721 11:58:40.249" endtime="20210721 11:58:41.180"/>
</kw>
<status status="PASS" starttime="20210721 11:58:39.245" endtime="20210721 11:58:41.182"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:41.200" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:41.182" endtime="20210721 11:58:41.200"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:41.202" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:41.200" endtime="20210721 11:58:41.202"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:41.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:41.202" endtime="20210721 11:58:41.202"/>
</kw>
<msg timestamp="20210721 11:58:41.202" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:41.182" endtime="20210721 11:58:41.202"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:41.213" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:41.202" endtime="20210721 11:58:41.213"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:41.213" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:41.213" endtime="20210721 11:58:41.213"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:41.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:41.213" endtime="20210721 11:58:41.213"/>
</kw>
<msg timestamp="20210721 11:58:41.213" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:41.202" endtime="20210721 11:58:41.213"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:41.233" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:58:41.213" endtime="20210721 11:58:41.233"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:41.233" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:58:41.233" endtime="20210721 11:58:41.233"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:41.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:41.233" endtime="20210721 11:58:41.233"/>
</kw>
<msg timestamp="20210721 11:58:41.233" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:58:41.213" endtime="20210721 11:58:41.233"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:58:41.233" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:41.254"/>
</kw>
<msg timestamp="20210721 11:58:41.254" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:58:41.233" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:41.254" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:41.254"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:42.213" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:42.213" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:33 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:42.213" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:42.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:42.213"/>
</kw>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:42.213"/>
</kw>
<status status="PASS" starttime="20210721 11:58:41.254" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:42.213" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:42.213" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:42.213" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:42.213"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:43.124" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:43.124" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:43.126" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:43.126"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:43.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:43.126" endtime="20210721 11:58:43.126"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:43.126" endtime="20210721 11:58:43.126"/>
</kw>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:43.126"/>
</kw>
<status status="PASS" starttime="20210721 11:58:42.213" endtime="20210721 11:58:43.126"/>
</kw>
<status status="PASS" starttime="20210721 11:58:41.182" endtime="20210721 11:58:43.126"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:43.146" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:43.126" endtime="20210721 11:58:43.146"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:43.146" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:43.146" endtime="20210721 11:58:43.146"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:43.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:43.146" endtime="20210721 11:58:43.146"/>
</kw>
<msg timestamp="20210721 11:58:43.146" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:43.126" endtime="20210721 11:58:43.146"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:43.157" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:43.146" endtime="20210721 11:58:43.157"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:43.165" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:43.157" endtime="20210721 11:58:43.165"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:43.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:43.165" endtime="20210721 11:58:43.165"/>
</kw>
<msg timestamp="20210721 11:58:43.165" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:43.146" endtime="20210721 11:58:43.165"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:43.177" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 11:58:43.165" endtime="20210721 11:58:43.177"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:43.177" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 11:58:43.177" endtime="20210721 11:58:43.177"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:43.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:43.177" endtime="20210721 11:58:43.177"/>
</kw>
<msg timestamp="20210721 11:58:43.177" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 11:58:43.165" endtime="20210721 11:58:43.177"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 11:58:43.177" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:43.197"/>
</kw>
<msg timestamp="20210721 11:58:43.197" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 11:58:43.177" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:43.197" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:43.197"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:44.086" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:44.086" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:35 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:44.094" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:44.094"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:44.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:44.094" endtime="20210721 11:58:44.094"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:44.094" endtime="20210721 11:58:44.094"/>
</kw>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:44.094"/>
</kw>
<status status="PASS" starttime="20210721 11:58:43.197" endtime="20210721 11:58:44.094"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:44.094" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:44.094" endtime="20210721 11:58:44.094"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:44.104" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:44.104" endtime="20210721 11:58:44.104"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:44.106" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:44.104" endtime="20210721 11:58:44.106"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:45.057" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:45.057" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:36 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:45.057" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:44.106" endtime="20210721 11:58:45.057"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:45.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:45.057" endtime="20210721 11:58:45.057"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:45.057" endtime="20210721 11:58:45.057"/>
</kw>
<status status="PASS" starttime="20210721 11:58:44.094" endtime="20210721 11:58:45.057"/>
</kw>
<status status="PASS" starttime="20210721 11:58:44.094" endtime="20210721 11:58:45.057"/>
</kw>
<status status="PASS" starttime="20210721 11:58:43.126" endtime="20210721 11:58:45.057"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:45.080" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:45.057" endtime="20210721 11:58:45.080"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:45.080" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:45.080" endtime="20210721 11:58:45.080"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:45.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:45.080" endtime="20210721 11:58:45.080"/>
</kw>
<msg timestamp="20210721 11:58:45.080" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:45.057" endtime="20210721 11:58:45.080"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:45.090" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:45.080" endtime="20210721 11:58:45.090"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:45.090" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:45.090" endtime="20210721 11:58:45.090"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:45.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:45.090" endtime="20210721 11:58:45.090"/>
</kw>
<msg timestamp="20210721 11:58:45.090" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:45.080" endtime="20210721 11:58:45.090"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:45.111" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 11:58:45.098" endtime="20210721 11:58:45.111"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:45.111" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 11:58:45.111" endtime="20210721 11:58:45.111"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:45.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:45.111" endtime="20210721 11:58:45.111"/>
</kw>
<msg timestamp="20210721 11:58:45.111" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 11:58:45.090" endtime="20210721 11:58:45.111"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 11:58:45.111" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:45.141"/>
</kw>
<msg timestamp="20210721 11:58:45.141" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 11:58:45.111" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:45.141" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:45.141"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:46.163" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:46.163" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:37 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:46.163" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:46.163"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:46.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:46.163" endtime="20210721 11:58:46.164"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:46.164" endtime="20210721 11:58:46.165"/>
</kw>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:46.165"/>
</kw>
<status status="PASS" starttime="20210721 11:58:45.141" endtime="20210721 11:58:46.165"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:46.166" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:46.166" endtime="20210721 11:58:46.166"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:46.167" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:46.166" endtime="20210721 11:58:46.167"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:46.167" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:46.167" endtime="20210721 11:58:46.168"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:47.116" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:47.117" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:38 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:47.117" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:46.168" endtime="20210721 11:58:47.117"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:47.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:47.117" endtime="20210721 11:58:47.120"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:47.120" endtime="20210721 11:58:47.121"/>
</kw>
<status status="PASS" starttime="20210721 11:58:46.166" endtime="20210721 11:58:47.121"/>
</kw>
<status status="PASS" starttime="20210721 11:58:46.165" endtime="20210721 11:58:47.121"/>
</kw>
<status status="PASS" starttime="20210721 11:58:45.057" endtime="20210721 11:58:47.121"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:47.151" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:58:47.123" endtime="20210721 11:58:47.151"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:47.151" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:47.151" endtime="20210721 11:58:47.151"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:47.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:47.152" endtime="20210721 11:58:47.152"/>
</kw>
<msg timestamp="20210721 11:58:47.152" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:58:47.122" endtime="20210721 11:58:47.152"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:47.169" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:58:47.153" endtime="20210721 11:58:47.169"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:47.170" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:47.169" endtime="20210721 11:58:47.170"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:47.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:47.170" endtime="20210721 11:58:47.170"/>
</kw>
<msg timestamp="20210721 11:58:47.170" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:58:47.152" endtime="20210721 11:58:47.170"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:47.186" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 11:58:47.171" endtime="20210721 11:58:47.186"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:47.187" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 11:58:47.187" endtime="20210721 11:58:47.187"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:47.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:47.187" endtime="20210721 11:58:47.187"/>
</kw>
<msg timestamp="20210721 11:58:47.187" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 11:58:47.170" endtime="20210721 11:58:47.187"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:47.206" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 11:58:47.188" endtime="20210721 11:58:47.206"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:47.207" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 11:58:47.207" endtime="20210721 11:58:47.207"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:47.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:47.207" endtime="20210721 11:58:47.207"/>
</kw>
<msg timestamp="20210721 11:58:47.208" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 11:58:47.188" endtime="20210721 11:58:47.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:47.210" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:47.209" endtime="20210721 11:58:47.210"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:47.211" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:47.210" endtime="20210721 11:58:47.211"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:47.211" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:47.211" endtime="20210721 11:58:47.212"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:48.209" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:48.210" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:39 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:48.210" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:47.212" endtime="20210721 11:58:48.210"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:48.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:48.211" endtime="20210721 11:58:48.214"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:48.214" endtime="20210721 11:58:48.214"/>
</kw>
<status status="PASS" starttime="20210721 11:58:47.208" endtime="20210721 11:58:48.214"/>
</kw>
<status status="PASS" starttime="20210721 11:58:47.208" endtime="20210721 11:58:48.215"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:48.216" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:58:48.215" endtime="20210721 11:58:48.216"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:58:48.217" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:58:48.216" endtime="20210721 11:58:48.217"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:58:48.217" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:58:48.217" endtime="20210721 11:58:48.217"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:58:49.231" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:58:49.231" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:26:40 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:58:49.232" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:58:48.217" endtime="20210721 11:58:49.232"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:58:49.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:58:49.233" endtime="20210721 11:58:49.235"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:49.235" endtime="20210721 11:58:49.236"/>
</kw>
<status status="PASS" starttime="20210721 11:58:48.215" endtime="20210721 11:58:49.236"/>
</kw>
<status status="PASS" starttime="20210721 11:58:48.215" endtime="20210721 11:58:49.236"/>
</kw>
<status status="PASS" starttime="20210721 11:58:47.122" endtime="20210721 11:58:49.236"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.254" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210721 11:58:49.237" endtime="20210721 11:58:49.254"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.254" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.254" endtime="20210721 11:58:49.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.255" endtime="20210721 11:58:49.255"/>
</kw>
<msg timestamp="20210721 11:58:49.255" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.236" endtime="20210721 11:58:49.255"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.271" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210721 11:58:49.256" endtime="20210721 11:58:49.271"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.272" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.271" endtime="20210721 11:58:49.272"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.272" endtime="20210721 11:58:49.272"/>
</kw>
<msg timestamp="20210721 11:58:49.272" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.255" endtime="20210721 11:58:49.272"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.289" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 11:58:49.273" endtime="20210721 11:58:49.289"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.289" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 11:58:49.289" endtime="20210721 11:58:49.289"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.289" endtime="20210721 11:58:49.290"/>
</kw>
<msg timestamp="20210721 11:58:49.290" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 11:58:49.272" endtime="20210721 11:58:49.290"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.306" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 11:58:49.290" endtime="20210721 11:58:49.306"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.307" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 11:58:49.307" endtime="20210721 11:58:49.307"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.307" endtime="20210721 11:58:49.307"/>
</kw>
<msg timestamp="20210721 11:58:49.307" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 11:58:49.290" endtime="20210721 11:58:49.307"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.308" endtime="20210721 11:58:49.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.308" endtime="20210721 11:58:49.308"/>
</kw>
<status status="PASS" starttime="20210721 11:58:49.236" endtime="20210721 11:58:49.308"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.325" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210721 11:58:49.309" endtime="20210721 11:58:49.325"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.326" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.325" endtime="20210721 11:58:49.326"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.326" endtime="20210721 11:58:49.326"/>
</kw>
<msg timestamp="20210721 11:58:49.326" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.309" endtime="20210721 11:58:49.326"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.342" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210721 11:58:49.327" endtime="20210721 11:58:49.342"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.343" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.342" endtime="20210721 11:58:49.343"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.343" endtime="20210721 11:58:49.344"/>
</kw>
<msg timestamp="20210721 11:58:49.344" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.326" endtime="20210721 11:58:49.344"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.361" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 11:58:49.345" endtime="20210721 11:58:49.361"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.361" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 11:58:49.361" endtime="20210721 11:58:49.361"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.361" endtime="20210721 11:58:49.362"/>
</kw>
<msg timestamp="20210721 11:58:49.362" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 11:58:49.344" endtime="20210721 11:58:49.362"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.379" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 11:58:49.362" endtime="20210721 11:58:49.379"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.379" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 11:58:49.379" endtime="20210721 11:58:49.379"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.379" endtime="20210721 11:58:49.380"/>
</kw>
<msg timestamp="20210721 11:58:49.380" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210721 11:58:49.362" endtime="20210721 11:58:49.380"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.380" endtime="20210721 11:58:49.380"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.381" endtime="20210721 11:58:49.381"/>
</kw>
<status status="PASS" starttime="20210721 11:58:49.309" endtime="20210721 11:58:49.381"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.397" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210721 11:58:49.382" endtime="20210721 11:58:49.397"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.398" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.397" endtime="20210721 11:58:49.398"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.398" endtime="20210721 11:58:49.398"/>
</kw>
<msg timestamp="20210721 11:58:49.398" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210721 11:58:49.381" endtime="20210721 11:58:49.398"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.415" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210721 11:58:49.399" endtime="20210721 11:58:49.415"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.415" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.415" endtime="20210721 11:58:49.416"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.416" endtime="20210721 11:58:49.416"/>
</kw>
<msg timestamp="20210721 11:58:49.416" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210721 11:58:49.398" endtime="20210721 11:58:49.416"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.433" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210721 11:58:49.417" endtime="20210721 11:58:49.433"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.433" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210721 11:58:49.433" endtime="20210721 11:58:49.433"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.433" endtime="20210721 11:58:49.433"/>
</kw>
<msg timestamp="20210721 11:58:49.434" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210721 11:58:49.416" endtime="20210721 11:58:49.434"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:58:49.450" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210721 11:58:49.434" endtime="20210721 11:58:49.450"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:58:49.451" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210721 11:58:49.450" endtime="20210721 11:58:49.451"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:58:49.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:58:49.451" endtime="20210721 11:58:49.451"/>
</kw>
<msg timestamp="20210721 11:58:49.451" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210721 11:58:49.434" endtime="20210721 11:58:49.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.451" endtime="20210721 11:58:49.452"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:58:49.452" endtime="20210721 11:58:49.452"/>
</kw>
<status status="PASS" starttime="20210721 11:58:49.381" endtime="20210721 11:58:49.452"/>
</iter>
<status status="PASS" starttime="20210721 11:58:35.440" endtime="20210721 11:58:49.452"/>
</for>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:49.453"/>
</kw>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:49.453"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for temperature changes</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:58:49.453" endtime="20210721 11:58:49.453"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:58:49.453" endtime="20210721 11:58:49.453"/>
</branch>
<status status="PASS" starttime="20210721 11:58:32.566" endtime="20210721 11:58:49.453"/>
</if>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:58:49.453"/>
</kw>
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:58:49.454" endtime="20210721 11:58:49.454"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:59:49.459" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210721 11:58:49.454" endtime="20210721 11:59:49.459"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:49.460" endtime="20210721 11:59:49.462"/>
</kw>
<status status="PASS" starttime="20210721 11:58:49.454" endtime="20210721 11:59:49.462"/>
</kw>
<kw name="timeRemainingToFinishTest">
<var>${time_left}</var>
<arg>${stop_time}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_time}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210721 11:59:49.466" level="INFO">${current_time} = 11:59:49</msg>
<status status="PASS" starttime="20210721 11:59:49.465" endtime="20210721 11:59:49.467"/>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<var>${time_left_in_loop}</var>
<arg>${stop_time}</arg>
<arg>${current_time}</arg>
<arg>timer</arg>
<arg>exclude_millis=yes</arg>
<doc>Subtracts time from another time and returns the resulting time.</doc>
<msg timestamp="20210721 11:59:49.469" level="INFO">${time_left_in_loop} = 00:14:46</msg>
<status status="PASS" starttime="20210721 11:59:49.467" endtime="20210721 11:59:49.469"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_left_in_loop}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:49.470" endtime="20210721 11:59:49.471"/>
</kw>
<kw name="Convert Time" library="DateTime">
<var>${time}</var>
<arg>${time_left_in_loop}</arg>
<doc>Converts between supported `time formats`.</doc>
<msg timestamp="20210721 11:59:49.473" level="INFO">${time} = 886.0</msg>
<status status="PASS" starttime="20210721 11:59:49.472" endtime="20210721 11:59:49.474"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${time_int}</var>
<arg>${time}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:49.476" level="INFO">${time_int} = 886</msg>
<status status="PASS" starttime="20210721 11:59:49.474" endtime="20210721 11:59:49.476"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:49.477" endtime="20210721 11:59:49.478"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${time_int}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:49.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:49.478" endtime="20210721 11:59:49.479"/>
</kw>
<msg timestamp="20210721 11:59:49.480" level="INFO">${time_left} = 886</msg>
<status status="PASS" starttime="20210721 11:59:49.463" endtime="20210721 11:59:49.480"/>
</kw>
<if>
<branch type="IF" condition="${time_left} &lt; 1">
<kw name="Get Current Date" library="DateTime">
<var>${t}</var>
<arg>result_format=%H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="NOT RUN" starttime="20210721 11:59:49.481" endtime="20210721 11:59:49.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>exit time ${t}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:49.482" endtime="20210721 11:59:49.482"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:49.483" endtime="20210721 11:59:49.483"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:49.481" endtime="20210721 11:59:49.483"/>
</branch>
<status status="PASS" starttime="20210721 11:59:49.480" endtime="20210721 11:59:49.483"/>
</if>
<status status="PASS" starttime="20210721 11:58:31.564" endtime="20210721 11:59:49.483"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="writeTemperatureToSensors">
<kw name="getCurrentTemperatureOfSensorsAandB" library="apiresources">
<var>${current_temperature}</var>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:49.488" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:59:49.486" endtime="20210721 11:59:49.488"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:49.489" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:59:49.488" endtime="20210721 11:59:49.489"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:49.490" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:49.489" endtime="20210721 11:59:49.490"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:50.437" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:59:50.437" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:41 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '446', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":100}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":100}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:59:50.437" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:49.490" endtime="20210721 11:59:50.437"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:50.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:50.438" endtime="20210721 11:59:50.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:50.444" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:59:50.441" endtime="20210721 11:59:50.445"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.445" endtime="20210721 11:59:50.445"/>
</kw>
<msg timestamp="20210721 11:59:50.446" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:59:49.486" endtime="20210721 11:59:50.446"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.473" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 100}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poi...</msg>
<status status="PASS" starttime="20210721 11:59:50.447" endtime="20210721 11:59:50.473"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:50.474" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:59:50.474" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:59:50.473" endtime="20210721 11:59:50.474"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:50.474" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:59:50.474" endtime="20210721 11:59:50.474"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.474" endtime="20210721 11:59:50.475"/>
</kw>
<msg timestamp="20210721 11:59:50.475" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:59:50.446" endtime="20210721 11:59:50.475"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Getting temperature of Sensor A-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:50.475" endtime="20210721 11:59:50.475"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.493" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:50.476" endtime="20210721 11:59:50.493"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:50.493" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:50.493" endtime="20210721 11:59:50.493"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.493" endtime="20210721 11:59:50.493"/>
</kw>
<msg timestamp="20210721 11:59:50.494" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:50.476" endtime="20210721 11:59:50.494"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.511" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:50.494" endtime="20210721 11:59:50.511"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:50.511" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:50.511" endtime="20210721 11:59:50.511"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.511" endtime="20210721 11:59:50.512"/>
</kw>
<msg timestamp="20210721 11:59:50.512" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:50.494" endtime="20210721 11:59:50.512"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.529" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:59:50.512" endtime="20210721 11:59:50.529"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:50.529" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:50.529" endtime="20210721 11:59:50.529"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.529" endtime="20210721 11:59:50.530"/>
</kw>
<msg timestamp="20210721 11:59:50.530" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:50.512" endtime="20210721 11:59:50.530"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.547" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:59:50.530" endtime="20210721 11:59:50.547"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:50.547" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:50.547" endtime="20210721 11:59:50.547"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.547" endtime="20210721 11:59:50.548"/>
</kw>
<msg timestamp="20210721 11:59:50.548" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:50.530" endtime="20210721 11:59:50.548"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${current_temp}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].pointCurrent.value</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:50.564" level="INFO">${field_value_list} = [100]</msg>
<status status="PASS" starttime="20210721 11:59:50.548" endtime="20210721 11:59:50.564"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:50.565" level="INFO">${field_value} = 100</msg>
<status status="PASS" starttime="20210721 11:59:50.564" endtime="20210721 11:59:50.565"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.565" endtime="20210721 11:59:50.565"/>
</kw>
<msg timestamp="20210721 11:59:50.565" level="INFO">${current_temp} = 100</msg>
<status status="PASS" starttime="20210721 11:59:50.548" endtime="20210721 11:59:50.565"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:50.567" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:50.566" endtime="20210721 11:59:50.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:50.567" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:50.567" endtime="20210721 11:59:50.567"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:59:50.568" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:59:50.567" endtime="20210721 11:59:50.568"/>
</kw>
<status status="PASS" starttime="20210721 11:59:50.566" endtime="20210721 11:59:50.568"/>
</branch>
<status status="PASS" starttime="20210721 11:59:50.566" endtime="20210721 11:59:50.568"/>
</if>
<status status="PASS" starttime="20210721 11:59:50.565" endtime="20210721 11:59:50.568"/>
</branch>
<status status="PASS" starttime="20210721 11:59:50.565" endtime="20210721 11:59:50.568"/>
</if>
<status status="PASS" starttime="20210721 11:59:50.476" endtime="20210721 11:59:50.568"/>
</iter>
<status status="PASS" starttime="20210721 11:59:50.475" endtime="20210721 11:59:50.568"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>Current temperature of Sensor A is:${current_temp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:50.568" endtime="20210721 11:59:50.569"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${current_temp}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:50.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:50.569" endtime="20210721 11:59:50.569"/>
</kw>
<msg timestamp="20210721 11:59:50.569" level="INFO">${current_temperature} = 100</msg>
<status status="PASS" starttime="20210721 11:59:49.485" endtime="20210721 11:59:50.569"/>
</kw>
<if>
<branch type="IF" condition="${current_temperature}==${sensor_point_cooling_temp}">
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<status status="NOT RUN" starttime="20210721 11:59:50.570" endtime="20210721 11:59:50.570"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:50.570" endtime="20210721 11:59:50.570"/>
</branch>
<branch type="ELSE IF" condition="${current_temperature}==${sensor_point_hot_temp}">
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:50.571" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:59:50.571" endtime="20210721 11:59:50.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:50.572" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:59:50.572" endtime="20210721 11:59:50.572"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:50.572" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:50.572" endtime="20210721 11:59:50.573"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:51.453" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:59:51.453" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:42 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '446', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":100}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":100}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:59:51.453" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:50.573" endtime="20210721 11:59:51.453"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:51.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:51.454" endtime="20210721 11:59:51.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:51.457" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:59:51.455" endtime="20210721 11:59:51.457"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.457" endtime="20210721 11:59:51.457"/>
</kw>
<msg timestamp="20210721 11:59:51.458" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:59:50.571" endtime="20210721 11:59:51.458"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:51.479" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 100}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poi...</msg>
<status status="PASS" starttime="20210721 11:59:51.459" endtime="20210721 11:59:51.479"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:51.480" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:59:51.480" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:59:51.480" endtime="20210721 11:59:51.480"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:51.480" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:59:51.480" endtime="20210721 11:59:51.480"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.481" endtime="20210721 11:59:51.481"/>
</kw>
<msg timestamp="20210721 11:59:51.481" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:59:51.458" endtime="20210721 11:59:51.481"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:51.481" endtime="20210721 11:59:51.481"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:51.482" endtime="20210721 11:59:51.482"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:51.501" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:51.483" endtime="20210721 11:59:51.502"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:51.502" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:51.502" endtime="20210721 11:59:51.502"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.502" endtime="20210721 11:59:51.502"/>
</kw>
<msg timestamp="20210721 11:59:51.503" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:51.482" endtime="20210721 11:59:51.503"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:51.524" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:51.503" endtime="20210721 11:59:51.524"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:51.525" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:51.524" endtime="20210721 11:59:51.525"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.525" endtime="20210721 11:59:51.525"/>
</kw>
<msg timestamp="20210721 11:59:51.525" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:51.503" endtime="20210721 11:59:51.525"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:51.545" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:59:51.526" endtime="20210721 11:59:51.545"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:51.546" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:51.546" endtime="20210721 11:59:51.546"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.546" endtime="20210721 11:59:51.546"/>
</kw>
<msg timestamp="20210721 11:59:51.547" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:51.525" endtime="20210721 11:59:51.547"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:51.567" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:59:51.547" endtime="20210721 11:59:51.567"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:51.568" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:51.567" endtime="20210721 11:59:51.568"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:51.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:51.568" endtime="20210721 11:59:51.568"/>
</kw>
<msg timestamp="20210721 11:59:51.568" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:51.547" endtime="20210721 11:59:51.568"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:51.570" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:51.569" endtime="20210721 11:59:51.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:51.570" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:51.570" endtime="20210721 11:59:51.570"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:59:51.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:59:51.571" endtime="20210721 11:59:51.571"/>
</kw>
<status status="PASS" starttime="20210721 11:59:51.569" endtime="20210721 11:59:51.571"/>
</branch>
<status status="PASS" starttime="20210721 11:59:51.569" endtime="20210721 11:59:51.571"/>
</if>
<status status="PASS" starttime="20210721 11:59:51.569" endtime="20210721 11:59:51.571"/>
</branch>
<status status="PASS" starttime="20210721 11:59:51.569" endtime="20210721 11:59:51.571"/>
</if>
<status status="PASS" starttime="20210721 11:59:51.482" endtime="20210721 11:59:51.571"/>
</iter>
<status status="PASS" starttime="20210721 11:59:51.481" endtime="20210721 11:59:51.571"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:51.573" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:51.572" endtime="20210721 11:59:51.573"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:51.573" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:51.573" endtime="20210721 11:59:51.573"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:51.574" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:51.573" endtime="20210721 11:59:51.574"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:52.428" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:52.428" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:43 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:52.428" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:51.574" endtime="20210721 11:59:52.428"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:52.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:52.428" endtime="20210721 11:59:52.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:52.430" endtime="20210721 11:59:52.430"/>
</kw>
<status status="PASS" starttime="20210721 11:59:51.571" endtime="20210721 11:59:52.430"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:52.431" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:52.431" endtime="20210721 11:59:52.431"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:52.432" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:52.432" endtime="20210721 11:59:52.432"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:52.432" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:52.432" endtime="20210721 11:59:52.433"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:53.278" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:53.288" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:53.288" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:52.433" endtime="20210721 11:59:53.288"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:53.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.288"/>
</kw>
<status status="PASS" starttime="20210721 11:59:52.431" endtime="20210721 11:59:53.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.288"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.308" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.308" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:53.308" endtime="20210721 11:59:53.308"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.308" endtime="20210721 11:59:53.308"/>
</kw>
<msg timestamp="20210721 11:59:53.308" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.308"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.328" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:53.308" endtime="20210721 11:59:53.328"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.328" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:53.328" endtime="20210721 11:59:53.328"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.328" endtime="20210721 11:59:53.328"/>
</kw>
<msg timestamp="20210721 11:59:53.328" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:53.308" endtime="20210721 11:59:53.328"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.338" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:59:53.328" endtime="20210721 11:59:53.338"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.338" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:53.338" endtime="20210721 11:59:53.338"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.338" endtime="20210721 11:59:53.338"/>
</kw>
<msg timestamp="20210721 11:59:53.348" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:59:53.328" endtime="20210721 11:59:53.348"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.378" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:59:53.348" endtime="20210721 11:59:53.378"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.378" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.378"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.378"/>
</kw>
<msg timestamp="20210721 11:59:53.378" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:59:53.348" endtime="20210721 11:59:53.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.378"/>
</kw>
<status status="PASS" starttime="20210721 11:59:53.288" endtime="20210721 11:59:53.378"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.399" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.399"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.399" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:53.399" endtime="20210721 11:59:53.399"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.399" endtime="20210721 11:59:53.399"/>
</kw>
<msg timestamp="20210721 11:59:53.399" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:53.399"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.418" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:53.408" endtime="20210721 11:59:53.418"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.418" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:53.418" endtime="20210721 11:59:53.418"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.418" endtime="20210721 11:59:53.418"/>
</kw>
<msg timestamp="20210721 11:59:53.418" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:53.399" endtime="20210721 11:59:53.418"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.438" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:59:53.418" endtime="20210721 11:59:53.438"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.438" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:59:53.438" endtime="20210721 11:59:53.438"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.438" endtime="20210721 11:59:53.438"/>
</kw>
<msg timestamp="20210721 11:59:53.438" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:59:53.418" endtime="20210721 11:59:53.438"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:59:53.438" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:53.458"/>
</kw>
<msg timestamp="20210721 11:59:53.458" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:59:53.438" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:53.458" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:53.458"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:54.328" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:54.328" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:54.328" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:54.328"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:54.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:54.328" endtime="20210721 11:59:54.338"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:54.338"/>
</kw>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:54.338"/>
</kw>
<status status="PASS" starttime="20210721 11:59:53.458" endtime="20210721 11:59:54.338"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:54.338" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:54.338"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:54.338" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:54.338"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:54.338" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:54.338"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:55.228" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:55.228" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:55.228" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:55.228"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:55.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:55.228" endtime="20210721 11:59:55.228"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:55.228" endtime="20210721 11:59:55.228"/>
</kw>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:55.228"/>
</kw>
<status status="PASS" starttime="20210721 11:59:54.338" endtime="20210721 11:59:55.228"/>
</kw>
<status status="PASS" starttime="20210721 11:59:53.378" endtime="20210721 11:59:55.228"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:55.248" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:55.238" endtime="20210721 11:59:55.248"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:55.248" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:55.248" endtime="20210721 11:59:55.248"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:55.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:55.248" endtime="20210721 11:59:55.248"/>
</kw>
<msg timestamp="20210721 11:59:55.248" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:55.238" endtime="20210721 11:59:55.248"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:55.268" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:55.248" endtime="20210721 11:59:55.268"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:55.268" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:55.268" endtime="20210721 11:59:55.268"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:55.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:55.268" endtime="20210721 11:59:55.268"/>
</kw>
<msg timestamp="20210721 11:59:55.268" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:55.248" endtime="20210721 11:59:55.268"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:55.288" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:59:55.268" endtime="20210721 11:59:55.288"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:55.288" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:59:55.288" endtime="20210721 11:59:55.288"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:55.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:55.288" endtime="20210721 11:59:55.288"/>
</kw>
<msg timestamp="20210721 11:59:55.288" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:59:55.268" endtime="20210721 11:59:55.288"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:55.308" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:59:55.293" endtime="20210721 11:59:55.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:55.308" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:55.308"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:55.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:55.308"/>
</kw>
<msg timestamp="20210721 11:59:55.308" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:59:55.288" endtime="20210721 11:59:55.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:55.308" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:55.308"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:55.308" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:55.308"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:55.313" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:55.313" endtime="20210721 11:59:55.313"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:56.188" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:56.188" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:47 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:56.198" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:55.313" endtime="20210721 11:59:56.198"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:56.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:56.198" endtime="20210721 11:59:56.198"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:56.198" endtime="20210721 11:59:56.198"/>
</kw>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:56.198"/>
</kw>
<status status="PASS" starttime="20210721 11:59:55.308" endtime="20210721 11:59:56.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:56.204" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:56.204" endtime="20210721 11:59:56.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:56.208" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:56.208" endtime="20210721 11:59:56.208"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:56.208" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:56.208" endtime="20210721 11:59:56.208"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:57.068" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:57.068" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:57.068" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:56.208" endtime="20210721 11:59:57.068"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:57.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:57.068" endtime="20210721 11:59:57.079"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.079" endtime="20210721 11:59:57.079"/>
</kw>
<status status="PASS" starttime="20210721 11:59:56.204" endtime="20210721 11:59:57.079"/>
</kw>
<status status="PASS" starttime="20210721 11:59:56.204" endtime="20210721 11:59:57.079"/>
</kw>
<status status="PASS" starttime="20210721 11:59:55.238" endtime="20210721 11:59:57.079"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.098" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:57.079" endtime="20210721 11:59:57.098"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.098" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:57.098" endtime="20210721 11:59:57.098"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.098" endtime="20210721 11:59:57.098"/>
</kw>
<msg timestamp="20210721 11:59:57.098" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:57.079" endtime="20210721 11:59:57.098"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.113" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:57.098" endtime="20210721 11:59:57.113"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.113" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:57.113" endtime="20210721 11:59:57.113"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.113" endtime="20210721 11:59:57.118"/>
</kw>
<msg timestamp="20210721 11:59:57.118" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:57.098" endtime="20210721 11:59:57.118"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.138" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:59:57.118" endtime="20210721 11:59:57.138"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.138" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:59:57.138" endtime="20210721 11:59:57.138"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.138" endtime="20210721 11:59:57.138"/>
</kw>
<msg timestamp="20210721 11:59:57.138" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:59:57.118" endtime="20210721 11:59:57.138"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.158" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:59:57.138" endtime="20210721 11:59:57.158"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.158" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:59:57.158" endtime="20210721 11:59:57.158"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.158" endtime="20210721 11:59:57.158"/>
</kw>
<msg timestamp="20210721 11:59:57.158" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:59:57.138" endtime="20210721 11:59:57.158"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:57.163" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:57.163" endtime="20210721 11:59:57.163"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:57.163" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:57.163" endtime="20210721 11:59:57.163"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:57.163" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:57.163" endtime="20210721 11:59:57.163"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:58.068" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:58.068" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:49 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:58.068" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:57.163" endtime="20210721 11:59:58.068"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:58.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:58.073" endtime="20210721 11:59:58.073"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:58.073" endtime="20210721 11:59:58.073"/>
</kw>
<status status="PASS" starttime="20210721 11:59:57.158" endtime="20210721 11:59:58.076"/>
</kw>
<status status="PASS" starttime="20210721 11:59:57.158" endtime="20210721 11:59:58.076"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:58.076" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:58.076" endtime="20210721 11:59:58.076"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:58.078" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:58.076" endtime="20210721 11:59:58.078"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:58.078" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:58.078" endtime="20210721 11:59:58.078"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:58.958" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:58.958" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:50 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:58.958" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:58.078" endtime="20210721 11:59:58.958"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:58.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:58.958" endtime="20210721 11:59:58.958"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:58.958" endtime="20210721 11:59:58.958"/>
</kw>
<status status="PASS" starttime="20210721 11:59:58.076" endtime="20210721 11:59:58.958"/>
</kw>
<status status="PASS" starttime="20210721 11:59:58.076" endtime="20210721 11:59:58.958"/>
</kw>
<status status="PASS" starttime="20210721 11:59:57.079" endtime="20210721 11:59:58.958"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:58.983" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:59:58.968" endtime="20210721 11:59:58.983"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:58.988" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:58.988" endtime="20210721 11:59:58.988"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:58.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:58.988" endtime="20210721 11:59:58.988"/>
</kw>
<msg timestamp="20210721 11:59:58.988" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:59:58.968" endtime="20210721 11:59:58.988"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:59.003" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:59:58.988" endtime="20210721 11:59:59.003"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:59.003" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:59.003" endtime="20210721 11:59:59.003"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:59.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:59.003" endtime="20210721 11:59:59.008"/>
</kw>
<msg timestamp="20210721 11:59:59.008" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:59:58.988" endtime="20210721 11:59:59.008"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:59.028" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:59:59.008" endtime="20210721 11:59:59.028"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:59.028" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:59:59.028" endtime="20210721 11:59:59.028"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:59.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:59.028" endtime="20210721 11:59:59.028"/>
</kw>
<msg timestamp="20210721 11:59:59.028" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:59:59.008" endtime="20210721 11:59:59.028"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:59.048" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:59:59.028" endtime="20210721 11:59:59.048"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:59.048" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:59:59.048" endtime="20210721 11:59:59.048"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:59.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:59.048" endtime="20210721 11:59:59.048"/>
</kw>
<msg timestamp="20210721 11:59:59.048" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:59:59.028" endtime="20210721 11:59:59.048"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:59.053" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:59.053" endtime="20210721 11:59:59.053"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:59.053" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:59.053" endtime="20210721 11:59:59.053"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:59.053" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:59.053" endtime="20210721 11:59:59.053"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:59.919" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:59:59.919" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:51 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:59:59.919" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:59.053" endtime="20210721 11:59:59.919"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:59.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:59.919" endtime="20210721 11:59:59.919"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:59.919" endtime="20210721 11:59:59.919"/>
</kw>
<status status="PASS" starttime="20210721 11:59:59.053" endtime="20210721 11:59:59.919"/>
</kw>
<status status="PASS" starttime="20210721 11:59:59.048" endtime="20210721 11:59:59.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:59.928" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:59:59.928" endtime="20210721 11:59:59.928"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:59.928" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:59:59.928" endtime="20210721 11:59:59.928"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:59.928" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:59.928" endtime="20210721 11:59:59.928"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:00.833" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:00.833" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:52 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:00.833" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:59.928" endtime="20210721 12:00:00.833"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:00.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:00.833" endtime="20210721 12:00:00.848"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:00.848" endtime="20210721 12:00:00.848"/>
</kw>
<status status="PASS" starttime="20210721 11:59:59.928" endtime="20210721 12:00:00.848"/>
</kw>
<status status="PASS" starttime="20210721 11:59:59.919" endtime="20210721 12:00:00.848"/>
</kw>
<status status="PASS" starttime="20210721 11:59:58.968" endtime="20210721 12:00:00.848"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:00.880" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 12:00:00.848" endtime="20210721 12:00:00.880"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:00.880" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:00.880" endtime="20210721 12:00:00.880"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:00.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:00.880" endtime="20210721 12:00:00.880"/>
</kw>
<msg timestamp="20210721 12:00:00.880" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:00.848" endtime="20210721 12:00:00.880"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:00.902" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 12:00:00.880" endtime="20210721 12:00:00.902"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:00.902" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:00.902" endtime="20210721 12:00:00.902"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:00.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:00.902" endtime="20210721 12:00:00.902"/>
</kw>
<msg timestamp="20210721 12:00:00.902" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:00.880" endtime="20210721 12:00:00.902"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:00.917" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 12:00:00.902" endtime="20210721 12:00:00.917"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:00.917" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 12:00:00.917" endtime="20210721 12:00:00.917"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:00.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:00.917" endtime="20210721 12:00:00.917"/>
</kw>
<msg timestamp="20210721 12:00:00.917" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 12:00:00.902" endtime="20210721 12:00:00.917"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 12:00:00.917" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:00.939"/>
</kw>
<msg timestamp="20210721 12:00:00.939" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 12:00:00.917" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:00.939" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:00.939"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:01.803" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:01.803" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:53 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:01.803" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:01.803"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:01.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:01.819"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:01.819"/>
</kw>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:01.819"/>
</kw>
<status status="PASS" starttime="20210721 12:00:00.939" endtime="20210721 12:00:01.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:01.819" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:01.819"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:01.819" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:01.819"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:01.819" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:01.819"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:02.683" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:02.683" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:54 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:02.683" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:02.683"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:02.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:02.683" endtime="20210721 12:00:02.683"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:02.683" endtime="20210721 12:00:02.683"/>
</kw>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:02.683"/>
</kw>
<status status="PASS" starttime="20210721 12:00:01.819" endtime="20210721 12:00:02.683"/>
</kw>
<status status="PASS" starttime="20210721 12:00:00.848" endtime="20210721 12:00:02.683"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:02.705" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 12:00:02.683" endtime="20210721 12:00:02.705"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:02.705" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:02.705" endtime="20210721 12:00:02.705"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:02.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:02.705" endtime="20210721 12:00:02.705"/>
</kw>
<msg timestamp="20210721 12:00:02.705" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:02.683" endtime="20210721 12:00:02.705"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:02.721" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 12:00:02.705" endtime="20210721 12:00:02.721"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:02.721" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:02.721" endtime="20210721 12:00:02.721"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:02.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:02.721" endtime="20210721 12:00:02.721"/>
</kw>
<msg timestamp="20210721 12:00:02.721" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:02.705" endtime="20210721 12:00:02.721"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:02.737" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 12:00:02.721" endtime="20210721 12:00:02.737"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:02.737" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 12:00:02.737" endtime="20210721 12:00:02.737"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:02.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:02.737" endtime="20210721 12:00:02.737"/>
</kw>
<msg timestamp="20210721 12:00:02.737" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 12:00:02.721" endtime="20210721 12:00:02.737"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:02.752" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 12:00:02.737" endtime="20210721 12:00:02.752"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:02.752" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:02.752"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:02.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:02.752"/>
</kw>
<msg timestamp="20210721 12:00:02.752" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 12:00:02.737" endtime="20210721 12:00:02.752"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:02.752" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:02.752"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:02.752" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:02.752"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:02.768" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:02.768"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:03.639" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:03.639" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:03.639" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:02.768" endtime="20210721 12:00:03.639"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:03.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:03.639"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:03.639"/>
</kw>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:03.639"/>
</kw>
<status status="PASS" starttime="20210721 12:00:02.752" endtime="20210721 12:00:03.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:03.639" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:03.639"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:03.654" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:03.654"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:03.654" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:03.654" endtime="20210721 12:00:03.654"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:04.542" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:04.542" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:04.542" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:03.654" endtime="20210721 12:00:04.542"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:04.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:04.542" endtime="20210721 12:00:04.542"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:04.542" endtime="20210721 12:00:04.542"/>
</kw>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:04.542"/>
</kw>
<status status="PASS" starttime="20210721 12:00:03.639" endtime="20210721 12:00:04.542"/>
</kw>
<status status="PASS" starttime="20210721 12:00:02.683" endtime="20210721 12:00:04.542"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:04.557" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 12:00:04.542" endtime="20210721 12:00:04.557"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:04.557" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:04.557" endtime="20210721 12:00:04.557"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:04.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:04.557" endtime="20210721 12:00:04.557"/>
</kw>
<msg timestamp="20210721 12:00:04.557" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 12:00:04.542" endtime="20210721 12:00:04.557"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:04.573" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 12:00:04.557" endtime="20210721 12:00:04.573"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:04.573" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:04.573" endtime="20210721 12:00:04.573"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:04.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:04.573" endtime="20210721 12:00:04.573"/>
</kw>
<msg timestamp="20210721 12:00:04.573" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 12:00:04.557" endtime="20210721 12:00:04.573"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:04.588" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 12:00:04.573" endtime="20210721 12:00:04.588"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:04.588" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 12:00:04.588" endtime="20210721 12:00:04.588"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:04.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:04.588" endtime="20210721 12:00:04.604"/>
</kw>
<msg timestamp="20210721 12:00:04.604" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 12:00:04.573" endtime="20210721 12:00:04.604"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 12:00:04.604" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:04.610"/>
</kw>
<msg timestamp="20210721 12:00:04.610" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 12:00:04.604" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:04.610" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:04.610"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:05.528" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:05.528" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:56 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:05.528" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:05.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:05.528"/>
</kw>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:05.528"/>
</kw>
<status status="PASS" starttime="20210721 12:00:04.610" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:05.528" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 12:00:05.528" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 12:00:05.528" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:05.528"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 12:00:06.429" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 12:00:06.429" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:57 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 12:00:06.429" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:06.429"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 12:00:06.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 12:00:06.429" endtime="20210721 12:00:06.429"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 12:00:06.429" endtime="20210721 12:00:06.429"/>
</kw>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:06.429"/>
</kw>
<status status="PASS" starttime="20210721 12:00:05.528" endtime="20210721 12:00:06.429"/>
</kw>
<status status="PASS" starttime="20210721 12:00:04.542" endtime="20210721 12:00:06.429"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.445" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210721 12:00:06.429" endtime="20210721 12:00:06.445"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.445" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210721 12:00:06.445" endtime="20210721 12:00:06.445"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.445" endtime="20210721 12:00:06.445"/>
</kw>
<msg timestamp="20210721 12:00:06.445" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210721 12:00:06.429" endtime="20210721 12:00:06.445"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.461" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210721 12:00:06.445" endtime="20210721 12:00:06.461"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.461" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210721 12:00:06.461" endtime="20210721 12:00:06.461"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.461" endtime="20210721 12:00:06.461"/>
</kw>
<msg timestamp="20210721 12:00:06.461" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210721 12:00:06.445" endtime="20210721 12:00:06.461"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.476" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 12:00:06.461" endtime="20210721 12:00:06.476"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.492" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 12:00:06.476" endtime="20210721 12:00:06.492"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.492" endtime="20210721 12:00:06.492"/>
</kw>
<msg timestamp="20210721 12:00:06.492" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 12:00:06.461" endtime="20210721 12:00:06.492"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.514" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 12:00:06.492" endtime="20210721 12:00:06.514"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.514" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.514"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.514"/>
</kw>
<msg timestamp="20210721 12:00:06.514" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 12:00:06.492" endtime="20210721 12:00:06.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.514"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.514"/>
</kw>
<status status="PASS" starttime="20210721 12:00:06.429" endtime="20210721 12:00:06.514"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.530" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.530"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.530" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210721 12:00:06.530" endtime="20210721 12:00:06.530"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.530" endtime="20210721 12:00:06.530"/>
</kw>
<msg timestamp="20210721 12:00:06.530" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210721 12:00:06.514" endtime="20210721 12:00:06.530"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.545" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210721 12:00:06.530" endtime="20210721 12:00:06.545"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.545" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210721 12:00:06.545" endtime="20210721 12:00:06.545"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.545" endtime="20210721 12:00:06.545"/>
</kw>
<msg timestamp="20210721 12:00:06.545" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210721 12:00:06.530" endtime="20210721 12:00:06.545"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.561" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 12:00:06.561" endtime="20210721 12:00:06.561"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.580" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 12:00:06.577" endtime="20210721 12:00:06.580"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.580" endtime="20210721 12:00:06.580"/>
</kw>
<msg timestamp="20210721 12:00:06.581" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 12:00:06.545" endtime="20210721 12:00:06.581"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 12:00:06.596" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 12:00:06.581" endtime="20210721 12:00:06.596"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 12:00:06.596" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 12:00:06.596" endtime="20210721 12:00:06.596"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 12:00:06.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 12:00:06.596" endtime="20210721 12:00:06.596"/>
</kw>
<msg timestamp="20210721 12:00:06.596" level="INFO">${oid2} = 21875</msg>
