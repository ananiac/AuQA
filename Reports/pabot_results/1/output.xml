<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.5 on win32)" generated="20210719 10:44:51.765" rpa="false" schemaversion="2">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="staleStatePrevention" source="C:\Users\grees\PycharmProjects\AuQA\Testcases\staleStatePrevention.robot">
<test id="s1-s1-t1" name="StaleStatePreventionForTemperatureSensors">
<kw name="waitForTwoMinutes" library="apiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for Two minutes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:44:52.462" endtime="20210719 10:44:52.462"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:46:52.464" level="INFO">Slept 2 minutes</msg>
<status status="PASS" starttime="20210719 10:44:52.462" endtime="20210719 10:46:52.464"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**************two minutes waiting done***************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:52.464" endtime="20210719 10:46:52.464"/>
</kw>
<status status="PASS" starttime="20210719 10:44:52.454" endtime="20210719 10:46:52.464"/>
</kw>
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Fetch the number of rack sensors -----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:52.464" endtime="20210719 10:46:52.474"/>
</kw>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:52.474" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:52.474"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:46:52.474" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:46:52.474" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:52.474"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:52.474" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:52.474"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:52.474" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:52.474"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:53.414" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:46:53.414" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:46:53.414" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:53.414"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:53.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:53.414" endtime="20210719 10:46:53.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:46:53.420" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:46:53.414" endtime="20210719 10:46:53.420"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.420" endtime="20210719 10:46:53.420"/>
</kw>
<msg timestamp="20210719 10:46:53.420" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:46:52.474" endtime="20210719 10:46:53.420"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:53.451" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:46:53.420" endtime="20210719 10:46:53.451"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:46:53.451" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:46:53.451" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.451"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:46:53.451" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.451"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.451"/>
</kw>
<msg timestamp="20210719 10:46:53.451" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:46:53.420" endtime="20210719 10:46:53.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for all sensor points-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.451"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.451"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:53.483" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.483"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:53.483" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:53.483" endtime="20210719 10:46:53.483"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.483" endtime="20210719 10:46:53.483"/>
</kw>
<msg timestamp="20210719 10:46:53.483" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:53.483"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:53.521" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:46:53.483" endtime="20210719 10:46:53.521"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:53.521" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:53.521" endtime="20210719 10:46:53.521"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.521" endtime="20210719 10:46:53.521"/>
</kw>
<msg timestamp="20210719 10:46:53.521" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:53.483" endtime="20210719 10:46:53.521"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:53.567" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:46:53.521" endtime="20210719 10:46:53.567"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:53.567" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:46:53.567" endtime="20210719 10:46:53.567"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.567" endtime="20210719 10:46:53.567"/>
</kw>
<msg timestamp="20210719 10:46:53.567" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:46:53.521" endtime="20210719 10:46:53.567"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:46:53.567" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:53.599"/>
</kw>
<msg timestamp="20210719 10:46:53.599" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:46:53.567" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:53.599" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:53.599"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:54.525" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:54.525" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:54.525" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:54.525"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:54.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:54.526" endtime="20210719 10:46:54.527"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:54.527" endtime="20210719 10:46:54.528"/>
</kw>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:54.529"/>
</kw>
<status status="PASS" starttime="20210719 10:46:53.599" endtime="20210719 10:46:54.529"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:54.531" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:54.530" endtime="20210719 10:46:54.531"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:54.532" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:54.531" endtime="20210719 10:46:54.532"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:54.532" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:54.532" endtime="20210719 10:46:54.532"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:55.457" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:55.457" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:47 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:55.458" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:54.532" endtime="20210719 10:46:55.458"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:55.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:55.458" endtime="20210719 10:46:55.460"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:55.460" endtime="20210719 10:46:55.461"/>
</kw>
<status status="PASS" starttime="20210719 10:46:54.530" endtime="20210719 10:46:55.461"/>
</kw>
<status status="PASS" starttime="20210719 10:46:54.529" endtime="20210719 10:46:55.461"/>
</kw>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:46:55.461"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:55.462" endtime="20210719 10:46:55.463"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:55.504" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:46:55.466" endtime="20210719 10:46:55.504"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:55.506" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:55.505" endtime="20210719 10:46:55.506"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:55.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:55.507" endtime="20210719 10:46:55.508"/>
</kw>
<msg timestamp="20210719 10:46:55.508" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:55.463" endtime="20210719 10:46:55.508"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:55.538" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:46:55.509" endtime="20210719 10:46:55.538"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:55.538" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:55.538" endtime="20210719 10:46:55.539"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:55.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:55.539" endtime="20210719 10:46:55.540"/>
</kw>
<msg timestamp="20210719 10:46:55.540" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:55.508" endtime="20210719 10:46:55.540"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:55.572" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:46:55.541" endtime="20210719 10:46:55.572"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:55.572" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:46:55.572" endtime="20210719 10:46:55.572"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:55.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:55.572" endtime="20210719 10:46:55.572"/>
</kw>
<msg timestamp="20210719 10:46:55.572" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:46:55.540" endtime="20210719 10:46:55.572"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:55.608" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:46:55.572" endtime="20210719 10:46:55.608"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:55.609" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:46:55.609" endtime="20210719 10:46:55.609"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:55.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:55.609" endtime="20210719 10:46:55.610"/>
</kw>
<msg timestamp="20210719 10:46:55.610" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:46:55.572" endtime="20210719 10:46:55.610"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:55.612" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:55.611" endtime="20210719 10:46:55.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:55.613" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:55.612" endtime="20210719 10:46:55.613"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:55.613" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:55.613" endtime="20210719 10:46:55.614"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:56.574" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:56.574" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:56.574" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:55.614" endtime="20210719 10:46:56.574"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:56.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:56.575" endtime="20210719 10:46:56.576"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:56.576" endtime="20210719 10:46:56.576"/>
</kw>
<status status="PASS" starttime="20210719 10:46:55.611" endtime="20210719 10:46:56.576"/>
</kw>
<status status="PASS" starttime="20210719 10:46:55.610" endtime="20210719 10:46:56.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:56.579" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:56.578" endtime="20210719 10:46:56.579"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:56.580" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:56.579" endtime="20210719 10:46:56.580"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:56.580" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:56.580" endtime="20210719 10:46:56.581"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:57.503" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:57.503" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:49 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:57.504" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:56.581" endtime="20210719 10:46:57.504"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:57.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:57.504" endtime="20210719 10:46:57.506"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:57.506" endtime="20210719 10:46:57.507"/>
</kw>
<status status="PASS" starttime="20210719 10:46:56.577" endtime="20210719 10:46:57.507"/>
</kw>
<status status="PASS" starttime="20210719 10:46:56.577" endtime="20210719 10:46:57.507"/>
</kw>
<status status="PASS" starttime="20210719 10:46:55.462" endtime="20210719 10:46:57.507"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:57.508" endtime="20210719 10:46:57.508"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:57.533" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:46:57.509" endtime="20210719 10:46:57.533"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:57.534" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:57.534" endtime="20210719 10:46:57.534"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:57.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:57.534" endtime="20210719 10:46:57.534"/>
</kw>
<msg timestamp="20210719 10:46:57.535" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:57.508" endtime="20210719 10:46:57.535"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:57.559" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:46:57.535" endtime="20210719 10:46:57.559"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:57.560" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:57.560" endtime="20210719 10:46:57.560"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:57.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:57.560" endtime="20210719 10:46:57.560"/>
</kw>
<msg timestamp="20210719 10:46:57.561" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:57.535" endtime="20210719 10:46:57.561"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:57.578" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:46:57.561" endtime="20210719 10:46:57.578"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:57.579" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:46:57.578" endtime="20210719 10:46:57.579"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:57.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:57.579" endtime="20210719 10:46:57.579"/>
</kw>
<msg timestamp="20210719 10:46:57.579" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:46:57.561" endtime="20210719 10:46:57.579"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:57.582" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:46:57.580" endtime="20210719 10:46:57.582"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:57.582" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:46:57.582" endtime="20210719 10:46:57.582"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:57.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:57.582" endtime="20210719 10:46:57.582"/>
</kw>
<msg timestamp="20210719 10:46:57.598" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:46:57.580" endtime="20210719 10:46:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:57.600" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:57.599" endtime="20210719 10:46:57.600"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:57.600" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:57.600" endtime="20210719 10:46:57.600"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:57.601" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:57.601" endtime="20210719 10:46:57.601"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:58.534" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:58.535" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:50 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:58.536" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:57.602" endtime="20210719 10:46:58.536"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:58.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:58.537" endtime="20210719 10:46:58.542"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:58.543" endtime="20210719 10:46:58.544"/>
</kw>
<status status="PASS" starttime="20210719 10:46:57.599" endtime="20210719 10:46:58.545"/>
</kw>
<status status="PASS" starttime="20210719 10:46:57.598" endtime="20210719 10:46:58.545"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:58.550" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:58.548" endtime="20210719 10:46:58.550"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:58.551" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:58.550" endtime="20210719 10:46:58.551"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:58.552" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:58.551" endtime="20210719 10:46:58.553"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:46:59.489" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:46:59.504" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:51 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:46:59.504" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:58.553" endtime="20210719 10:46:59.504"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:46:59.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:46:59.504"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:46:59.504"/>
</kw>
<status status="PASS" starttime="20210719 10:46:58.547" endtime="20210719 10:46:59.504"/>
</kw>
<status status="PASS" starttime="20210719 10:46:58.546" endtime="20210719 10:46:59.504"/>
</kw>
<status status="PASS" starttime="20210719 10:46:57.508" endtime="20210719 10:46:59.504"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:46:59.504"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:59.520" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:46:59.527"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:59.527" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:59.527" endtime="20210719 10:46:59.527"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:59.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:59.527" endtime="20210719 10:46:59.527"/>
</kw>
<msg timestamp="20210719 10:46:59.527" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:46:59.527"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:59.542" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:46:59.527" endtime="20210719 10:46:59.542"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:59.542" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:59.542" endtime="20210719 10:46:59.542"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:59.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:59.542" endtime="20210719 10:46:59.542"/>
</kw>
<msg timestamp="20210719 10:46:59.542" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:46:59.527" endtime="20210719 10:46:59.542"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:59.558" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:46:59.542" endtime="20210719 10:46:59.558"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:59.558" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:46:59.558" endtime="20210719 10:46:59.558"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:59.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:59.558" endtime="20210719 10:46:59.558"/>
</kw>
<msg timestamp="20210719 10:46:59.558" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:46:59.542" endtime="20210719 10:46:59.558"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:46:59.558" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:46:59.574"/>
</kw>
<msg timestamp="20210719 10:46:59.574" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:46:59.558" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:46:59.574" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:46:59.574"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:00.509" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:00.509" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:52 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:00.525" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:47:00.525"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:00.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:00.525" endtime="20210719 10:47:00.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:00.528"/>
</kw>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:47:00.528"/>
</kw>
<status status="PASS" starttime="20210719 10:46:59.574" endtime="20210719 10:47:00.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:00.528" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:00.528"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:00.528" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:00.528"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:00.528" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:00.528"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:01.473" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:01.473" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:53 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:01.473" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:01.473"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:01.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:01.474" endtime="20210719 10:47:01.476"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:01.476" endtime="20210719 10:47:01.477"/>
</kw>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:01.477"/>
</kw>
<status status="PASS" starttime="20210719 10:47:00.528" endtime="20210719 10:47:01.478"/>
</kw>
<status status="PASS" starttime="20210719 10:46:59.504" endtime="20210719 10:47:01.478"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:01.479" endtime="20210719 10:47:01.479"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:01.509" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:47:01.481" endtime="20210719 10:47:01.509"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:01.509" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:01.509" endtime="20210719 10:47:01.509"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:01.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:01.509" endtime="20210719 10:47:01.510"/>
</kw>
<msg timestamp="20210719 10:47:01.510" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:01.480" endtime="20210719 10:47:01.510"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:01.529" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:47:01.511" endtime="20210719 10:47:01.529"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:01.530" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:01.530" endtime="20210719 10:47:01.530"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:01.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:01.531" endtime="20210719 10:47:01.532"/>
</kw>
<msg timestamp="20210719 10:47:01.532" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:01.510" endtime="20210719 10:47:01.532"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:01.559" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:47:01.533" endtime="20210719 10:47:01.559"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:01.560" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:47:01.560" endtime="20210719 10:47:01.560"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:01.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:01.561" endtime="20210719 10:47:01.561"/>
</kw>
<msg timestamp="20210719 10:47:01.561" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:47:01.532" endtime="20210719 10:47:01.561"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:01.583" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:47:01.562" endtime="20210719 10:47:01.583"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:01.584" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:47:01.584" endtime="20210719 10:47:01.584"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:01.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:01.584" endtime="20210719 10:47:01.585"/>
</kw>
<msg timestamp="20210719 10:47:01.585" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:47:01.561" endtime="20210719 10:47:01.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:01.590" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:01.588" endtime="20210719 10:47:01.590"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:01.592" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:01.591" endtime="20210719 10:47:01.593"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:01.594" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:01.593" endtime="20210719 10:47:01.595"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:02.552" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:02.552" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:54 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:02.552" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:01.595" endtime="20210719 10:47:02.552"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:02.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:02.553" endtime="20210719 10:47:02.555"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:02.555" endtime="20210719 10:47:02.555"/>
</kw>
<status status="PASS" starttime="20210719 10:47:01.587" endtime="20210719 10:47:02.556"/>
</kw>
<status status="PASS" starttime="20210719 10:47:01.586" endtime="20210719 10:47:02.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:02.558" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:02.557" endtime="20210719 10:47:02.558"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:02.559" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:02.558" endtime="20210719 10:47:02.559"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:02.560" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:02.559" endtime="20210719 10:47:02.560"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:03.514" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:03.515" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:03.515" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:02.560" endtime="20210719 10:47:03.515"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:03.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:03.515" endtime="20210719 10:47:03.518"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:03.518" endtime="20210719 10:47:03.519"/>
</kw>
<status status="PASS" starttime="20210719 10:47:02.557" endtime="20210719 10:47:03.520"/>
</kw>
<status status="PASS" starttime="20210719 10:47:02.556" endtime="20210719 10:47:03.520"/>
</kw>
<status status="PASS" starttime="20210719 10:47:01.478" endtime="20210719 10:47:03.520"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:03.521" endtime="20210719 10:47:03.522"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:03.543" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:47:03.523" endtime="20210719 10:47:03.543"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:03.543" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:03.543" endtime="20210719 10:47:03.543"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:03.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:03.543" endtime="20210719 10:47:03.544"/>
</kw>
<msg timestamp="20210719 10:47:03.544" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:03.522" endtime="20210719 10:47:03.544"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:03.562" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:47:03.544" endtime="20210719 10:47:03.562"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:03.563" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:03.562" endtime="20210719 10:47:03.563"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:03.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:03.563" endtime="20210719 10:47:03.563"/>
</kw>
<msg timestamp="20210719 10:47:03.563" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:03.544" endtime="20210719 10:47:03.563"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:03.573" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:47:03.564" endtime="20210719 10:47:03.573"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:03.573" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:47:03.573" endtime="20210719 10:47:03.573"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:03.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:03.573" endtime="20210719 10:47:03.573"/>
</kw>
<msg timestamp="20210719 10:47:03.573" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:47:03.563" endtime="20210719 10:47:03.573"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:03.606" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:47:03.573" endtime="20210719 10:47:03.606"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:03.607" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:47:03.606" endtime="20210719 10:47:03.607"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:03.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:03.607" endtime="20210719 10:47:03.607"/>
</kw>
<msg timestamp="20210719 10:47:03.607" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:47:03.573" endtime="20210719 10:47:03.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:03.609" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:03.608" endtime="20210719 10:47:03.609"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:03.610" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:03.609" endtime="20210719 10:47:03.610"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:03.610" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:03.610" endtime="20210719 10:47:03.610"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:04.571" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:04.571" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:56 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:04.571" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:03.610" endtime="20210719 10:47:04.571"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:04.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:04.571" endtime="20210719 10:47:04.571"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:04.571" endtime="20210719 10:47:04.586"/>
</kw>
<status status="PASS" starttime="20210719 10:47:03.608" endtime="20210719 10:47:04.590"/>
</kw>
<status status="PASS" starttime="20210719 10:47:03.608" endtime="20210719 10:47:04.590"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:04.591" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:04.591" endtime="20210719 10:47:04.591"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:04.591" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:04.591" endtime="20210719 10:47:04.591"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:04.591" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:04.591" endtime="20210719 10:47:04.591"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:05.541" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:05.541" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:57 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:05.541" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:04.591" endtime="20210719 10:47:05.541"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:05.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:05.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:05.541"/>
</kw>
<status status="PASS" starttime="20210719 10:47:04.590" endtime="20210719 10:47:05.541"/>
</kw>
<status status="PASS" starttime="20210719 10:47:04.590" endtime="20210719 10:47:05.541"/>
</kw>
<status status="PASS" starttime="20210719 10:47:03.521" endtime="20210719 10:47:05.541"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:05.541"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:05.557" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:05.557"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:05.557" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:05.557" endtime="20210719 10:47:05.557"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:05.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:05.557" endtime="20210719 10:47:05.573"/>
</kw>
<msg timestamp="20210719 10:47:05.573" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:05.573"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:05.588" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:47:05.573" endtime="20210719 10:47:05.588"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:05.588" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:05.588" endtime="20210719 10:47:05.588"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:05.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:05.588" endtime="20210719 10:47:05.588"/>
</kw>
<msg timestamp="20210719 10:47:05.588" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:05.573" endtime="20210719 10:47:05.588"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:05.604" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:47:05.588" endtime="20210719 10:47:05.604"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:05.604" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:47:05.604" endtime="20210719 10:47:05.604"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:05.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:05.604" endtime="20210719 10:47:05.604"/>
</kw>
<msg timestamp="20210719 10:47:05.604" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:47:05.588" endtime="20210719 10:47:05.604"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:47:05.604" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:05.620"/>
</kw>
<msg timestamp="20210719 10:47:05.620" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:47:05.604" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:05.620" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:05.620"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:06.609" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:06.609" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:58 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:06.609" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:06.610"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:06.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:06.610" endtime="20210719 10:47:06.612"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:06.612" endtime="20210719 10:47:06.613"/>
</kw>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:06.613"/>
</kw>
<status status="PASS" starttime="20210719 10:47:05.620" endtime="20210719 10:47:06.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:06.615" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:06.614" endtime="20210719 10:47:06.615"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:06.615" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:06.615" endtime="20210719 10:47:06.615"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:06.616" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:06.615" endtime="20210719 10:47:06.616"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:07.545" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:07.545" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:14:59 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:07.545" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:06.616" endtime="20210719 10:47:07.545"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:07.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:07.545"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:07.545"/>
</kw>
<status status="PASS" starttime="20210719 10:47:06.614" endtime="20210719 10:47:07.545"/>
</kw>
<status status="PASS" starttime="20210719 10:47:06.613" endtime="20210719 10:47:07.545"/>
</kw>
<status status="PASS" starttime="20210719 10:47:05.541" endtime="20210719 10:47:07.545"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:07.545"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:07.561" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:07.561"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:07.561" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:07.561" endtime="20210719 10:47:07.561"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:07.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:07.561" endtime="20210719 10:47:07.561"/>
</kw>
<msg timestamp="20210719 10:47:07.561" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:07.561"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:07.576" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210719 10:47:07.561" endtime="20210719 10:47:07.576"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:07.576" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:07.576" endtime="20210719 10:47:07.576"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:07.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:07.576" endtime="20210719 10:47:07.576"/>
</kw>
<msg timestamp="20210719 10:47:07.576" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210719 10:47:07.561" endtime="20210719 10:47:07.576"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:07.596" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:47:07.592" endtime="20210719 10:47:07.596"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:07.612" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:47:07.596" endtime="20210719 10:47:07.612"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:07.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:07.612" endtime="20210719 10:47:07.612"/>
</kw>
<msg timestamp="20210719 10:47:07.612" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:47:07.576" endtime="20210719 10:47:07.612"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:47:07.612" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:07.628"/>
</kw>
<msg timestamp="20210719 10:47:07.628" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:47:07.612" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:07.628" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:07.628"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:08.594" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:08.594" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:15:00 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:08.594" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:08.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:08.594"/>
</kw>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:08.594"/>
</kw>
<status status="PASS" starttime="20210719 10:47:07.628" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:08.594" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:47:08.594" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:47:08.594" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:08.594"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:47:09.528" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:47:09.528" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:15:01 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:47:09.528" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:09.528"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:47:09.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:47:09.528" endtime="20210719 10:47:09.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.543" endtime="20210719 10:47:09.543"/>
</kw>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:09.543"/>
</kw>
<status status="PASS" starttime="20210719 10:47:08.594" endtime="20210719 10:47:09.543"/>
</kw>
<status status="PASS" starttime="20210719 10:47:07.545" endtime="20210719 10:47:09.543"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.543" endtime="20210719 10:47:09.543"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.549" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210719 10:47:09.543" endtime="20210719 10:47:09.549"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.566" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.565" endtime="20210719 10:47:09.566"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.566" endtime="20210719 10:47:09.567"/>
</kw>
<msg timestamp="20210719 10:47:09.567" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.543" endtime="20210719 10:47:09.567"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.607" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210719 10:47:09.568" endtime="20210719 10:47:09.607"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.608" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.607" endtime="20210719 10:47:09.608"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.608" endtime="20210719 10:47:09.608"/>
</kw>
<msg timestamp="20210719 10:47:09.608" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.567" endtime="20210719 10:47:09.608"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.630" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:47:09.609" endtime="20210719 10:47:09.630"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.630" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:47:09.630" endtime="20210719 10:47:09.630"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.630" endtime="20210719 10:47:09.631"/>
</kw>
<msg timestamp="20210719 10:47:09.631" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:47:09.608" endtime="20210719 10:47:09.631"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.654" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:47:09.632" endtime="20210719 10:47:09.654"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.655" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:47:09.654" endtime="20210719 10:47:09.655"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.655" endtime="20210719 10:47:09.655"/>
</kw>
<msg timestamp="20210719 10:47:09.655" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:47:09.631" endtime="20210719 10:47:09.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.656" endtime="20210719 10:47:09.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.656" endtime="20210719 10:47:09.656"/>
</kw>
<status status="PASS" starttime="20210719 10:47:09.543" endtime="20210719 10:47:09.656"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.657" endtime="20210719 10:47:09.658"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.680" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210719 10:47:09.659" endtime="20210719 10:47:09.680"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.681" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.680" endtime="20210719 10:47:09.681"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.681" endtime="20210719 10:47:09.681"/>
</kw>
<msg timestamp="20210719 10:47:09.681" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.658" endtime="20210719 10:47:09.681"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.704" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210719 10:47:09.682" endtime="20210719 10:47:09.704"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.705" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.704" endtime="20210719 10:47:09.705"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.706" endtime="20210719 10:47:09.706"/>
</kw>
<msg timestamp="20210719 10:47:09.706" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.681" endtime="20210719 10:47:09.706"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.727" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:47:09.707" endtime="20210719 10:47:09.728"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.729" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:47:09.728" endtime="20210719 10:47:09.729"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.729" endtime="20210719 10:47:09.730"/>
</kw>
<msg timestamp="20210719 10:47:09.730" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:47:09.707" endtime="20210719 10:47:09.730"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.751" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:47:09.731" endtime="20210719 10:47:09.751"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.756" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:47:09.752" endtime="20210719 10:47:09.756"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.756" endtime="20210719 10:47:09.756"/>
</kw>
<msg timestamp="20210719 10:47:09.757" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:47:09.730" endtime="20210719 10:47:09.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.757" endtime="20210719 10:47:09.757"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.758" endtime="20210719 10:47:09.758"/>
</kw>
<status status="PASS" starttime="20210719 10:47:09.657" endtime="20210719 10:47:09.758"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.759" endtime="20210719 10:47:09.760"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.782" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210719 10:47:09.761" endtime="20210719 10:47:09.782"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.783" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.782" endtime="20210719 10:47:09.783"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.783" endtime="20210719 10:47:09.783"/>
</kw>
<msg timestamp="20210719 10:47:09.783" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210719 10:47:09.760" endtime="20210719 10:47:09.784"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.806" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210719 10:47:09.785" endtime="20210719 10:47:09.806"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.807" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.806" endtime="20210719 10:47:09.807"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.807" endtime="20210719 10:47:09.807"/>
</kw>
<msg timestamp="20210719 10:47:09.807" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210719 10:47:09.784" endtime="20210719 10:47:09.807"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.828" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:47:09.808" endtime="20210719 10:47:09.828"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.829" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:47:09.828" endtime="20210719 10:47:09.829"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.829" endtime="20210719 10:47:09.829"/>
</kw>
<msg timestamp="20210719 10:47:09.830" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:47:09.808" endtime="20210719 10:47:09.830"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:47:09.850" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:47:09.830" endtime="20210719 10:47:09.850"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:47:09.851" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:47:09.850" endtime="20210719 10:47:09.851"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:47:09.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:47:09.851" endtime="20210719 10:47:09.851"/>
</kw>
<msg timestamp="20210719 10:47:09.851" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:47:09.830" endtime="20210719 10:47:09.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.851" endtime="20210719 10:47:09.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:47:09.852" endtime="20210719 10:47:09.852"/>
</kw>
<status status="PASS" starttime="20210719 10:47:09.759" endtime="20210719 10:47:09.852"/>
</iter>
<status status="PASS" starttime="20210719 10:46:53.451" endtime="20210719 10:47:09.852"/>
</for>
<kw name="Evaluate" library="BuiltIn">
<var>${flag}</var>
<arg>${flag1}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210719 10:47:09.853" level="INFO">${flag} = 1</msg>
<status status="PASS" starttime="20210719 10:47:09.852" endtime="20210719 10:47:09.853"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${flag}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210719 10:47:09.854" level="INFO">${flag} = 1</msg>
<status status="PASS" starttime="20210719 10:47:09.853" endtime="20210719 10:47:09.854"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>******************************Temperature set for all rack sensors*********************************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.855" endtime="20210719 10:47:09.855"/>
</kw>
<status status="PASS" starttime="20210719 10:46:52.464" endtime="20210719 10:47:09.855"/>
</kw>
<kw name="waitForTwoMinutes" library="apiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for Two minutes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:47:09.856" endtime="20210719 10:47:09.857"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:49:09.863" level="INFO">Slept 2 minutes</msg>
<status status="PASS" starttime="20210719 10:47:09.857" endtime="20210719 10:49:09.863"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**************two minutes waiting done***************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:09.863"/>
</kw>
<status status="PASS" starttime="20210719 10:47:09.856" endtime="20210719 10:49:09.863"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>7</value>
<iter>
<var name="${i}">0</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:09.863" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:09.863"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:49:09.863" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:49:09.863" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:09.863"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:09.863" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:09.863"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:09.873" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:09.873" endtime="20210719 10:49:09.873"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:12.254" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:49:12.254" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:04 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:49:12.254" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:09.873" endtime="20210719 10:49:12.254"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:12.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:12.254" endtime="20210719 10:49:12.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:49:12.254" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:49:12.254" endtime="20210719 10:49:12.254"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.254" endtime="20210719 10:49:12.254"/>
</kw>
<msg timestamp="20210719 10:49:12.254" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:12.254"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:12.283" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:49:12.254" endtime="20210719 10:49:12.283"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:49:12.283" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:49:12.283" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.283"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:49:12.283" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.283"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.283"/>
</kw>
<msg timestamp="20210719 10:49:12.283" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:49:12.254" endtime="20210719 10:49:12.283"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.283"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.283"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:12.303" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.303"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:12.303" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:12.303" endtime="20210719 10:49:12.303"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.303" endtime="20210719 10:49:12.303"/>
</kw>
<msg timestamp="20210719 10:49:12.303" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.303"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:12.323" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:12.303" endtime="20210719 10:49:12.323"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:12.323" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:12.323" endtime="20210719 10:49:12.323"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.323" endtime="20210719 10:49:12.323"/>
</kw>
<msg timestamp="20210719 10:49:12.323" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:12.303" endtime="20210719 10:49:12.323"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:12.343" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:49:12.323" endtime="20210719 10:49:12.343"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:12.343" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:49:12.343" endtime="20210719 10:49:12.343"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.343" endtime="20210719 10:49:12.343"/>
</kw>
<msg timestamp="20210719 10:49:12.343" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:49:12.323" endtime="20210719 10:49:12.343"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:49:12.343" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<msg timestamp="20210719 10:49:12.363" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:49:12.343" endtime="20210719 10:49:12.363"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</branch>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</if>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</branch>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</if>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.363"/>
</iter>
<status status="PASS" starttime="20210719 10:49:12.283" endtime="20210719 10:49:12.363"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:12.363" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:12.363"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:13.294" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:13.294" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:05 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:13.294" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:13.294"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:13.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:13.294" endtime="20210719 10:49:13.294"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:13.294" endtime="20210719 10:49:13.294"/>
</kw>
<status status="PASS" starttime="20210719 10:49:12.363" endtime="20210719 10:49:13.294"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:13.303" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:13.303" endtime="20210719 10:49:13.303"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:13.303" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:13.303" endtime="20210719 10:49:13.303"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:13.303" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:13.303" endtime="20210719 10:49:13.303"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:14.324" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:14.324" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:06 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:14.324" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:13.303" endtime="20210719 10:49:14.324"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:14.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:14.324" endtime="20210719 10:49:14.334"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:14.334"/>
</kw>
<status status="PASS" starttime="20210719 10:49:13.294" endtime="20210719 10:49:14.334"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:14.334"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.373" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:14.373"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.373" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:14.373" endtime="20210719 10:49:14.373"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.373" endtime="20210719 10:49:14.373"/>
</kw>
<msg timestamp="20210719 10:49:14.373" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:14.373"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.394" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:14.373" endtime="20210719 10:49:14.394"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.394" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:14.394" endtime="20210719 10:49:14.394"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.394" endtime="20210719 10:49:14.394"/>
</kw>
<msg timestamp="20210719 10:49:14.394" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:14.373" endtime="20210719 10:49:14.394"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.413" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:49:14.399" endtime="20210719 10:49:14.413"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.413" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:49:14.413" endtime="20210719 10:49:14.413"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.413" endtime="20210719 10:49:14.413"/>
</kw>
<msg timestamp="20210719 10:49:14.413" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:49:14.399" endtime="20210719 10:49:14.413"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.433" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:49:14.418" endtime="20210719 10:49:14.433"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.433" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.433"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.433"/>
</kw>
<msg timestamp="20210719 10:49:14.433" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:49:14.418" endtime="20210719 10:49:14.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.433"/>
</kw>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:14.433"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.453" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.453"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.459" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:14.453" endtime="20210719 10:49:14.459"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.459" endtime="20210719 10:49:14.459"/>
</kw>
<msg timestamp="20210719 10:49:14.459" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:14.459"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.473" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:14.459" endtime="20210719 10:49:14.473"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.473" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:14.473" endtime="20210719 10:49:14.473"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.473" endtime="20210719 10:49:14.473"/>
</kw>
<msg timestamp="20210719 10:49:14.473" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:14.459" endtime="20210719 10:49:14.473"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.498" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:49:14.473" endtime="20210719 10:49:14.498"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.498" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:49:14.498" endtime="20210719 10:49:14.498"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.498" endtime="20210719 10:49:14.498"/>
</kw>
<msg timestamp="20210719 10:49:14.498" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:49:14.473" endtime="20210719 10:49:14.498"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:14.518" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:49:14.498" endtime="20210719 10:49:14.518"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:14.518" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:49:14.518" endtime="20210719 10:49:14.518"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:14.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:14.518" endtime="20210719 10:49:14.518"/>
</kw>
<msg timestamp="20210719 10:49:14.518" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:49:14.498" endtime="20210719 10:49:14.518"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:14.523" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:14.523" endtime="20210719 10:49:14.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:14.523" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:14.523" endtime="20210719 10:49:14.523"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:14.523" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:14.523" endtime="20210719 10:49:14.523"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:16.493" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:16.493" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:08 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:16.493" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:14.523" endtime="20210719 10:49:16.493"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:16.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:16.493" endtime="20210719 10:49:16.504"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:16.504" endtime="20210719 10:49:16.504"/>
</kw>
<status status="PASS" starttime="20210719 10:49:14.518" endtime="20210719 10:49:16.508"/>
</kw>
<status status="PASS" starttime="20210719 10:49:14.518" endtime="20210719 10:49:16.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:16.513" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:16.508" endtime="20210719 10:49:16.513"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:16.513" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:16.513" endtime="20210719 10:49:16.513"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:16.513" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:16.513" endtime="20210719 10:49:16.513"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:17.451" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:17.451" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:09 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:17.453" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:16.513" endtime="20210719 10:49:17.453"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:17.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:17.453" endtime="20210719 10:49:17.453"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:17.453" endtime="20210719 10:49:17.453"/>
</kw>
<status status="PASS" starttime="20210719 10:49:16.508" endtime="20210719 10:49:17.453"/>
</kw>
<status status="PASS" starttime="20210719 10:49:16.508" endtime="20210719 10:49:17.453"/>
</kw>
<status status="PASS" starttime="20210719 10:49:14.433" endtime="20210719 10:49:17.453"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:17.473" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:17.453" endtime="20210719 10:49:17.473"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:17.473" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:17.473" endtime="20210719 10:49:17.473"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:17.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:17.473" endtime="20210719 10:49:17.473"/>
</kw>
<msg timestamp="20210719 10:49:17.473" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:17.453" endtime="20210719 10:49:17.473"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:17.493" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:17.473" endtime="20210719 10:49:17.493"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:17.493" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:17.493" endtime="20210719 10:49:17.493"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:17.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:17.493" endtime="20210719 10:49:17.493"/>
</kw>
<msg timestamp="20210719 10:49:17.493" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:17.473" endtime="20210719 10:49:17.493"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:17.513" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:49:17.493" endtime="20210719 10:49:17.513"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:17.513" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:49:17.513" endtime="20210719 10:49:17.513"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:17.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:17.513" endtime="20210719 10:49:17.513"/>
</kw>
<msg timestamp="20210719 10:49:17.513" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:49:17.493" endtime="20210719 10:49:17.513"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:17.528" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:49:17.513" endtime="20210719 10:49:17.528"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:17.533" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:49:17.528" endtime="20210719 10:49:17.533"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:17.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:17.533"/>
</kw>
<msg timestamp="20210719 10:49:17.533" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:49:17.513" endtime="20210719 10:49:17.533"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:17.533" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:17.533"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:17.533" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:17.533"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:17.533" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:17.533"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:18.503" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:18.503" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:10 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:18.503" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:18.503"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:18.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:18.503" endtime="20210719 10:49:18.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:18.508" endtime="20210719 10:49:18.513"/>
</kw>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:18.513"/>
</kw>
<status status="PASS" starttime="20210719 10:49:17.533" endtime="20210719 10:49:18.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:18.518" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:18.518" endtime="20210719 10:49:18.518"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:18.518" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:18.518" endtime="20210719 10:49:18.518"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:18.523" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:18.518" endtime="20210719 10:49:18.523"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:21.005" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:21.005" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:12 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:21.005" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:18.523" endtime="20210719 10:49:21.005"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:21.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:21.005" endtime="20210719 10:49:21.005"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:21.005" endtime="20210719 10:49:21.005"/>
</kw>
<status status="PASS" starttime="20210719 10:49:18.513" endtime="20210719 10:49:21.005"/>
</kw>
<status status="PASS" starttime="20210719 10:49:18.513" endtime="20210719 10:49:21.005"/>
</kw>
<status status="PASS" starttime="20210719 10:49:17.453" endtime="20210719 10:49:21.005"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:21.036" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:21.005" endtime="20210719 10:49:21.036"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:21.036" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:21.036" endtime="20210719 10:49:21.036"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:21.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:21.036" endtime="20210719 10:49:21.036"/>
</kw>
<msg timestamp="20210719 10:49:21.036" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:21.005" endtime="20210719 10:49:21.036"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:21.051" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:21.036" endtime="20210719 10:49:21.051"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:21.051" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:21.051" endtime="20210719 10:49:21.051"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:21.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:21.058" endtime="20210719 10:49:21.058"/>
</kw>
<msg timestamp="20210719 10:49:21.058" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:21.036" endtime="20210719 10:49:21.058"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:21.074" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:49:21.058" endtime="20210719 10:49:21.074"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:21.074" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:49:21.074" endtime="20210719 10:49:21.074"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:21.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:21.074" endtime="20210719 10:49:21.074"/>
</kw>
<msg timestamp="20210719 10:49:21.074" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:49:21.058" endtime="20210719 10:49:21.074"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:49:21.074" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:21.089"/>
</kw>
<msg timestamp="20210719 10:49:21.089" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:49:21.074" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:21.089" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:21.089"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:22.006" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:22.006" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:13 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:22.006" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:22.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:22.006"/>
</kw>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:22.006"/>
</kw>
<status status="PASS" starttime="20210719 10:49:21.089" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:22.006" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:22.006" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:22.006" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:22.006"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:23.595" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:23.595" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:15 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:23.595" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:23.595"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:23.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:23.595" endtime="20210719 10:49:23.610"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:23.610" endtime="20210719 10:49:23.610"/>
</kw>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:23.610"/>
</kw>
<status status="PASS" starttime="20210719 10:49:22.006" endtime="20210719 10:49:23.610"/>
</kw>
<status status="PASS" starttime="20210719 10:49:21.005" endtime="20210719 10:49:23.610"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:23.641" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:23.610" endtime="20210719 10:49:23.641"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:23.641" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:23.641" endtime="20210719 10:49:23.641"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:23.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:23.641" endtime="20210719 10:49:23.641"/>
</kw>
<msg timestamp="20210719 10:49:23.641" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:23.610" endtime="20210719 10:49:23.641"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:23.662" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:23.641" endtime="20210719 10:49:23.662"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:23.662" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:23.662" endtime="20210719 10:49:23.662"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:23.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:23.662" endtime="20210719 10:49:23.662"/>
</kw>
<msg timestamp="20210719 10:49:23.662" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:23.641" endtime="20210719 10:49:23.662"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:23.678" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:49:23.662" endtime="20210719 10:49:23.678"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:23.678" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:49:23.678" endtime="20210719 10:49:23.678"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:23.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:23.678" endtime="20210719 10:49:23.678"/>
</kw>
<msg timestamp="20210719 10:49:23.678" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:49:23.662" endtime="20210719 10:49:23.678"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:23.693" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:49:23.678" endtime="20210719 10:49:23.693"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:23.693" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:49:23.693" endtime="20210719 10:49:23.693"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:23.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:23.693" endtime="20210719 10:49:23.693"/>
</kw>
<msg timestamp="20210719 10:49:23.709" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:49:23.678" endtime="20210719 10:49:23.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:23.709" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:23.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:23.709" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:23.709"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:23.709" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:23.709"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:26.197" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:26.197" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:26.197" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:26.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:26.197"/>
</kw>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:26.197"/>
</kw>
<status status="PASS" starttime="20210719 10:49:23.709" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:26.197" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:26.197" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:26.197" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:26.197"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:27.114" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:27.114" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:27.114" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:27.114"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:27.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:27.114" endtime="20210719 10:49:27.129"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:27.129" endtime="20210719 10:49:27.129"/>
</kw>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:27.129"/>
</kw>
<status status="PASS" starttime="20210719 10:49:26.197" endtime="20210719 10:49:27.129"/>
</kw>
<status status="PASS" starttime="20210719 10:49:23.610" endtime="20210719 10:49:27.129"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:27.145" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:27.129" endtime="20210719 10:49:27.145"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:27.145" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:27.145" endtime="20210719 10:49:27.145"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:27.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:27.145" endtime="20210719 10:49:27.145"/>
</kw>
<msg timestamp="20210719 10:49:27.145" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:27.129" endtime="20210719 10:49:27.145"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:27.161" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:27.145" endtime="20210719 10:49:27.161"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:27.161" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:27.161" endtime="20210719 10:49:27.161"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:27.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:27.161" endtime="20210719 10:49:27.161"/>
</kw>
<msg timestamp="20210719 10:49:27.167" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:27.145" endtime="20210719 10:49:27.167"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:27.183" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:49:27.167" endtime="20210719 10:49:27.183"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:27.183" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:49:27.183" endtime="20210719 10:49:27.183"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:27.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:27.183" endtime="20210719 10:49:27.183"/>
</kw>
<msg timestamp="20210719 10:49:27.183" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:49:27.167" endtime="20210719 10:49:27.183"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:49:27.183" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:27.199"/>
</kw>
<msg timestamp="20210719 10:49:27.199" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:49:27.183" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:27.199" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:27.199"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:28.116" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:28.116" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:19 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:28.116" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:28.116"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:28.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:28.116" endtime="20210719 10:49:28.131"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:28.131"/>
</kw>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:28.131"/>
</kw>
<status status="PASS" starttime="20210719 10:49:27.199" endtime="20210719 10:49:28.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:28.131" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:28.131"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:28.131" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:28.131"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:28.147" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:28.147"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:29.070" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:29.070" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:20 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:29.070" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:28.147" endtime="20210719 10:49:29.070"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:29.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:29.070" endtime="20210719 10:49:29.070"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:29.070" endtime="20210719 10:49:29.070"/>
</kw>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:29.070"/>
</kw>
<status status="PASS" starttime="20210719 10:49:28.131" endtime="20210719 10:49:29.070"/>
</kw>
<status status="PASS" starttime="20210719 10:49:27.129" endtime="20210719 10:49:29.070"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:29.086" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:29.070" endtime="20210719 10:49:29.086"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:29.086" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:29.086" endtime="20210719 10:49:29.086"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:29.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:29.086" endtime="20210719 10:49:29.086"/>
</kw>
<msg timestamp="20210719 10:49:29.086" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:29.070" endtime="20210719 10:49:29.086"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:29.101" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:29.101" endtime="20210719 10:49:29.101"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:29.117" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:29.117" endtime="20210719 10:49:29.117"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:29.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:29.117" endtime="20210719 10:49:29.117"/>
</kw>
<msg timestamp="20210719 10:49:29.117" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:29.086" endtime="20210719 10:49:29.117"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:29.133" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:49:29.117" endtime="20210719 10:49:29.133"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:29.133" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:49:29.133" endtime="20210719 10:49:29.133"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:29.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:29.133" endtime="20210719 10:49:29.133"/>
</kw>
<msg timestamp="20210719 10:49:29.133" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:49:29.117" endtime="20210719 10:49:29.133"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:49:29.133" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:29.148"/>
</kw>
<msg timestamp="20210719 10:49:29.148" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:49:29.133" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:29.148" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:29.148"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:30.203" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:30.203" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:22 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:30.203" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:30.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:30.203"/>
</kw>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:30.203"/>
</kw>
<status status="PASS" starttime="20210719 10:49:29.148" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:30.203" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:30.203" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:30.203" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:30.203"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:31.136" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:31.136" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:22 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:31.136" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:31.136"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:31.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:31.136" endtime="20210719 10:49:31.136"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:31.136" endtime="20210719 10:49:31.136"/>
</kw>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:31.136"/>
</kw>
<status status="PASS" starttime="20210719 10:49:30.203" endtime="20210719 10:49:31.151"/>
</kw>
<status status="PASS" starttime="20210719 10:49:29.070" endtime="20210719 10:49:31.151"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:31.167" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:49:31.151" endtime="20210719 10:49:31.167"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:31.167" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:31.167" endtime="20210719 10:49:31.167"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:31.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:31.167" endtime="20210719 10:49:31.167"/>
</kw>
<msg timestamp="20210719 10:49:31.167" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:49:31.151" endtime="20210719 10:49:31.167"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:31.173" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:49:31.167" endtime="20210719 10:49:31.173"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:31.173" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:31.173" endtime="20210719 10:49:31.173"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:31.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:31.173" endtime="20210719 10:49:31.173"/>
</kw>
<msg timestamp="20210719 10:49:31.173" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:49:31.167" endtime="20210719 10:49:31.173"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:31.205" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:49:31.173" endtime="20210719 10:49:31.205"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:31.205" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:49:31.205" endtime="20210719 10:49:31.205"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:31.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:31.205" endtime="20210719 10:49:31.205"/>
</kw>
<msg timestamp="20210719 10:49:31.205" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:49:31.173" endtime="20210719 10:49:31.205"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:49:31.205" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:31.220"/>
</kw>
<msg timestamp="20210719 10:49:31.220" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:49:31.205" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:31.220" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:31.220"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:32.142" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:32.142" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:23 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:32.142" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:32.142"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:32.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:32.142" endtime="20210719 10:49:32.157"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:32.157"/>
</kw>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:32.157"/>
</kw>
<status status="PASS" starttime="20210719 10:49:31.220" endtime="20210719 10:49:32.157"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:32.157" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:32.157"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:49:32.157" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:32.157"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:49:32.157" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:32.157"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:49:37.185" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:49:37.185" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:17:29 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:49:37.185" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:37.185"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:49:37.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:49:37.185" endtime="20210719 10:49:37.185"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:37.185" endtime="20210719 10:49:37.185"/>
</kw>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:37.185"/>
</kw>
<status status="PASS" starttime="20210719 10:49:32.157" endtime="20210719 10:49:37.185"/>
</kw>
<status status="PASS" starttime="20210719 10:49:31.151" endtime="20210719 10:49:37.185"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.216" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:49:37.185" endtime="20210719 10:49:37.216"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.216" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.216" endtime="20210719 10:49:37.216"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.216" endtime="20210719 10:49:37.216"/>
</kw>
<msg timestamp="20210719 10:49:37.216" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.185" endtime="20210719 10:49:37.216"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.231" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:49:37.216" endtime="20210719 10:49:37.231"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.231" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.231" endtime="20210719 10:49:37.231"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.231" endtime="20210719 10:49:37.231"/>
</kw>
<msg timestamp="20210719 10:49:37.231" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.216" endtime="20210719 10:49:37.231"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.247" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:49:37.231" endtime="20210719 10:49:37.247"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.247" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:49:37.247" endtime="20210719 10:49:37.247"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.247" endtime="20210719 10:49:37.247"/>
</kw>
<msg timestamp="20210719 10:49:37.247" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:49:37.231" endtime="20210719 10:49:37.247"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.263" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:49:37.247" endtime="20210719 10:49:37.263"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.263" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.263"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.263"/>
</kw>
<msg timestamp="20210719 10:49:37.263" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:49:37.247" endtime="20210719 10:49:37.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.263"/>
</kw>
<status status="PASS" starttime="20210719 10:49:37.185" endtime="20210719 10:49:37.263"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.285" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.285"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.285" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.285" endtime="20210719 10:49:37.285"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.285" endtime="20210719 10:49:37.285"/>
</kw>
<msg timestamp="20210719 10:49:37.285" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.285"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.300" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:49:37.285" endtime="20210719 10:49:37.300"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.300" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.300" endtime="20210719 10:49:37.300"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.300" endtime="20210719 10:49:37.300"/>
</kw>
<msg timestamp="20210719 10:49:37.300" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.285" endtime="20210719 10:49:37.300"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.332" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:49:37.300" endtime="20210719 10:49:37.332"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.332" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:49:37.332" endtime="20210719 10:49:37.332"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.332" endtime="20210719 10:49:37.332"/>
</kw>
<msg timestamp="20210719 10:49:37.332" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:49:37.300" endtime="20210719 10:49:37.332"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.347" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:49:37.332" endtime="20210719 10:49:37.347"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.347" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.347"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.347"/>
</kw>
<msg timestamp="20210719 10:49:37.347" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:49:37.332" endtime="20210719 10:49:37.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.347"/>
</kw>
<status status="PASS" starttime="20210719 10:49:37.263" endtime="20210719 10:49:37.347"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.385" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.385"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.385" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.385" endtime="20210719 10:49:37.385"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.385" endtime="20210719 10:49:37.385"/>
</kw>
<msg timestamp="20210719 10:49:37.385" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.385"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.401" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:49:37.385" endtime="20210719 10:49:37.401"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.401" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.401" endtime="20210719 10:49:37.401"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.401" endtime="20210719 10:49:37.401"/>
</kw>
<msg timestamp="20210719 10:49:37.401" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:49:37.385" endtime="20210719 10:49:37.401"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.416" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:49:37.401" endtime="20210719 10:49:37.416"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.416" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:49:37.416" endtime="20210719 10:49:37.416"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.416" endtime="20210719 10:49:37.416"/>
</kw>
<msg timestamp="20210719 10:49:37.416" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:49:37.401" endtime="20210719 10:49:37.416"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:49:37.432" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:49:37.416" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:49:37.432" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:49:37.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:49:37.432"/>
</kw>
<msg timestamp="20210719 10:49:37.432" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:49:37.416" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:49:37.432"/>
</kw>
<status status="PASS" starttime="20210719 10:49:37.347" endtime="20210719 10:49:37.432"/>
</iter>
<status status="PASS" starttime="20210719 10:49:14.334" endtime="20210719 10:49:37.432"/>
</for>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:49:37.432"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:50:37.465" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:50:37.465"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:37.466" endtime="20210719 10:50:37.466"/>
</kw>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:50:37.466"/>
</kw>
<status status="PASS" starttime="20210719 10:49:37.432" endtime="20210719 10:50:37.469"/>
</kw>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:50:37.469"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:37.469" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:37.469"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:50:37.469" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:50:37.469" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:37.469"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:37.469" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:37.469"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:37.469" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:37.469"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:38.497" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:50:38.497" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:30 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:50:38.497" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:38.497"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:38.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:38.497" endtime="20210719 10:50:38.503"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:50:38.507" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:50:38.504" endtime="20210719 10:50:38.507"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.507" endtime="20210719 10:50:38.507"/>
</kw>
<msg timestamp="20210719 10:50:38.507" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:50:38.507"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:38.575" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:50:38.507" endtime="20210719 10:50:38.575"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:50:38.575" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:50:38.575" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:50:38.575" endtime="20210719 10:50:38.575"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:50:38.575" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:50:38.575" endtime="20210719 10:50:38.575"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.575" endtime="20210719 10:50:38.575"/>
</kw>
<msg timestamp="20210719 10:50:38.591" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:50:38.507" endtime="20210719 10:50:38.591"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.591"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.591"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:38.663" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.663"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:38.663" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:38.663" endtime="20210719 10:50:38.663"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.663" endtime="20210719 10:50:38.663"/>
</kw>
<msg timestamp="20210719 10:50:38.663" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.663"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:38.706" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:38.663" endtime="20210719 10:50:38.706"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:38.706" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:38.706" endtime="20210719 10:50:38.706"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.706" endtime="20210719 10:50:38.706"/>
</kw>
<msg timestamp="20210719 10:50:38.706" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:38.663" endtime="20210719 10:50:38.706"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:38.727" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:50:38.706" endtime="20210719 10:50:38.727"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:38.727" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:50:38.727" endtime="20210719 10:50:38.727"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.727" endtime="20210719 10:50:38.727"/>
</kw>
<msg timestamp="20210719 10:50:38.727" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:50:38.706" endtime="20210719 10:50:38.727"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:50:38.727" endtime="20210719 10:50:38.794"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</kw>
<msg timestamp="20210719 10:50:38.794" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:50:38.727" endtime="20210719 10:50:38.794"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:50:38.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</kw>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</branch>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</if>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</branch>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.794"/>
</if>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.794"/>
</iter>
<status status="PASS" starttime="20210719 10:50:38.591" endtime="20210719 10:50:38.794"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:38.803" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:38.803"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:38.804" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:38.803" endtime="20210719 10:50:38.804"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:38.805" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:38.804" endtime="20210719 10:50:38.805"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:39.807" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:39.807" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:39.807" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:38.805" endtime="20210719 10:50:39.807"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:39.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:39.807" endtime="20210719 10:50:39.807"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:39.807" endtime="20210719 10:50:39.807"/>
</kw>
<status status="PASS" starttime="20210719 10:50:38.794" endtime="20210719 10:50:39.807"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:39.807" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:39.807" endtime="20210719 10:50:39.807"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:39.807" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:39.807" endtime="20210719 10:50:39.807"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:39.824" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:39.823" endtime="20210719 10:50:39.825"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:40.903" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:40.903" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:32 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:40.903" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:39.825" endtime="20210719 10:50:40.903"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:40.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:40.903" endtime="20210719 10:50:40.907"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:40.908" endtime="20210719 10:50:40.908"/>
</kw>
<status status="PASS" starttime="20210719 10:50:39.807" endtime="20210719 10:50:40.908"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:40.908" endtime="20210719 10:50:40.908"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.016" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:40.914" endtime="20210719 10:50:41.016"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.018" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:41.016" endtime="20210719 10:50:41.019"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.020" endtime="20210719 10:50:41.021"/>
</kw>
<msg timestamp="20210719 10:50:41.022" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:40.908" endtime="20210719 10:50:41.023"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.100" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:41.026" endtime="20210719 10:50:41.100"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.100" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:41.100" endtime="20210719 10:50:41.100"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.100" endtime="20210719 10:50:41.100"/>
</kw>
<msg timestamp="20210719 10:50:41.100" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:41.024" endtime="20210719 10:50:41.100"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.140" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:50:41.104" endtime="20210719 10:50:41.140"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.140" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:50:41.140" endtime="20210719 10:50:41.140"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.140" endtime="20210719 10:50:41.140"/>
</kw>
<msg timestamp="20210719 10:50:41.144" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:50:41.100" endtime="20210719 10:50:41.144"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.200" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:50:41.145" endtime="20210719 10:50:41.200"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.202" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:50:41.201" endtime="20210719 10:50:41.202"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.202" endtime="20210719 10:50:41.203"/>
</kw>
<msg timestamp="20210719 10:50:41.204" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:50:41.144" endtime="20210719 10:50:41.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:50:41.205" endtime="20210719 10:50:41.206"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:50:41.207" endtime="20210719 10:50:41.209"/>
</kw>
<status status="PASS" starttime="20210719 10:50:40.908" endtime="20210719 10:50:41.209"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.268" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:41.211" endtime="20210719 10:50:41.268"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.268" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:41.268" endtime="20210719 10:50:41.268"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.268" endtime="20210719 10:50:41.268"/>
</kw>
<msg timestamp="20210719 10:50:41.268" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:41.210" endtime="20210719 10:50:41.268"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.343" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:41.272" endtime="20210719 10:50:41.343"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.343" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:41.343" endtime="20210719 10:50:41.343"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.343" endtime="20210719 10:50:41.343"/>
</kw>
<msg timestamp="20210719 10:50:41.352" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:41.268" endtime="20210719 10:50:41.352"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.417" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:50:41.353" endtime="20210719 10:50:41.417"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.417" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:50:41.417" endtime="20210719 10:50:41.417"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.417" endtime="20210719 10:50:41.417"/>
</kw>
<msg timestamp="20210719 10:50:41.417" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:50:41.352" endtime="20210719 10:50:41.417"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:41.490" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:50:41.423" endtime="20210719 10:50:41.490"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:41.492" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:50:41.491" endtime="20210719 10:50:41.492"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:41.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:41.492" endtime="20210719 10:50:41.493"/>
</kw>
<msg timestamp="20210719 10:50:41.494" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:50:41.417" endtime="20210719 10:50:41.495"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:41.511" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:41.509" endtime="20210719 10:50:41.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:41.511" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:41.511" endtime="20210719 10:50:41.511"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:41.516" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:41.511" endtime="20210719 10:50:41.516"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:42.603" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:42.604" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:42.604" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:41.517" endtime="20210719 10:50:42.604"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:42.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:42.605" endtime="20210719 10:50:42.608"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:42.608" endtime="20210719 10:50:42.610"/>
</kw>
<status status="PASS" starttime="20210719 10:50:41.499" endtime="20210719 10:50:42.611"/>
</kw>
<status status="PASS" starttime="20210719 10:50:41.495" endtime="20210719 10:50:42.611"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:42.618" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:42.616" endtime="20210719 10:50:42.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:42.619" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:42.619" endtime="20210719 10:50:42.619"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:42.623" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:42.619" endtime="20210719 10:50:42.624"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:43.921" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:43.921" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:35 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:43.921" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:42.625" endtime="20210719 10:50:43.921"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:43.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:43.921" endtime="20210719 10:50:43.921"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:43.921" endtime="20210719 10:50:43.929"/>
</kw>
<status status="PASS" starttime="20210719 10:50:42.613" endtime="20210719 10:50:43.929"/>
</kw>
<status status="PASS" starttime="20210719 10:50:42.613" endtime="20210719 10:50:43.930"/>
</kw>
<status status="PASS" starttime="20210719 10:50:41.209" endtime="20210719 10:50:43.930"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:43.989" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:43.932" endtime="20210719 10:50:43.990"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:43.991" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:43.990" endtime="20210719 10:50:43.991"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:43.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:43.991" endtime="20210719 10:50:43.991"/>
</kw>
<msg timestamp="20210719 10:50:43.994" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:43.931" endtime="20210719 10:50:43.994"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:44.040" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:43.996" endtime="20210719 10:50:44.040"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:44.040" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:44.040" endtime="20210719 10:50:44.040"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:44.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:44.040" endtime="20210719 10:50:44.040"/>
</kw>
<msg timestamp="20210719 10:50:44.045" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:43.994" endtime="20210719 10:50:44.045"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:44.089" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:50:44.047" endtime="20210719 10:50:44.089"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:44.091" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:50:44.090" endtime="20210719 10:50:44.091"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:44.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:44.091" endtime="20210719 10:50:44.091"/>
</kw>
<msg timestamp="20210719 10:50:44.091" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:50:44.046" endtime="20210719 10:50:44.091"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:44.201" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:50:44.096" endtime="20210719 10:50:44.201"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:44.201" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:50:44.201" endtime="20210719 10:50:44.201"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:44.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:44.209" endtime="20210719 10:50:44.210"/>
</kw>
<msg timestamp="20210719 10:50:44.211" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:50:44.091" endtime="20210719 10:50:44.211"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:44.211" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:44.211" endtime="20210719 10:50:44.211"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:44.218" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:44.211" endtime="20210719 10:50:44.218"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:44.220" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:44.219" endtime="20210719 10:50:44.221"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:45.969" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:45.970" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:37 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:45.972" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:44.221" endtime="20210719 10:50:45.972"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:45.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:45.973" endtime="20210719 10:50:45.982"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:45.984" endtime="20210719 10:50:45.985"/>
</kw>
<status status="PASS" starttime="20210719 10:50:44.211" endtime="20210719 10:50:45.988"/>
</kw>
<status status="PASS" starttime="20210719 10:50:44.211" endtime="20210719 10:50:45.988"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:46.000" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:45.998" endtime="20210719 10:50:46.001"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:46.002" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:46.002" endtime="20210719 10:50:46.002"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:46.006" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:46.002" endtime="20210719 10:50:46.006"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:47.386" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:47.386" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:39 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:47.386" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:46.006" endtime="20210719 10:50:47.386"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:47.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:47.389" endtime="20210719 10:50:47.393"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:47.393" endtime="20210719 10:50:47.398"/>
</kw>
<status status="PASS" starttime="20210719 10:50:45.993" endtime="20210719 10:50:47.398"/>
</kw>
<status status="PASS" starttime="20210719 10:50:45.990" endtime="20210719 10:50:47.398"/>
</kw>
<status status="PASS" starttime="20210719 10:50:43.930" endtime="20210719 10:50:47.398"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:47.495" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:47.404" endtime="20210719 10:50:47.495"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:47.499" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:47.495" endtime="20210719 10:50:47.499"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:47.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:47.499" endtime="20210719 10:50:47.501"/>
</kw>
<msg timestamp="20210719 10:50:47.502" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:47.400" endtime="20210719 10:50:47.502"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:47.602" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:47.502" endtime="20210719 10:50:47.602"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:47.602" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:47.602" endtime="20210719 10:50:47.602"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:47.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:47.602" endtime="20210719 10:50:47.607"/>
</kw>
<msg timestamp="20210719 10:50:47.608" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:47.502" endtime="20210719 10:50:47.608"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:47.664" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:50:47.612" endtime="20210719 10:50:47.664"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:47.664" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:50:47.664" endtime="20210719 10:50:47.664"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:47.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:47.664" endtime="20210719 10:50:47.664"/>
</kw>
<msg timestamp="20210719 10:50:47.664" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:50:47.610" endtime="20210719 10:50:47.664"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:47.701" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:50:47.664" endtime="20210719 10:50:47.701"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:47.701" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:47.701"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:47.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:47.701"/>
</kw>
<msg timestamp="20210719 10:50:47.701" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:50:47.664" endtime="20210719 10:50:47.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:47.701" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:47.701"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:47.701" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:47.701"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:47.710" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:47.709" endtime="20210719 10:50:47.710"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:49.429" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:49.429" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:41 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:49.431" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:47.711" endtime="20210719 10:50:49.431"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:49.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:49.432" endtime="20210719 10:50:49.436"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:49.439" endtime="20210719 10:50:49.440"/>
</kw>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:49.440"/>
</kw>
<status status="PASS" starttime="20210719 10:50:47.701" endtime="20210719 10:50:49.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:49.451" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:49.443" endtime="20210719 10:50:49.451"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:49.453" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:49.452" endtime="20210719 10:50:49.453"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:49.453" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:49.453" endtime="20210719 10:50:49.453"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:51.079" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:51.080" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:42 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:51.080" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:49.458" endtime="20210719 10:50:51.081"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:51.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:51.081" endtime="20210719 10:50:51.086"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:51.086" endtime="20210719 10:50:51.088"/>
</kw>
<status status="PASS" starttime="20210719 10:50:49.443" endtime="20210719 10:50:51.088"/>
</kw>
<status status="PASS" starttime="20210719 10:50:49.443" endtime="20210719 10:50:51.088"/>
</kw>
<status status="PASS" starttime="20210719 10:50:47.400" endtime="20210719 10:50:51.088"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:51.178" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:51.088" endtime="20210719 10:50:51.178"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:51.183" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:51.178" endtime="20210719 10:50:51.183"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:51.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:51.183" endtime="20210719 10:50:51.183"/>
</kw>
<msg timestamp="20210719 10:50:51.188" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:51.088" endtime="20210719 10:50:51.188"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:51.278" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:51.190" endtime="20210719 10:50:51.278"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:51.278" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:51.278" endtime="20210719 10:50:51.278"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:51.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:51.278" endtime="20210719 10:50:51.278"/>
</kw>
<msg timestamp="20210719 10:50:51.288" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:51.189" endtime="20210719 10:50:51.288"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:51.387" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:50:51.293" endtime="20210719 10:50:51.387"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:51.390" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:50:51.388" endtime="20210719 10:50:51.390"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:51.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:51.391" endtime="20210719 10:50:51.392"/>
</kw>
<msg timestamp="20210719 10:50:51.393" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:50:51.289" endtime="20210719 10:50:51.393"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:51.483" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:50:51.393" endtime="20210719 10:50:51.483"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:51.488" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:50:51.483" endtime="20210719 10:50:51.488"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:51.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:51.488" endtime="20210719 10:50:51.488"/>
</kw>
<msg timestamp="20210719 10:50:51.488" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:50:51.393" endtime="20210719 10:50:51.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:51.499" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:51.496" endtime="20210719 10:50:51.499"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:51.499" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:51.499" endtime="20210719 10:50:51.499"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:51.503" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:51.499" endtime="20210719 10:50:51.503"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:53.014" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:53.014" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:53.014" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:51.503" endtime="20210719 10:50:53.014"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:53.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:53.014" endtime="20210719 10:50:53.019"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:53.024" endtime="20210719 10:50:53.027"/>
</kw>
<status status="PASS" starttime="20210719 10:50:51.494" endtime="20210719 10:50:53.028"/>
</kw>
<status status="PASS" starttime="20210719 10:50:51.488" endtime="20210719 10:50:53.028"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:53.033" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:53.033" endtime="20210719 10:50:53.033"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:53.038" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:53.033" endtime="20210719 10:50:53.038"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:53.038" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:53.038" endtime="20210719 10:50:53.044"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:54.187" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:54.187" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:54.190" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:53.045" endtime="20210719 10:50:54.190"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:54.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:54.192" endtime="20210719 10:50:54.193"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:54.199" endtime="20210719 10:50:54.202"/>
</kw>
<status status="PASS" starttime="20210719 10:50:53.029" endtime="20210719 10:50:54.202"/>
</kw>
<status status="PASS" starttime="20210719 10:50:53.029" endtime="20210719 10:50:54.204"/>
</kw>
<status status="PASS" starttime="20210719 10:50:51.088" endtime="20210719 10:50:54.204"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:54.268" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:54.211" endtime="20210719 10:50:54.268"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:54.268" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:54.268" endtime="20210719 10:50:54.268"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:54.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:54.268" endtime="20210719 10:50:54.268"/>
</kw>
<msg timestamp="20210719 10:50:54.268" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:54.208" endtime="20210719 10:50:54.268"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:54.312" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:54.268" endtime="20210719 10:50:54.312"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:54.312" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:54.312" endtime="20210719 10:50:54.312"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:54.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:54.312" endtime="20210719 10:50:54.318"/>
</kw>
<msg timestamp="20210719 10:50:54.319" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:54.268" endtime="20210719 10:50:54.319"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:54.357" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:50:54.320" endtime="20210719 10:50:54.357"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:54.357" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:50:54.357" endtime="20210719 10:50:54.357"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:54.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:54.357" endtime="20210719 10:50:54.357"/>
</kw>
<msg timestamp="20210719 10:50:54.357" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:50:54.319" endtime="20210719 10:50:54.357"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:54.389" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:50:54.357" endtime="20210719 10:50:54.389"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:54.403" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:50:54.389" endtime="20210719 10:50:54.403"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:54.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:54.403" endtime="20210719 10:50:54.404"/>
</kw>
<msg timestamp="20210719 10:50:54.404" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:50:54.357" endtime="20210719 10:50:54.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:54.404" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:54.404" endtime="20210719 10:50:54.404"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:54.404" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:54.404" endtime="20210719 10:50:54.404"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:54.412" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:54.404" endtime="20210719 10:50:54.412"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:57.621" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:57.622" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:49 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:57.623" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:54.412" endtime="20210719 10:50:57.623"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:57.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:57.624" endtime="20210719 10:50:57.624"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:57.624" endtime="20210719 10:50:57.624"/>
</kw>
<status status="PASS" starttime="20210719 10:50:54.404" endtime="20210719 10:50:57.624"/>
</kw>
<status status="PASS" starttime="20210719 10:50:54.404" endtime="20210719 10:50:57.624"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:57.644" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:57.643" endtime="20210719 10:50:57.644"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:57.648" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:57.644" endtime="20210719 10:50:57.648"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:57.648" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:57.648" endtime="20210719 10:50:57.653"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:50:58.944" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:50:58.945" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:50 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:50:58.945" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:57.654" endtime="20210719 10:50:58.945"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:50:58.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:50:58.947" endtime="20210719 10:50:58.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:50:58.949" endtime="20210719 10:50:58.956"/>
</kw>
<status status="PASS" starttime="20210719 10:50:57.640" endtime="20210719 10:50:58.956"/>
</kw>
<status status="PASS" starttime="20210719 10:50:57.624" endtime="20210719 10:50:58.958"/>
</kw>
<status status="PASS" starttime="20210719 10:50:54.205" endtime="20210719 10:50:58.958"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:59.040" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:50:58.960" endtime="20210719 10:50:59.040"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:59.040" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:59.040" endtime="20210719 10:50:59.040"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:59.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:59.050" endtime="20210719 10:50:59.050"/>
</kw>
<msg timestamp="20210719 10:50:59.051" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:50:58.960" endtime="20210719 10:50:59.051"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:59.087" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:50:59.053" endtime="20210719 10:50:59.087"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:59.087" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:59.087" endtime="20210719 10:50:59.087"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:59.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:59.087" endtime="20210719 10:50:59.087"/>
</kw>
<msg timestamp="20210719 10:50:59.087" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:50:59.051" endtime="20210719 10:50:59.087"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:59.140" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:50:59.102" endtime="20210719 10:50:59.140"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:59.153" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:50:59.140" endtime="20210719 10:50:59.153"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:59.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:59.154" endtime="20210719 10:50:59.155"/>
</kw>
<msg timestamp="20210719 10:50:59.155" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:50:59.087" endtime="20210719 10:50:59.155"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:50:59.189" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:50:59.157" endtime="20210719 10:50:59.189"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:50:59.203" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:50:59.189" endtime="20210719 10:50:59.203"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:50:59.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:50:59.204" endtime="20210719 10:50:59.205"/>
</kw>
<msg timestamp="20210719 10:50:59.205" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:50:59.156" endtime="20210719 10:50:59.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:59.205" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:50:59.205"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:50:59.205" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:50:59.205"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:50:59.205" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:50:59.205"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:51:00.183" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:51:00.183" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:51 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:51:00.183" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:51:00.183"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:51:00.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:51:00.183" endtime="20210719 10:51:00.187"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:51:00.188" endtime="20210719 10:51:00.188"/>
</kw>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:51:00.189"/>
</kw>
<status status="PASS" starttime="20210719 10:50:59.205" endtime="20210719 10:51:00.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:00.193" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:51:00.192" endtime="20210719 10:51:00.193"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:00.196" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:51:00.193" endtime="20210719 10:51:00.196"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:51:00.197" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:51:00.197" endtime="20210719 10:51:00.198"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:51:01.204" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:51:01.204" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:52 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:51:01.204" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:51:00.198" endtime="20210719 10:51:01.204"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:51:01.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:51:01.204" endtime="20210719 10:51:01.204"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:51:01.204" endtime="20210719 10:51:01.204"/>
</kw>
<status status="PASS" starttime="20210719 10:51:00.191" endtime="20210719 10:51:01.204"/>
</kw>
<status status="PASS" starttime="20210719 10:51:00.190" endtime="20210719 10:51:01.204"/>
</kw>
<status status="PASS" starttime="20210719 10:50:58.959" endtime="20210719 10:51:01.204"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:01.316" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:51:01.220" endtime="20210719 10:51:01.316"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:01.319" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:51:01.317" endtime="20210719 10:51:01.319"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:01.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:01.319" endtime="20210719 10:51:01.319"/>
</kw>
<msg timestamp="20210719 10:51:01.319" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:51:01.220" endtime="20210719 10:51:01.319"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:01.400" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:51:01.326" endtime="20210719 10:51:01.400"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:01.400" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:51:01.400" endtime="20210719 10:51:01.400"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:01.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:01.400" endtime="20210719 10:51:01.400"/>
</kw>
<msg timestamp="20210719 10:51:01.400" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:51:01.319" endtime="20210719 10:51:01.400"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:01.512" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:51:01.416" endtime="20210719 10:51:01.512"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:01.512" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:51:01.512" endtime="20210719 10:51:01.512"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:01.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:01.512" endtime="20210719 10:51:01.512"/>
</kw>
<msg timestamp="20210719 10:51:01.512" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:51:01.400" endtime="20210719 10:51:01.512"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:01.562" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:51:01.512" endtime="20210719 10:51:01.562"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:01.565" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:51:01.562" endtime="20210719 10:51:01.565"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:01.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:01.565" endtime="20210719 10:51:01.565"/>
</kw>
<msg timestamp="20210719 10:51:01.565" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:51:01.512" endtime="20210719 10:51:01.565"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:01.565" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:51:01.565" endtime="20210719 10:51:01.565"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:01.565" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:51:01.565" endtime="20210719 10:51:01.565"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:51:01.573" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:51:01.573" endtime="20210719 10:51:01.573"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:51:03.131" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:51:03.131" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:54 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:51:03.132" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:51:01.573" endtime="20210719 10:51:03.132"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:51:03.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:51:03.132" endtime="20210719 10:51:03.134"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:51:03.134" endtime="20210719 10:51:03.135"/>
</kw>
<status status="PASS" starttime="20210719 10:51:01.565" endtime="20210719 10:51:03.136"/>
</kw>
<status status="PASS" starttime="20210719 10:51:01.565" endtime="20210719 10:51:03.136"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:03.136" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:51:03.136" endtime="20210719 10:51:03.136"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:51:03.141" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:51:03.136" endtime="20210719 10:51:03.141"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:51:03.142" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:51:03.142" endtime="20210719 10:51:03.143"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:51:04.418" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:51:04.418" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:18:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:51:04.419" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:51:03.143" endtime="20210719 10:51:04.419"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:51:04.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:51:04.419" endtime="20210719 10:51:04.424"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:51:04.424" endtime="20210719 10:51:04.428"/>
</kw>
<status status="PASS" starttime="20210719 10:51:03.136" endtime="20210719 10:51:04.429"/>
</kw>
<status status="PASS" starttime="20210719 10:51:03.136" endtime="20210719 10:51:04.430"/>
</kw>
<status status="PASS" starttime="20210719 10:51:01.204" endtime="20210719 10:51:04.430"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.531" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:51:04.435" endtime="20210719 10:51:04.532"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.535" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:04.532" endtime="20210719 10:51:04.535"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.536" endtime="20210719 10:51:04.538"/>
</kw>
<msg timestamp="20210719 10:51:04.539" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:04.430" endtime="20210719 10:51:04.539"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.607" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:51:04.543" endtime="20210719 10:51:04.607"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.611" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:04.611" endtime="20210719 10:51:04.611"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.611" endtime="20210719 10:51:04.611"/>
</kw>
<msg timestamp="20210719 10:51:04.611" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:04.540" endtime="20210719 10:51:04.611"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.668" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:51:04.615" endtime="20210719 10:51:04.668"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.670" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:51:04.669" endtime="20210719 10:51:04.670"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.670" endtime="20210719 10:51:04.670"/>
</kw>
<msg timestamp="20210719 10:51:04.670" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:51:04.611" endtime="20210719 10:51:04.670"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.723" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:51:04.670" endtime="20210719 10:51:04.723"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.723" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:51:04.723" endtime="20210719 10:51:04.723"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.723" endtime="20210719 10:51:04.723"/>
</kw>
<msg timestamp="20210719 10:51:04.727" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:51:04.670" endtime="20210719 10:51:04.727"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:04.727" endtime="20210719 10:51:04.727"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:04.727" endtime="20210719 10:51:04.731"/>
</kw>
<status status="PASS" starttime="20210719 10:51:04.430" endtime="20210719 10:51:04.731"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.790" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:51:04.731" endtime="20210719 10:51:04.790"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.794" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:04.790" endtime="20210719 10:51:04.794"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.794" endtime="20210719 10:51:04.794"/>
</kw>
<msg timestamp="20210719 10:51:04.794" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:04.731" endtime="20210719 10:51:04.794"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.844" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:51:04.798" endtime="20210719 10:51:04.844"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.848" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:04.844" endtime="20210719 10:51:04.848"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.848" endtime="20210719 10:51:04.848"/>
</kw>
<msg timestamp="20210719 10:51:04.848" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:04.794" endtime="20210719 10:51:04.850"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.897" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:51:04.851" endtime="20210719 10:51:04.897"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.897" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:51:04.897" endtime="20210719 10:51:04.897"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.897" endtime="20210719 10:51:04.902"/>
</kw>
<msg timestamp="20210719 10:51:04.902" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:51:04.850" endtime="20210719 10:51:04.902"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:04.951" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:51:04.902" endtime="20210719 10:51:04.951"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:04.951" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:51:04.951" endtime="20210719 10:51:04.951"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:04.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:04.951" endtime="20210719 10:51:04.951"/>
</kw>
<msg timestamp="20210719 10:51:04.956" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:51:04.902" endtime="20210719 10:51:04.956"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:04.956" endtime="20210719 10:51:04.957"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:04.958" endtime="20210719 10:51:04.959"/>
</kw>
<status status="PASS" starttime="20210719 10:51:04.731" endtime="20210719 10:51:04.959"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:05.003" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:51:04.959" endtime="20210719 10:51:05.003"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:05.008" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:05.007" endtime="20210719 10:51:05.008"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:05.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:05.008" endtime="20210719 10:51:05.009"/>
</kw>
<msg timestamp="20210719 10:51:05.010" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:51:04.959" endtime="20210719 10:51:05.010"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:05.058" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:51:05.011" endtime="20210719 10:51:05.058"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:05.059" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:05.058" endtime="20210719 10:51:05.059"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:05.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:05.060" endtime="20210719 10:51:05.060"/>
</kw>
<msg timestamp="20210719 10:51:05.060" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:51:05.010" endtime="20210719 10:51:05.060"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:05.110" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:51:05.063" endtime="20210719 10:51:05.110"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:05.110" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:51:05.110" endtime="20210719 10:51:05.112"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:05.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:05.112" endtime="20210719 10:51:05.113"/>
</kw>
<msg timestamp="20210719 10:51:05.114" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:51:05.060" endtime="20210719 10:51:05.114"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:51:05.168" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:51:05.115" endtime="20210719 10:51:05.168"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:51:05.172" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:51:05.168" endtime="20210719 10:51:05.172"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:51:05.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:51:05.172" endtime="20210719 10:51:05.172"/>
</kw>
<msg timestamp="20210719 10:51:05.172" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:51:05.114" endtime="20210719 10:51:05.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:05.172" endtime="20210719 10:51:05.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:51:05.176" endtime="20210719 10:51:05.177"/>
</kw>
<status status="PASS" starttime="20210719 10:51:04.959" endtime="20210719 10:51:05.177"/>
</iter>
<status status="PASS" starttime="20210719 10:50:40.908" endtime="20210719 10:51:05.178"/>
</for>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:51:05.178"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:51:05.181" endtime="20210719 10:51:05.182"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:52:05.184" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:51:05.182" endtime="20210719 10:52:05.184"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:05.184" endtime="20210719 10:52:05.187"/>
</kw>
<status status="PASS" starttime="20210719 10:51:05.180" endtime="20210719 10:52:05.187"/>
</kw>
<status status="PASS" starttime="20210719 10:51:05.179" endtime="20210719 10:52:05.187"/>
</kw>
<status status="PASS" starttime="20210719 10:50:37.469" endtime="20210719 10:52:05.187"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:05.202" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:52:05.198" endtime="20210719 10:52:05.202"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:52:05.206" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:52:05.208" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:52:05.202" endtime="20210719 10:52:05.208"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:05.210" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:52:05.209" endtime="20210719 10:52:05.211"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:05.213" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:05.211" endtime="20210719 10:52:05.213"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:06.682" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:52:06.683" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:19:58 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:52:06.683" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:05.213" endtime="20210719 10:52:06.683"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:06.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:06.684" endtime="20210719 10:52:06.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:52:06.685" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:52:06.685" endtime="20210719 10:52:06.685"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:06.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:06.685" endtime="20210719 10:52:06.685"/>
</kw>
<msg timestamp="20210719 10:52:06.685" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:52:05.198" endtime="20210719 10:52:06.685"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:06.802" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:52:06.685" endtime="20210719 10:52:06.803"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:52:06.805" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:52:06.805" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:52:06.804" endtime="20210719 10:52:06.805"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:52:06.808" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:52:06.805" endtime="20210719 10:52:06.808"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:06.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:06.809" endtime="20210719 10:52:06.809"/>
</kw>
<msg timestamp="20210719 10:52:06.809" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:52:06.685" endtime="20210719 10:52:06.809"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:06.809" endtime="20210719 10:52:06.814"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:06.814" endtime="20210719 10:52:06.818"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:06.895" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:06.820" endtime="20210719 10:52:06.895"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:06.895" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:06.895" endtime="20210719 10:52:06.895"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:06.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:06.895" endtime="20210719 10:52:06.895"/>
</kw>
<msg timestamp="20210719 10:52:06.895" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:06.819" endtime="20210719 10:52:06.895"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:06.970" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:06.895" endtime="20210719 10:52:06.970"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:06.971" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:06.970" endtime="20210719 10:52:06.971"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:06.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:06.972" endtime="20210719 10:52:06.972"/>
</kw>
<msg timestamp="20210719 10:52:06.974" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:06.895" endtime="20210719 10:52:06.974"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:07.027" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:52:06.976" endtime="20210719 10:52:07.027"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:07.029" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:52:07.028" endtime="20210719 10:52:07.029"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:07.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:07.030" endtime="20210719 10:52:07.030"/>
</kw>
<msg timestamp="20210719 10:52:07.030" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:52:06.975" endtime="20210719 10:52:07.030"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:07.087" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:52:07.036" endtime="20210719 10:52:07.087"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:07.087" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:52:07.087" endtime="20210719 10:52:07.091"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:07.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.091"/>
</kw>
<msg timestamp="20210719 10:52:07.091" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:52:07.030" endtime="20210719 10:52:07.091"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:52:07.095" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.095"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:52:07.097" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:52:07.095" endtime="20210719 10:52:07.097"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:52:07.098" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:52:07.097" endtime="20210719 10:52:07.098"/>
</kw>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.098"/>
</branch>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.098"/>
</if>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.098"/>
</branch>
<status status="PASS" starttime="20210719 10:52:07.091" endtime="20210719 10:52:07.098"/>
</if>
<status status="PASS" starttime="20210719 10:52:06.814" endtime="20210719 10:52:07.098"/>
</iter>
<status status="PASS" starttime="20210719 10:52:06.814" endtime="20210719 10:52:07.098"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:07.102" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:07.098" endtime="20210719 10:52:07.102"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:07.102" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:07.102" endtime="20210719 10:52:07.102"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:07.102" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:07.102" endtime="20210719 10:52:07.106"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:08.885" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:08.885" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:00 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:08.885" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:07.106" endtime="20210719 10:52:08.885"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:08.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:08.885" endtime="20210719 10:52:08.885"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:08.885" endtime="20210719 10:52:08.885"/>
</kw>
<status status="PASS" starttime="20210719 10:52:07.098" endtime="20210719 10:52:08.885"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:08.885" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:08.885" endtime="20210719 10:52:08.885"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:08.901" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:08.885" endtime="20210719 10:52:08.901"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:08.901" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:08.901" endtime="20210719 10:52:08.901"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:10.172" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:10.172" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:01 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:10.172" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:08.901" endtime="20210719 10:52:10.172"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:10.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:10.172" endtime="20210719 10:52:10.179"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:10.179" endtime="20210719 10:52:10.179"/>
</kw>
<status status="PASS" starttime="20210719 10:52:08.885" endtime="20210719 10:52:10.184"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:10.185" endtime="20210719 10:52:10.186"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.250" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:10.190" endtime="20210719 10:52:10.250"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.250" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:10.250" endtime="20210719 10:52:10.250"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.250" endtime="20210719 10:52:10.250"/>
</kw>
<msg timestamp="20210719 10:52:10.250" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:10.186" endtime="20210719 10:52:10.250"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.304" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:10.265" endtime="20210719 10:52:10.304"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.320" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:10.304" endtime="20210719 10:52:10.320"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.320" endtime="20210719 10:52:10.321"/>
</kw>
<msg timestamp="20210719 10:52:10.321" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:10.250" endtime="20210719 10:52:10.321"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.371" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:52:10.321" endtime="20210719 10:52:10.371"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.371" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:52:10.371" endtime="20210719 10:52:10.371"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.371" endtime="20210719 10:52:10.371"/>
</kw>
<msg timestamp="20210719 10:52:10.371" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:52:10.321" endtime="20210719 10:52:10.371"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.419" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:52:10.371" endtime="20210719 10:52:10.419"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.419" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:52:10.419" endtime="20210719 10:52:10.419"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.419" endtime="20210719 10:52:10.419"/>
</kw>
<msg timestamp="20210719 10:52:10.419" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:52:10.371" endtime="20210719 10:52:10.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:10.419" endtime="20210719 10:52:10.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:10.419" endtime="20210719 10:52:10.435"/>
</kw>
<status status="PASS" starttime="20210719 10:52:10.186" endtime="20210719 10:52:10.435"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.484" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:10.435" endtime="20210719 10:52:10.484"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.488" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:10.484" endtime="20210719 10:52:10.488"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.488" endtime="20210719 10:52:10.488"/>
</kw>
<msg timestamp="20210719 10:52:10.488" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:10.435" endtime="20210719 10:52:10.488"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.538" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:10.492" endtime="20210719 10:52:10.538"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.538" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:10.538" endtime="20210719 10:52:10.538"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.538" endtime="20210719 10:52:10.538"/>
</kw>
<msg timestamp="20210719 10:52:10.538" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:10.488" endtime="20210719 10:52:10.538"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.590" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:52:10.538" endtime="20210719 10:52:10.590"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.590" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:52:10.590" endtime="20210719 10:52:10.590"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.590" endtime="20210719 10:52:10.590"/>
</kw>
<msg timestamp="20210719 10:52:10.590" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:52:10.538" endtime="20210719 10:52:10.590"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:10.639" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:52:10.597" endtime="20210719 10:52:10.639"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:10.649" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:52:10.639" endtime="20210719 10:52:10.649"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:10.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:10.649" endtime="20210719 10:52:10.649"/>
</kw>
<msg timestamp="20210719 10:52:10.651" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:52:10.590" endtime="20210719 10:52:10.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:10.651" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:10.651"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:10.651" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:10.651"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:10.651" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:10.651"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:12.180" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:12.180" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:03 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:12.180" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:12.180"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:12.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:12.180" endtime="20210719 10:52:12.188"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:12.188" endtime="20210719 10:52:12.190"/>
</kw>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:12.192"/>
</kw>
<status status="PASS" starttime="20210719 10:52:10.651" endtime="20210719 10:52:12.193"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:12.204" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:12.200" endtime="20210719 10:52:12.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:12.210" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:12.205" endtime="20210719 10:52:12.210"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:12.213" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:12.212" endtime="20210719 10:52:12.213"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:13.750" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:13.750" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:05 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:13.750" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:12.213" endtime="20210719 10:52:13.750"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:13.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:13.752" endtime="20210719 10:52:13.753"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:13.753" endtime="20210719 10:52:13.753"/>
</kw>
<status status="PASS" starttime="20210719 10:52:12.197" endtime="20210719 10:52:13.753"/>
</kw>
<status status="PASS" starttime="20210719 10:52:12.193" endtime="20210719 10:52:13.753"/>
</kw>
<status status="PASS" starttime="20210719 10:52:10.435" endtime="20210719 10:52:13.753"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:13.822" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:13.753" endtime="20210719 10:52:13.823"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:13.824" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:13.823" endtime="20210719 10:52:13.824"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:13.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:13.824" endtime="20210719 10:52:13.824"/>
</kw>
<msg timestamp="20210719 10:52:13.824" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:13.753" endtime="20210719 10:52:13.824"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:13.877" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:13.828" endtime="20210719 10:52:13.877"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:13.878" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:13.877" endtime="20210719 10:52:13.878"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:13.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:13.879" endtime="20210719 10:52:13.880"/>
</kw>
<msg timestamp="20210719 10:52:13.880" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:13.824" endtime="20210719 10:52:13.880"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:13.927" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:52:13.881" endtime="20210719 10:52:13.927"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:13.930" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:52:13.927" endtime="20210719 10:52:13.930"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:13.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:13.930" endtime="20210719 10:52:13.930"/>
</kw>
<msg timestamp="20210719 10:52:13.930" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:52:13.881" endtime="20210719 10:52:13.930"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:13.981" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:52:13.930" endtime="20210719 10:52:13.981"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:13.981" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:52:13.981" endtime="20210719 10:52:13.981"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:13.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:13.981" endtime="20210719 10:52:13.981"/>
</kw>
<msg timestamp="20210719 10:52:13.981" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:52:13.930" endtime="20210719 10:52:13.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:13.989" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:13.981" endtime="20210719 10:52:13.989"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:13.991" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:13.989" endtime="20210719 10:52:13.991"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:13.991" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:13.991" endtime="20210719 10:52:13.991"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:15.450" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:15.451" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:07 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:15.451" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:13.991" endtime="20210719 10:52:15.451"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:15.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:15.452" endtime="20210719 10:52:15.457"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:15.457" endtime="20210719 10:52:15.460"/>
</kw>
<status status="PASS" starttime="20210719 10:52:13.981" endtime="20210719 10:52:15.460"/>
</kw>
<status status="PASS" starttime="20210719 10:52:13.981" endtime="20210719 10:52:15.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:15.467" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:15.466" endtime="20210719 10:52:15.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:15.471" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:15.468" endtime="20210719 10:52:15.471"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:15.473" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:15.472" endtime="20210719 10:52:15.473"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:17.049" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:17.049" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:08 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:17.049" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:15.473" endtime="20210719 10:52:17.049"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:17.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:17.049" endtime="20210719 10:52:17.056"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:17.057" endtime="20210719 10:52:17.058"/>
</kw>
<status status="PASS" starttime="20210719 10:52:15.464" endtime="20210719 10:52:17.058"/>
</kw>
<status status="PASS" starttime="20210719 10:52:15.462" endtime="20210719 10:52:17.058"/>
</kw>
<status status="PASS" starttime="20210719 10:52:13.753" endtime="20210719 10:52:17.058"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:17.120" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:17.058" endtime="20210719 10:52:17.120"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:17.136" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:17.120" endtime="20210719 10:52:17.136"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:17.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:17.136" endtime="20210719 10:52:17.136"/>
</kw>
<msg timestamp="20210719 10:52:17.136" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:17.058" endtime="20210719 10:52:17.136"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:17.222" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:17.136" endtime="20210719 10:52:17.222"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:17.222" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:17.222" endtime="20210719 10:52:17.222"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:17.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:17.222" endtime="20210719 10:52:17.222"/>
</kw>
<msg timestamp="20210719 10:52:17.222" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:17.136" endtime="20210719 10:52:17.222"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:17.273" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:52:17.222" endtime="20210719 10:52:17.273"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:17.273" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:52:17.273" endtime="20210719 10:52:17.273"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:17.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:17.273" endtime="20210719 10:52:17.273"/>
</kw>
<msg timestamp="20210719 10:52:17.273" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:52:17.222" endtime="20210719 10:52:17.273"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:17.323" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:52:17.273" endtime="20210719 10:52:17.323"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:17.323" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:17.323"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:17.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:17.323"/>
</kw>
<msg timestamp="20210719 10:52:17.323" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:52:17.273" endtime="20210719 10:52:17.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:17.323" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:17.323"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:17.333" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:17.333"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:17.333" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:17.333" endtime="20210719 10:52:17.333"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:18.328" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:18.328" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:10 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:18.329" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:17.335" endtime="20210719 10:52:18.329"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:18.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:18.330" endtime="20210719 10:52:18.335"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:18.335" endtime="20210719 10:52:18.335"/>
</kw>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:18.335"/>
</kw>
<status status="PASS" starttime="20210719 10:52:17.323" endtime="20210719 10:52:18.341"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:18.348" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:18.346" endtime="20210719 10:52:18.348"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:18.348" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:18.348" endtime="20210719 10:52:18.348"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:18.348" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:18.348" endtime="20210719 10:52:18.348"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:19.747" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:19.748" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:11 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:19.749" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:18.348" endtime="20210719 10:52:19.749"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:19.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:19.751" endtime="20210719 10:52:19.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:19.763" endtime="20210719 10:52:19.765"/>
</kw>
<status status="PASS" starttime="20210719 10:52:18.344" endtime="20210719 10:52:19.765"/>
</kw>
<status status="PASS" starttime="20210719 10:52:18.342" endtime="20210719 10:52:19.767"/>
</kw>
<status status="PASS" starttime="20210719 10:52:17.058" endtime="20210719 10:52:19.768"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:19.855" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:19.775" endtime="20210719 10:52:19.855"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:19.859" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:19.855" endtime="20210719 10:52:19.859"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:19.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:19.859" endtime="20210719 10:52:19.863"/>
</kw>
<msg timestamp="20210719 10:52:19.863" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:19.770" endtime="20210719 10:52:19.864"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:19.933" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:19.865" endtime="20210719 10:52:19.933"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:19.934" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:19.934" endtime="20210719 10:52:19.934"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:19.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:19.934" endtime="20210719 10:52:19.934"/>
</kw>
<msg timestamp="20210719 10:52:19.934" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:19.864" endtime="20210719 10:52:19.938"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:20.016" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:52:19.940" endtime="20210719 10:52:20.016"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:20.017" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:52:20.017" endtime="20210719 10:52:20.017"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:20.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:20.017" endtime="20210719 10:52:20.017"/>
</kw>
<msg timestamp="20210719 10:52:20.017" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:52:19.938" endtime="20210719 10:52:20.017"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:20.056" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:52:20.021" endtime="20210719 10:52:20.056"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:20.060" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:52:20.060" endtime="20210719 10:52:20.060"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:20.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:20.060" endtime="20210719 10:52:20.060"/>
</kw>
<msg timestamp="20210719 10:52:20.060" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:52:20.021" endtime="20210719 10:52:20.060"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:20.060" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:20.060" endtime="20210719 10:52:20.064"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:20.065" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:20.064" endtime="20210719 10:52:20.065"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:20.066" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:20.065" endtime="20210719 10:52:20.068"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:21.018" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:21.019" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:12 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:21.019" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:20.068" endtime="20210719 10:52:21.019"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:21.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:21.021" endtime="20210719 10:52:21.028"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:21.029" endtime="20210719 10:52:21.030"/>
</kw>
<status status="PASS" starttime="20210719 10:52:20.060" endtime="20210719 10:52:21.031"/>
</kw>
<status status="PASS" starttime="20210719 10:52:20.060" endtime="20210719 10:52:21.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:21.038" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:21.035" endtime="20210719 10:52:21.038"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:21.043" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:21.040" endtime="20210719 10:52:21.043"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:21.046" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:21.044" endtime="20210719 10:52:21.046"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:22.277" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:22.278" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:13 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:22.279" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:21.046" endtime="20210719 10:52:22.279"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:22.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:22.281" endtime="20210719 10:52:22.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:22.288" endtime="20210719 10:52:22.290"/>
</kw>
<status status="PASS" starttime="20210719 10:52:21.035" endtime="20210719 10:52:22.290"/>
</kw>
<status status="PASS" starttime="20210719 10:52:21.032" endtime="20210719 10:52:22.290"/>
</kw>
<status status="PASS" starttime="20210719 10:52:19.770" endtime="20210719 10:52:22.291"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:22.359" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:22.293" endtime="20210719 10:52:22.359"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:22.360" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:22.360" endtime="20210719 10:52:22.360"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:22.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:22.361" endtime="20210719 10:52:22.361"/>
</kw>
<msg timestamp="20210719 10:52:22.361" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:22.292" endtime="20210719 10:52:22.361"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:22.423" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:22.363" endtime="20210719 10:52:22.423"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:22.423" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:22.423" endtime="20210719 10:52:22.423"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:22.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:22.427" endtime="20210719 10:52:22.427"/>
</kw>
<msg timestamp="20210719 10:52:22.427" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:22.361" endtime="20210719 10:52:22.427"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:22.490" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:52:22.427" endtime="20210719 10:52:22.490"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:22.491" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:52:22.490" endtime="20210719 10:52:22.491"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:22.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:22.491" endtime="20210719 10:52:22.492"/>
</kw>
<msg timestamp="20210719 10:52:22.493" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:52:22.427" endtime="20210719 10:52:22.493"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:22.544" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:52:22.495" endtime="20210719 10:52:22.544"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:22.544" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:52:22.544" endtime="20210719 10:52:22.544"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:22.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:22.547" endtime="20210719 10:52:22.548"/>
</kw>
<msg timestamp="20210719 10:52:22.549" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:52:22.493" endtime="20210719 10:52:22.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:22.554" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:22.552" endtime="20210719 10:52:22.554"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:22.557" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:22.556" endtime="20210719 10:52:22.557"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:22.558" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:22.557" endtime="20210719 10:52:22.558"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:23.508" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:23.508" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:15 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:23.509" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:22.558" endtime="20210719 10:52:23.509"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:23.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:23.510" endtime="20210719 10:52:23.515"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:23.516" endtime="20210719 10:52:23.517"/>
</kw>
<status status="PASS" starttime="20210719 10:52:22.550" endtime="20210719 10:52:23.518"/>
</kw>
<status status="PASS" starttime="20210719 10:52:22.550" endtime="20210719 10:52:23.519"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:23.526" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:23.524" endtime="20210719 10:52:23.526"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:23.529" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:23.527" endtime="20210719 10:52:23.529"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:23.532" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:23.530" endtime="20210719 10:52:23.532"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:24.873" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:24.873" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:16 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:24.873" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:23.533" endtime="20210719 10:52:24.873"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:24.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:24.874" endtime="20210719 10:52:24.876"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:24.876" endtime="20210719 10:52:24.877"/>
</kw>
<status status="PASS" starttime="20210719 10:52:23.522" endtime="20210719 10:52:24.878"/>
</kw>
<status status="PASS" starttime="20210719 10:52:23.520" endtime="20210719 10:52:24.878"/>
</kw>
<status status="PASS" starttime="20210719 10:52:22.291" endtime="20210719 10:52:24.878"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:24.937" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:24.880" endtime="20210719 10:52:24.937"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:24.939" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:24.938" endtime="20210719 10:52:24.939"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:24.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:24.939" endtime="20210719 10:52:24.940"/>
</kw>
<msg timestamp="20210719 10:52:24.941" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:24.879" endtime="20210719 10:52:24.941"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:24.995" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:24.943" endtime="20210719 10:52:24.995"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:24.996" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:24.995" endtime="20210719 10:52:24.996"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:24.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:24.997" endtime="20210719 10:52:24.997"/>
</kw>
<msg timestamp="20210719 10:52:24.998" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:24.941" endtime="20210719 10:52:24.998"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:25.066" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:52:25.000" endtime="20210719 10:52:25.066"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:25.068" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:52:25.067" endtime="20210719 10:52:25.068"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:25.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:25.069" endtime="20210719 10:52:25.070"/>
</kw>
<msg timestamp="20210719 10:52:25.072" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:52:24.998" endtime="20210719 10:52:25.072"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:25.141" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:52:25.074" endtime="20210719 10:52:25.141"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:25.143" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:52:25.142" endtime="20210719 10:52:25.143"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:25.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:25.144" endtime="20210719 10:52:25.148"/>
</kw>
<msg timestamp="20210719 10:52:25.149" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:52:25.073" endtime="20210719 10:52:25.150"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:25.157" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:25.155" endtime="20210719 10:52:25.157"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:25.160" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:25.158" endtime="20210719 10:52:25.160"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:25.161" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:25.160" endtime="20210719 10:52:25.162"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:26.242" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:26.242" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:26.242" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:25.163" endtime="20210719 10:52:26.243"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:26.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:26.243" endtime="20210719 10:52:26.247"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:26.247" endtime="20210719 10:52:26.248"/>
</kw>
<status status="PASS" starttime="20210719 10:52:25.154" endtime="20210719 10:52:26.248"/>
</kw>
<status status="PASS" starttime="20210719 10:52:25.151" endtime="20210719 10:52:26.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:26.252" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:26.251" endtime="20210719 10:52:26.253"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:26.254" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:26.253" endtime="20210719 10:52:26.255"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:26.256" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:26.255" endtime="20210719 10:52:26.257"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:27.233" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:27.234" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:19 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:27.235" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:26.258" endtime="20210719 10:52:27.235"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:27.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:27.236" endtime="20210719 10:52:27.241"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:27.241" endtime="20210719 10:52:27.244"/>
</kw>
<status status="PASS" starttime="20210719 10:52:26.250" endtime="20210719 10:52:27.245"/>
</kw>
<status status="PASS" starttime="20210719 10:52:26.249" endtime="20210719 10:52:27.247"/>
</kw>
<status status="PASS" starttime="20210719 10:52:24.878" endtime="20210719 10:52:27.248"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:27.396" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:52:27.254" endtime="20210719 10:52:27.396"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:27.399" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:27.397" endtime="20210719 10:52:27.399"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:27.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:27.400" endtime="20210719 10:52:27.402"/>
</kw>
<msg timestamp="20210719 10:52:27.405" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:52:27.250" endtime="20210719 10:52:27.405"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:27.466" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:52:27.407" endtime="20210719 10:52:27.466"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:27.467" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:27.467" endtime="20210719 10:52:27.467"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:27.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:27.468" endtime="20210719 10:52:27.468"/>
</kw>
<msg timestamp="20210719 10:52:27.469" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:52:27.405" endtime="20210719 10:52:27.469"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:27.514" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:52:27.472" endtime="20210719 10:52:27.514"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:27.515" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:52:27.515" endtime="20210719 10:52:27.516"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:27.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:27.516" endtime="20210719 10:52:27.517"/>
</kw>
<msg timestamp="20210719 10:52:27.517" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:52:27.470" endtime="20210719 10:52:27.517"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:27.567" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:52:27.519" endtime="20210719 10:52:27.567"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:27.568" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:52:27.567" endtime="20210719 10:52:27.568"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:27.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:27.568" endtime="20210719 10:52:27.569"/>
</kw>
<msg timestamp="20210719 10:52:27.570" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:52:27.517" endtime="20210719 10:52:27.570"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:27.574" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:27.573" endtime="20210719 10:52:27.575"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:27.576" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:27.575" endtime="20210719 10:52:27.576"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:27.577" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:27.576" endtime="20210719 10:52:27.578"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:28.563" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:28.563" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:20 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:28.564" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:27.578" endtime="20210719 10:52:28.564"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:28.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:28.565" endtime="20210719 10:52:28.571"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:28.572" endtime="20210719 10:52:28.574"/>
</kw>
<status status="PASS" starttime="20210719 10:52:27.571" endtime="20210719 10:52:28.575"/>
</kw>
<status status="PASS" starttime="20210719 10:52:27.570" endtime="20210719 10:52:28.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:28.584" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:52:28.581" endtime="20210719 10:52:28.584"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:52:28.587" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:52:28.585" endtime="20210719 10:52:28.587"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:52:28.589" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:52:28.588" endtime="20210719 10:52:28.590"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:52:31.521" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:52:31.525" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:20:23 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:52:31.525" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:52:28.591" endtime="20210719 10:52:31.525"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:52:31.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:52:31.526" endtime="20210719 10:52:31.530"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:31.531" endtime="20210719 10:52:31.533"/>
</kw>
<status status="PASS" starttime="20210719 10:52:28.579" endtime="20210719 10:52:31.534"/>
</kw>
<status status="PASS" starttime="20210719 10:52:28.577" endtime="20210719 10:52:31.534"/>
</kw>
<status status="PASS" starttime="20210719 10:52:27.249" endtime="20210719 10:52:31.534"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.597" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:52:31.536" endtime="20210719 10:52:31.597"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.598" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:31.598" endtime="20210719 10:52:31.598"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.598" endtime="20210719 10:52:31.600"/>
</kw>
<msg timestamp="20210719 10:52:31.601" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:31.535" endtime="20210719 10:52:31.601"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.652" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:52:31.603" endtime="20210719 10:52:31.655"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.657" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:31.656" endtime="20210719 10:52:31.657"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.657" endtime="20210719 10:52:31.659"/>
</kw>
<msg timestamp="20210719 10:52:31.660" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:31.601" endtime="20210719 10:52:31.660"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.712" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:52:31.662" endtime="20210719 10:52:31.712"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.717" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:52:31.716" endtime="20210719 10:52:31.717"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.717" endtime="20210719 10:52:31.717"/>
</kw>
<msg timestamp="20210719 10:52:31.717" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:52:31.660" endtime="20210719 10:52:31.717"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.773" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:52:31.720" endtime="20210719 10:52:31.774"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.775" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:52:31.774" endtime="20210719 10:52:31.775"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.776" endtime="20210719 10:52:31.776"/>
</kw>
<msg timestamp="20210719 10:52:31.778" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:52:31.717" endtime="20210719 10:52:31.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:31.778" endtime="20210719 10:52:31.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:31.778" endtime="20210719 10:52:31.780"/>
</kw>
<status status="PASS" starttime="20210719 10:52:31.535" endtime="20210719 10:52:31.780"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.833" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:52:31.783" endtime="20210719 10:52:31.833"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.833" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:31.833" endtime="20210719 10:52:31.833"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.837" endtime="20210719 10:52:31.837"/>
</kw>
<msg timestamp="20210719 10:52:31.839" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:31.780" endtime="20210719 10:52:31.839"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.896" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:52:31.840" endtime="20210719 10:52:31.896"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.897" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:31.897" endtime="20210719 10:52:31.897"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.899" endtime="20210719 10:52:31.899"/>
</kw>
<msg timestamp="20210719 10:52:31.900" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:31.839" endtime="20210719 10:52:31.900"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:31.953" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:52:31.901" endtime="20210719 10:52:31.953"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:31.955" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:52:31.954" endtime="20210719 10:52:31.955"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:31.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:31.955" endtime="20210719 10:52:31.956"/>
</kw>
<msg timestamp="20210719 10:52:31.956" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:52:31.900" endtime="20210719 10:52:31.956"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:32.004" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:52:31.956" endtime="20210719 10:52:32.004"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:32.004" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:52:32.004" endtime="20210719 10:52:32.004"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:32.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:32.008" endtime="20210719 10:52:32.009"/>
</kw>
<msg timestamp="20210719 10:52:32.010" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:52:31.956" endtime="20210719 10:52:32.010"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:32.011" endtime="20210719 10:52:32.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:32.012" endtime="20210719 10:52:32.012"/>
</kw>
<status status="PASS" starttime="20210719 10:52:31.780" endtime="20210719 10:52:32.012"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:32.065" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:52:32.015" endtime="20210719 10:52:32.065"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:32.067" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:32.066" endtime="20210719 10:52:32.067"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:32.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:32.067" endtime="20210719 10:52:32.068"/>
</kw>
<msg timestamp="20210719 10:52:32.069" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:52:32.012" endtime="20210719 10:52:32.069"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:32.117" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:52:32.070" endtime="20210719 10:52:32.118"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:32.120" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:32.118" endtime="20210719 10:52:32.120"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:32.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:32.120" endtime="20210719 10:52:32.121"/>
</kw>
<msg timestamp="20210719 10:52:32.121" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:52:32.069" endtime="20210719 10:52:32.121"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:32.177" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:52:32.123" endtime="20210719 10:52:32.177"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:32.178" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:52:32.177" endtime="20210719 10:52:32.178"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:32.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:32.178" endtime="20210719 10:52:32.180"/>
</kw>
<msg timestamp="20210719 10:52:32.181" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:52:32.122" endtime="20210719 10:52:32.181"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:52:32.227" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:52:32.182" endtime="20210719 10:52:32.227"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:52:32.227" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:52:32.227" endtime="20210719 10:52:32.227"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:52:32.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:52:32.227" endtime="20210719 10:52:32.232"/>
</kw>
<msg timestamp="20210719 10:52:32.232" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:52:32.181" endtime="20210719 10:52:32.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:32.232" endtime="20210719 10:52:32.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:52:32.234" endtime="20210719 10:52:32.234"/>
</kw>
<status status="PASS" starttime="20210719 10:52:32.012" endtime="20210719 10:52:32.236"/>
</iter>
<status status="PASS" starttime="20210719 10:52:10.186" endtime="20210719 10:52:32.236"/>
</for>
<status status="PASS" starttime="20210719 10:52:05.194" endtime="20210719 10:52:32.236"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:52:32.239" endtime="20210719 10:52:32.240"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:53:32.246" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:52:32.240" endtime="20210719 10:53:32.247"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:32.248" endtime="20210719 10:53:32.249"/>
</kw>
<status status="PASS" starttime="20210719 10:52:32.238" endtime="20210719 10:53:32.250"/>
</kw>
<status status="PASS" starttime="20210719 10:52:32.237" endtime="20210719 10:53:32.251"/>
</kw>
<status status="PASS" starttime="20210719 10:52:05.191" endtime="20210719 10:53:32.251"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:32.259" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:53:32.257" endtime="20210719 10:53:32.259"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:53:32.261" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:53:32.262" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:53:32.260" endtime="20210719 10:53:32.263"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:32.266" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:53:32.264" endtime="20210719 10:53:32.266"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:32.268" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:32.267" endtime="20210719 10:53:32.269"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:33.245" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:53:33.245" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:25 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:53:33.246" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:32.270" endtime="20210719 10:53:33.246"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:33.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:33.247" endtime="20210719 10:53:33.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:53:33.259" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:53:33.252" endtime="20210719 10:53:33.259"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.260" endtime="20210719 10:53:33.261"/>
</kw>
<msg timestamp="20210719 10:53:33.263" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:53:32.255" endtime="20210719 10:53:33.263"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:33.350" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:53:33.266" endtime="20210719 10:53:33.350"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:53:33.352" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:53:33.353" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:53:33.351" endtime="20210719 10:53:33.353"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:53:33.355" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:53:33.353" endtime="20210719 10:53:33.355"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.357" endtime="20210719 10:53:33.357"/>
</kw>
<msg timestamp="20210719 10:53:33.359" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:53:33.263" endtime="20210719 10:53:33.359"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:33.359" endtime="20210719 10:53:33.360"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:33.363" endtime="20210719 10:53:33.365"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:33.538" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:33.369" endtime="20210719 10:53:33.539"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:33.541" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:33.539" endtime="20210719 10:53:33.541"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.541" endtime="20210719 10:53:33.542"/>
</kw>
<msg timestamp="20210719 10:53:33.542" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:33.366" endtime="20210719 10:53:33.543"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:33.590" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:33.545" endtime="20210719 10:53:33.590"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:33.591" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:33.590" endtime="20210719 10:53:33.591"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.592" endtime="20210719 10:53:33.592"/>
</kw>
<msg timestamp="20210719 10:53:33.593" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:33.543" endtime="20210719 10:53:33.593"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:33.649" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:53:33.595" endtime="20210719 10:53:33.649"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:33.651" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:53:33.650" endtime="20210719 10:53:33.651"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.651" endtime="20210719 10:53:33.652"/>
</kw>
<msg timestamp="20210719 10:53:33.653" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:53:33.593" endtime="20210719 10:53:33.653"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:33.705" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:53:33.655" endtime="20210719 10:53:33.706"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:33.707" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:53:33.706" endtime="20210719 10:53:33.707"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:33.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:33.708" endtime="20210719 10:53:33.709"/>
</kw>
<msg timestamp="20210719 10:53:33.709" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:53:33.653" endtime="20210719 10:53:33.709"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:53:33.712" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:53:33.712" endtime="20210719 10:53:33.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:53:33.714" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:53:33.713" endtime="20210719 10:53:33.714"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:53:33.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:53:33.715" endtime="20210719 10:53:33.716"/>
</kw>
<status status="PASS" starttime="20210719 10:53:33.711" endtime="20210719 10:53:33.716"/>
</branch>
<status status="PASS" starttime="20210719 10:53:33.710" endtime="20210719 10:53:33.716"/>
</if>
<status status="PASS" starttime="20210719 10:53:33.710" endtime="20210719 10:53:33.716"/>
</branch>
<status status="PASS" starttime="20210719 10:53:33.710" endtime="20210719 10:53:33.716"/>
</if>
<status status="PASS" starttime="20210719 10:53:33.362" endtime="20210719 10:53:33.716"/>
</iter>
<status status="PASS" starttime="20210719 10:53:33.361" endtime="20210719 10:53:33.717"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:33.720" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:33.719" endtime="20210719 10:53:33.720"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:33.722" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:33.720" endtime="20210719 10:53:33.722"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:33.723" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:33.722" endtime="20210719 10:53:33.723"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:34.684" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:34.685" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:26 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:34.685" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:33.724" endtime="20210719 10:53:34.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:34.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:34.687" endtime="20210719 10:53:34.693"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:34.694" endtime="20210719 10:53:34.695"/>
</kw>
<status status="PASS" starttime="20210719 10:53:33.717" endtime="20210719 10:53:34.696"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:34.701" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:34.699" endtime="20210719 10:53:34.701"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:34.704" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:34.702" endtime="20210719 10:53:34.704"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:34.706" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:34.705" endtime="20210719 10:53:34.707"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:35.694" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:35.694" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:27 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:35.695" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:34.708" endtime="20210719 10:53:35.695"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:35.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:35.696" endtime="20210719 10:53:35.701"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:35.701" endtime="20210719 10:53:35.703"/>
</kw>
<status status="PASS" starttime="20210719 10:53:34.697" endtime="20210719 10:53:35.704"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:35.704" endtime="20210719 10:53:35.706"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:35.792" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:35.713" endtime="20210719 10:53:35.792"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:35.794" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:35.792" endtime="20210719 10:53:35.794"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:35.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:35.795" endtime="20210719 10:53:35.796"/>
</kw>
<msg timestamp="20210719 10:53:35.796" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:35.709" endtime="20210719 10:53:35.796"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:35.848" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:35.799" endtime="20210719 10:53:35.848"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:35.849" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:35.848" endtime="20210719 10:53:35.849"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:35.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:35.850" endtime="20210719 10:53:35.851"/>
</kw>
<msg timestamp="20210719 10:53:35.851" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:35.797" endtime="20210719 10:53:35.851"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:35.899" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:53:35.853" endtime="20210719 10:53:35.899"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:35.901" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:53:35.900" endtime="20210719 10:53:35.901"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:35.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:35.901" endtime="20210719 10:53:35.902"/>
</kw>
<msg timestamp="20210719 10:53:35.902" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:53:35.852" endtime="20210719 10:53:35.903"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:35.950" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:53:35.904" endtime="20210719 10:53:35.950"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:35.951" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:53:35.950" endtime="20210719 10:53:35.951"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:35.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:35.952" endtime="20210719 10:53:35.952"/>
</kw>
<msg timestamp="20210719 10:53:35.953" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:53:35.903" endtime="20210719 10:53:35.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:35.953" endtime="20210719 10:53:35.954"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:35.955" endtime="20210719 10:53:35.956"/>
</kw>
<status status="PASS" starttime="20210719 10:53:35.708" endtime="20210719 10:53:35.956"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:36.006" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:35.958" endtime="20210719 10:53:36.006"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:36.008" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:36.007" endtime="20210719 10:53:36.008"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:36.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:36.008" endtime="20210719 10:53:36.009"/>
</kw>
<msg timestamp="20210719 10:53:36.010" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:35.957" endtime="20210719 10:53:36.010"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:36.059" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:36.012" endtime="20210719 10:53:36.059"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:36.061" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:36.060" endtime="20210719 10:53:36.061"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:36.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:36.061" endtime="20210719 10:53:36.062"/>
</kw>
<msg timestamp="20210719 10:53:36.062" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:36.010" endtime="20210719 10:53:36.063"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:36.111" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:53:36.065" endtime="20210719 10:53:36.111"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:36.113" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:53:36.112" endtime="20210719 10:53:36.113"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:36.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:36.114" endtime="20210719 10:53:36.115"/>
</kw>
<msg timestamp="20210719 10:53:36.115" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:53:36.064" endtime="20210719 10:53:36.115"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:36.165" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:53:36.117" endtime="20210719 10:53:36.165"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:36.167" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:53:36.166" endtime="20210719 10:53:36.167"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:36.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:36.167" endtime="20210719 10:53:36.168"/>
</kw>
<msg timestamp="20210719 10:53:36.169" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:53:36.116" endtime="20210719 10:53:36.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:36.173" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:36.171" endtime="20210719 10:53:36.173"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:36.174" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:36.173" endtime="20210719 10:53:36.174"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:36.176" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:36.175" endtime="20210719 10:53:36.176"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:38.802" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:38.803" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:30 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:38.804" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:36.177" endtime="20210719 10:53:38.804"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:38.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:38.806" endtime="20210719 10:53:38.812"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:38.813" endtime="20210719 10:53:38.816"/>
</kw>
<status status="PASS" starttime="20210719 10:53:36.170" endtime="20210719 10:53:38.817"/>
</kw>
<status status="PASS" starttime="20210719 10:53:36.169" endtime="20210719 10:53:38.817"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:38.827" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:38.824" endtime="20210719 10:53:38.827"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:38.833" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:38.828" endtime="20210719 10:53:38.833"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:38.836" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:38.834" endtime="20210719 10:53:38.837"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:39.811" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:39.812" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:39.813" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:38.838" endtime="20210719 10:53:39.813"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:39.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:39.815" endtime="20210719 10:53:39.820"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:39.821" endtime="20210719 10:53:39.823"/>
</kw>
<status status="PASS" starttime="20210719 10:53:38.821" endtime="20210719 10:53:39.824"/>
</kw>
<status status="PASS" starttime="20210719 10:53:38.818" endtime="20210719 10:53:39.825"/>
</kw>
<status status="PASS" starttime="20210719 10:53:35.956" endtime="20210719 10:53:39.825"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:39.937" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:39.831" endtime="20210719 10:53:39.938"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:39.941" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:39.939" endtime="20210719 10:53:39.941"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:39.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:39.942" endtime="20210719 10:53:39.945"/>
</kw>
<msg timestamp="20210719 10:53:39.949" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:39.828" endtime="20210719 10:53:39.950"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:40.067" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:39.957" endtime="20210719 10:53:40.067"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:40.071" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:40.069" endtime="20210719 10:53:40.071"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:40.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:40.072" endtime="20210719 10:53:40.073"/>
</kw>
<msg timestamp="20210719 10:53:40.075" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:39.952" endtime="20210719 10:53:40.075"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:40.193" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:53:40.079" endtime="20210719 10:53:40.193"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:40.196" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:53:40.194" endtime="20210719 10:53:40.196"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:40.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:40.197" endtime="20210719 10:53:40.198"/>
</kw>
<msg timestamp="20210719 10:53:40.200" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:53:40.076" endtime="20210719 10:53:40.201"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:40.313" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:53:40.205" endtime="20210719 10:53:40.313"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:40.315" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:53:40.314" endtime="20210719 10:53:40.316"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:40.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:40.316" endtime="20210719 10:53:40.318"/>
</kw>
<msg timestamp="20210719 10:53:40.319" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:53:40.202" endtime="20210719 10:53:40.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:40.329" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:40.327" endtime="20210719 10:53:40.329"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:40.332" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:40.330" endtime="20210719 10:53:40.332"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:40.335" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:40.333" endtime="20210719 10:53:40.336"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:41.347" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:41.348" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:33 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:41.348" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:40.337" endtime="20210719 10:53:41.348"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:41.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:41.349" endtime="20210719 10:53:41.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:41.356" endtime="20210719 10:53:41.359"/>
</kw>
<status status="PASS" starttime="20210719 10:53:40.323" endtime="20210719 10:53:41.360"/>
</kw>
<status status="PASS" starttime="20210719 10:53:40.320" endtime="20210719 10:53:41.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:41.369" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:41.366" endtime="20210719 10:53:41.369"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:41.372" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:41.370" endtime="20210719 10:53:41.372"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:41.375" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:41.373" endtime="20210719 10:53:41.376"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:42.532" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:42.533" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:42.534" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:41.377" endtime="20210719 10:53:42.534"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:42.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:42.535" endtime="20210719 10:53:42.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:42.543" endtime="20210719 10:53:42.544"/>
</kw>
<status status="PASS" starttime="20210719 10:53:41.364" endtime="20210719 10:53:42.546"/>
</kw>
<status status="PASS" starttime="20210719 10:53:41.362" endtime="20210719 10:53:42.546"/>
</kw>
<status status="PASS" starttime="20210719 10:53:39.826" endtime="20210719 10:53:42.546"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:42.672" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:42.552" endtime="20210719 10:53:42.672"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:42.675" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:42.673" endtime="20210719 10:53:42.676"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:42.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:42.676" endtime="20210719 10:53:42.678"/>
</kw>
<msg timestamp="20210719 10:53:42.680" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:42.549" endtime="20210719 10:53:42.680"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:42.802" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:42.683" endtime="20210719 10:53:42.803"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:42.807" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:42.804" endtime="20210719 10:53:42.807"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:42.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:42.808" endtime="20210719 10:53:42.810"/>
</kw>
<msg timestamp="20210719 10:53:42.812" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:42.681" endtime="20210719 10:53:42.812"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:42.941" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:53:42.816" endtime="20210719 10:53:42.941"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:42.946" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:53:42.943" endtime="20210719 10:53:42.946"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:42.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:42.947" endtime="20210719 10:53:42.949"/>
</kw>
<msg timestamp="20210719 10:53:42.951" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:53:42.812" endtime="20210719 10:53:42.951"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:43.073" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:53:42.955" endtime="20210719 10:53:43.073"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:43.081" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:53:43.076" endtime="20210719 10:53:43.081"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:43.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:43.082" endtime="20210719 10:53:43.084"/>
</kw>
<msg timestamp="20210719 10:53:43.086" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:53:42.952" endtime="20210719 10:53:43.087"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:43.099" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:43.094" endtime="20210719 10:53:43.100"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:43.106" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:43.101" endtime="20210719 10:53:43.106"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:43.110" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:43.107" endtime="20210719 10:53:43.113"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:44.139" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:44.139" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:35 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:44.140" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:43.114" endtime="20210719 10:53:44.141"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:44.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:44.142" endtime="20210719 10:53:44.148"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:44.149" endtime="20210719 10:53:44.151"/>
</kw>
<status status="PASS" starttime="20210719 10:53:43.090" endtime="20210719 10:53:44.153"/>
</kw>
<status status="PASS" starttime="20210719 10:53:43.088" endtime="20210719 10:53:44.153"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:44.162" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:44.160" endtime="20210719 10:53:44.163"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:44.168" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:44.164" endtime="20210719 10:53:44.168"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:44.173" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:44.169" endtime="20210719 10:53:44.174"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:45.170" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:45.170" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:36 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:45.172" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:44.175" endtime="20210719 10:53:45.172"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:45.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:45.173" endtime="20210719 10:53:45.180"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:45.181" endtime="20210719 10:53:45.184"/>
</kw>
<status status="PASS" starttime="20210719 10:53:44.157" endtime="20210719 10:53:45.186"/>
</kw>
<status status="PASS" starttime="20210719 10:53:44.154" endtime="20210719 10:53:45.187"/>
</kw>
<status status="PASS" starttime="20210719 10:53:42.547" endtime="20210719 10:53:45.188"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:45.317" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:45.194" endtime="20210719 10:53:45.318"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:45.322" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:45.319" endtime="20210719 10:53:45.322"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:45.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:45.324" endtime="20210719 10:53:45.327"/>
</kw>
<msg timestamp="20210719 10:53:45.328" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:45.191" endtime="20210719 10:53:45.329"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:45.440" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:45.332" endtime="20210719 10:53:45.441"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:45.445" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:45.442" endtime="20210719 10:53:45.445"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:45.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:45.446" endtime="20210719 10:53:45.448"/>
</kw>
<msg timestamp="20210719 10:53:45.450" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:45.329" endtime="20210719 10:53:45.450"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:45.575" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:53:45.453" endtime="20210719 10:53:45.575"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:45.579" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:53:45.577" endtime="20210719 10:53:45.579"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:45.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:45.581" endtime="20210719 10:53:45.584"/>
</kw>
<msg timestamp="20210719 10:53:45.585" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:53:45.450" endtime="20210719 10:53:45.585"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:45.700" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:53:45.589" endtime="20210719 10:53:45.700"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:45.705" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:53:45.702" endtime="20210719 10:53:45.705"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:45.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:45.706" endtime="20210719 10:53:45.708"/>
</kw>
<msg timestamp="20210719 10:53:45.709" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:53:45.586" endtime="20210719 10:53:45.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:45.719" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:45.715" endtime="20210719 10:53:45.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:45.723" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:45.720" endtime="20210719 10:53:45.723"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:45.726" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:45.724" endtime="20210719 10:53:45.727"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:46.729" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:46.729" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:38 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:46.730" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:45.728" endtime="20210719 10:53:46.730"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:46.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:46.731" endtime="20210719 10:53:46.740"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:46.741" endtime="20210719 10:53:46.744"/>
</kw>
<status status="PASS" starttime="20210719 10:53:45.712" endtime="20210719 10:53:46.745"/>
</kw>
<status status="PASS" starttime="20210719 10:53:45.710" endtime="20210719 10:53:46.746"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:46.756" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:46.751" endtime="20210719 10:53:46.757"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:46.761" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:46.759" endtime="20210719 10:53:46.761"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:46.764" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:46.762" endtime="20210719 10:53:46.766"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:47.979" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:47.980" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:39 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:47.980" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:46.766" endtime="20210719 10:53:47.981"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:47.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:47.982" endtime="20210719 10:53:47.988"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:47.989" endtime="20210719 10:53:47.991"/>
</kw>
<status status="PASS" starttime="20210719 10:53:46.749" endtime="20210719 10:53:47.992"/>
</kw>
<status status="PASS" starttime="20210719 10:53:46.747" endtime="20210719 10:53:47.993"/>
</kw>
<status status="PASS" starttime="20210719 10:53:45.189" endtime="20210719 10:53:47.994"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:48.112" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:48.000" endtime="20210719 10:53:48.112"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:48.115" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:48.113" endtime="20210719 10:53:48.116"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:48.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:48.117" endtime="20210719 10:53:48.119"/>
</kw>
<msg timestamp="20210719 10:53:48.122" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:47.997" endtime="20210719 10:53:48.122"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:48.233" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:48.126" endtime="20210719 10:53:48.233"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:48.238" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:48.235" endtime="20210719 10:53:48.238"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:48.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:48.239" endtime="20210719 10:53:48.241"/>
</kw>
<msg timestamp="20210719 10:53:48.242" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:48.123" endtime="20210719 10:53:48.242"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:48.340" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:53:48.245" endtime="20210719 10:53:48.340"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:48.343" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:53:48.341" endtime="20210719 10:53:48.343"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:48.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:48.344" endtime="20210719 10:53:48.346"/>
</kw>
<msg timestamp="20210719 10:53:48.347" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:53:48.243" endtime="20210719 10:53:48.347"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:48.435" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:53:48.351" endtime="20210719 10:53:48.435"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:48.436" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:53:48.435" endtime="20210719 10:53:48.436"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:48.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:48.436" endtime="20210719 10:53:48.437"/>
</kw>
<msg timestamp="20210719 10:53:48.438" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:53:48.348" endtime="20210719 10:53:48.438"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:48.442" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:48.441" endtime="20210719 10:53:48.442"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:48.444" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:48.443" endtime="20210719 10:53:48.444"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:48.445" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:48.444" endtime="20210719 10:53:48.445"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:49.430" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:49.431" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:41 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:49.431" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:48.446" endtime="20210719 10:53:49.432"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:49.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:49.433" endtime="20210719 10:53:49.439"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:49.440" endtime="20210719 10:53:49.443"/>
</kw>
<status status="PASS" starttime="20210719 10:53:48.440" endtime="20210719 10:53:49.445"/>
</kw>
<status status="PASS" starttime="20210719 10:53:48.438" endtime="20210719 10:53:49.445"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:49.454" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:49.450" endtime="20210719 10:53:49.454"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:49.457" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:49.455" endtime="20210719 10:53:49.457"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:49.460" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:49.457" endtime="20210719 10:53:49.462"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:50.486" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:50.486" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:42 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:50.487" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:49.462" endtime="20210719 10:53:50.487"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:50.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:50.488" endtime="20210719 10:53:50.495"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:50.496" endtime="20210719 10:53:50.499"/>
</kw>
<status status="PASS" starttime="20210719 10:53:49.448" endtime="20210719 10:53:50.500"/>
</kw>
<status status="PASS" starttime="20210719 10:53:49.446" endtime="20210719 10:53:50.501"/>
</kw>
<status status="PASS" starttime="20210719 10:53:47.995" endtime="20210719 10:53:50.501"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:50.642" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:50.507" endtime="20210719 10:53:50.642"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:50.645" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:50.643" endtime="20210719 10:53:50.645"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:50.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:50.646" endtime="20210719 10:53:50.648"/>
</kw>
<msg timestamp="20210719 10:53:50.649" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:50.503" endtime="20210719 10:53:50.649"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:50.780" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:50.654" endtime="20210719 10:53:50.780"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:50.783" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:50.781" endtime="20210719 10:53:50.783"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:50.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:50.784" endtime="20210719 10:53:50.786"/>
</kw>
<msg timestamp="20210719 10:53:50.788" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:50.650" endtime="20210719 10:53:50.788"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:50.861" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:53:50.793" endtime="20210719 10:53:50.862"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:50.863" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:53:50.862" endtime="20210719 10:53:50.864"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:50.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:50.864" endtime="20210719 10:53:50.865"/>
</kw>
<msg timestamp="20210719 10:53:50.866" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:53:50.789" endtime="20210719 10:53:50.866"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:50.975" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:53:50.868" endtime="20210719 10:53:50.976"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:50.978" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:53:50.977" endtime="20210719 10:53:50.978"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:50.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:50.979" endtime="20210719 10:53:50.980"/>
</kw>
<msg timestamp="20210719 10:53:50.980" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:53:50.867" endtime="20210719 10:53:50.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:50.984" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:50.983" endtime="20210719 10:53:50.984"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:50.986" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:50.985" endtime="20210719 10:53:50.986"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:50.987" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:50.986" endtime="20210719 10:53:50.988"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:51.985" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:51.985" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:43 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:51.986" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:50.988" endtime="20210719 10:53:51.986"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:51.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:51.987" endtime="20210719 10:53:51.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:51.993" endtime="20210719 10:53:51.995"/>
</kw>
<status status="PASS" starttime="20210719 10:53:50.982" endtime="20210719 10:53:51.996"/>
</kw>
<status status="PASS" starttime="20210719 10:53:50.981" endtime="20210719 10:53:51.997"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:52.009" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:52.006" endtime="20210719 10:53:52.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:52.015" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:52.010" endtime="20210719 10:53:52.016"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:52.019" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:52.016" endtime="20210719 10:53:52.020"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:53.311" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:53.311" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:53.312" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:52.022" endtime="20210719 10:53:53.313"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:53.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:53.314" endtime="20210719 10:53:53.321"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:53.322" endtime="20210719 10:53:53.326"/>
</kw>
<status status="PASS" starttime="20210719 10:53:52.004" endtime="20210719 10:53:53.326"/>
</kw>
<status status="PASS" starttime="20210719 10:53:51.999" endtime="20210719 10:53:53.327"/>
</kw>
<status status="PASS" starttime="20210719 10:53:50.502" endtime="20210719 10:53:53.328"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:53.450" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:53:53.334" endtime="20210719 10:53:53.450"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:53.453" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:53.451" endtime="20210719 10:53:53.453"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:53.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:53.454" endtime="20210719 10:53:53.456"/>
</kw>
<msg timestamp="20210719 10:53:53.458" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:53:53.330" endtime="20210719 10:53:53.459"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:53.624" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:53:53.464" endtime="20210719 10:53:53.625"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:53.631" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:53.626" endtime="20210719 10:53:53.631"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:53.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:53.632" endtime="20210719 10:53:53.634"/>
</kw>
<msg timestamp="20210719 10:53:53.636" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:53:53.460" endtime="20210719 10:53:53.636"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:53.787" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:53:53.643" endtime="20210719 10:53:53.787"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:53.789" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:53:53.788" endtime="20210719 10:53:53.790"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:53.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:53.790" endtime="20210719 10:53:53.792"/>
</kw>
<msg timestamp="20210719 10:53:53.793" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:53:53.638" endtime="20210719 10:53:53.793"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:53.895" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:53:53.796" endtime="20210719 10:53:53.896"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:53.898" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:53:53.896" endtime="20210719 10:53:53.898"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:53.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:53.899" endtime="20210719 10:53:53.900"/>
</kw>
<msg timestamp="20210719 10:53:53.902" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:53:53.794" endtime="20210719 10:53:53.902"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:53.915" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:53.912" endtime="20210719 10:53:53.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:53.919" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:53.915" endtime="20210719 10:53:53.919"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:53.922" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:53.920" endtime="20210719 10:53:53.923"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:55.729" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:55.729" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:55.730" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:53.924" endtime="20210719 10:53:55.730"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:55.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:55.731" endtime="20210719 10:53:55.738"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:55.739" endtime="20210719 10:53:55.742"/>
</kw>
<status status="PASS" starttime="20210719 10:53:53.909" endtime="20210719 10:53:55.743"/>
</kw>
<status status="PASS" starttime="20210719 10:53:53.904" endtime="20210719 10:53:55.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:55.754" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:53:55.750" endtime="20210719 10:53:55.754"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:53:55.760" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:53:55.756" endtime="20210719 10:53:55.760"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:53:55.763" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:53:55.761" endtime="20210719 10:53:55.765"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:53:56.831" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:53:56.832" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:21:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:53:56.832" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:53:55.766" endtime="20210719 10:53:56.833"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:53:56.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:53:56.834" endtime="20210719 10:53:56.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:56.840" endtime="20210719 10:53:56.842"/>
</kw>
<status status="PASS" starttime="20210719 10:53:55.748" endtime="20210719 10:53:56.843"/>
</kw>
<status status="PASS" starttime="20210719 10:53:55.745" endtime="20210719 10:53:56.844"/>
</kw>
<status status="PASS" starttime="20210719 10:53:53.329" endtime="20210719 10:53:56.844"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.010" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:53:56.852" endtime="20210719 10:53:57.011"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.015" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:57.012" endtime="20210719 10:53:57.015"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.016" endtime="20210719 10:53:57.019"/>
</kw>
<msg timestamp="20210719 10:53:57.021" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:56.847" endtime="20210719 10:53:57.021"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.122" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:53:57.024" endtime="20210719 10:53:57.123"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.124" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:57.123" endtime="20210719 10:53:57.124"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.126" endtime="20210719 10:53:57.126"/>
</kw>
<msg timestamp="20210719 10:53:57.130" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:57.022" endtime="20210719 10:53:57.130"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.267" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:53:57.139" endtime="20210719 10:53:57.267"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.270" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:53:57.269" endtime="20210719 10:53:57.270"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.271" endtime="20210719 10:53:57.274"/>
</kw>
<msg timestamp="20210719 10:53:57.277" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:53:57.132" endtime="20210719 10:53:57.277"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.395" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:53:57.280" endtime="20210719 10:53:57.395"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.398" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:53:57.396" endtime="20210719 10:53:57.398"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.398" endtime="20210719 10:53:57.400"/>
</kw>
<msg timestamp="20210719 10:53:57.402" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:53:57.277" endtime="20210719 10:53:57.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:57.402" endtime="20210719 10:53:57.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:57.405" endtime="20210719 10:53:57.407"/>
</kw>
<status status="PASS" starttime="20210719 10:53:56.846" endtime="20210719 10:53:57.407"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.520" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:53:57.414" endtime="20210719 10:53:57.521"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.523" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:57.521" endtime="20210719 10:53:57.523"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.524" endtime="20210719 10:53:57.526"/>
</kw>
<msg timestamp="20210719 10:53:57.528" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:57.410" endtime="20210719 10:53:57.528"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.641" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:53:57.531" endtime="20210719 10:53:57.641"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.645" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:57.642" endtime="20210719 10:53:57.645"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.647" endtime="20210719 10:53:57.650"/>
</kw>
<msg timestamp="20210719 10:53:57.651" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:57.529" endtime="20210719 10:53:57.651"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.755" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:53:57.654" endtime="20210719 10:53:57.755"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.758" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:53:57.756" endtime="20210719 10:53:57.758"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.758" endtime="20210719 10:53:57.760"/>
</kw>
<msg timestamp="20210719 10:53:57.761" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:53:57.652" endtime="20210719 10:53:57.761"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.872" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:53:57.766" endtime="20210719 10:53:57.873"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.875" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:53:57.873" endtime="20210719 10:53:57.875"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:57.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:57.876" endtime="20210719 10:53:57.877"/>
</kw>
<msg timestamp="20210719 10:53:57.879" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:53:57.762" endtime="20210719 10:53:57.879"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:57.879" endtime="20210719 10:53:57.881"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:57.883" endtime="20210719 10:53:57.886"/>
</kw>
<status status="PASS" starttime="20210719 10:53:57.410" endtime="20210719 10:53:57.886"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:57.996" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:53:57.891" endtime="20210719 10:53:57.996"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:57.999" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:57.997" endtime="20210719 10:53:57.999"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:58.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:58.000" endtime="20210719 10:53:58.002"/>
</kw>
<msg timestamp="20210719 10:53:58.004" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:53:57.888" endtime="20210719 10:53:58.004"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:58.110" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:53:58.008" endtime="20210719 10:53:58.111"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:58.114" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:58.112" endtime="20210719 10:53:58.115"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:58.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:58.116" endtime="20210719 10:53:58.117"/>
</kw>
<msg timestamp="20210719 10:53:58.119" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:53:58.005" endtime="20210719 10:53:58.119"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:58.227" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:53:58.123" endtime="20210719 10:53:58.227"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:58.231" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:53:58.228" endtime="20210719 10:53:58.231"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:58.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:58.232" endtime="20210719 10:53:58.233"/>
</kw>
<msg timestamp="20210719 10:53:58.235" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:53:58.120" endtime="20210719 10:53:58.235"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:53:58.340" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:53:58.238" endtime="20210719 10:53:58.340"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:53:58.345" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:53:58.342" endtime="20210719 10:53:58.345"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:53:58.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:53:58.345" endtime="20210719 10:53:58.348"/>
</kw>
<msg timestamp="20210719 10:53:58.349" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:53:58.235" endtime="20210719 10:53:58.349"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:58.350" endtime="20210719 10:53:58.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:53:58.354" endtime="20210719 10:53:58.356"/>
</kw>
<status status="PASS" starttime="20210719 10:53:57.887" endtime="20210719 10:53:58.357"/>
</iter>
<status status="PASS" starttime="20210719 10:53:35.706" endtime="20210719 10:53:58.357"/>
</for>
<status status="PASS" starttime="20210719 10:53:32.253" endtime="20210719 10:53:58.358"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:53:58.364" endtime="20210719 10:53:58.364"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:54:58.368" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:53:58.366" endtime="20210719 10:54:58.369"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:54:58.371" endtime="20210719 10:54:58.373"/>
</kw>
<status status="PASS" starttime="20210719 10:53:58.360" endtime="20210719 10:54:58.374"/>
</kw>
<status status="PASS" starttime="20210719 10:53:58.359" endtime="20210719 10:54:58.375"/>
</kw>
<status status="PASS" starttime="20210719 10:53:32.252" endtime="20210719 10:54:58.377"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:54:58.391" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:54:58.387" endtime="20210719 10:54:58.392"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:54:58.396" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:54:58.397" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:54:58.394" endtime="20210719 10:54:58.397"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:54:58.401" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:54:58.398" endtime="20210719 10:54:58.401"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:54:58.403" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:54:58.402" endtime="20210719 10:54:58.405"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:54:59.884" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:54:59.884" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:51 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:54:59.886" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:54:58.407" endtime="20210719 10:54:59.886"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:54:59.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:54:59.886" endtime="20210719 10:54:59.894"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:54:59.900" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:54:59.895" endtime="20210719 10:54:59.901"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:54:59.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:54:59.902" endtime="20210719 10:54:59.903"/>
</kw>
<msg timestamp="20210719 10:54:59.905" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:54:58.384" endtime="20210719 10:54:59.905"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:00.063" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:54:59.910" endtime="20210719 10:55:00.063"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:55:00.068" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:55:00.068" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:55:00.065" endtime="20210719 10:55:00.069"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:55:00.074" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:55:00.070" endtime="20210719 10:55:00.074"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:00.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:00.076" endtime="20210719 10:55:00.079"/>
</kw>
<msg timestamp="20210719 10:55:00.081" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:54:59.907" endtime="20210719 10:55:00.082"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:00.083" endtime="20210719 10:55:00.085"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:00.088" endtime="20210719 10:55:00.090"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:00.201" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:00.096" endtime="20210719 10:55:00.201"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:00.204" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:00.202" endtime="20210719 10:55:00.205"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:00.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:00.205" endtime="20210719 10:55:00.207"/>
</kw>
<msg timestamp="20210719 10:55:00.208" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:00.092" endtime="20210719 10:55:00.208"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:00.316" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:00.212" endtime="20210719 10:55:00.316"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:00.320" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:00.317" endtime="20210719 10:55:00.320"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:00.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:00.321" endtime="20210719 10:55:00.323"/>
</kw>
<msg timestamp="20210719 10:55:00.324" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:00.209" endtime="20210719 10:55:00.324"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:00.429" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:55:00.328" endtime="20210719 10:55:00.429"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:00.433" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:55:00.430" endtime="20210719 10:55:00.433"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:00.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:00.435" endtime="20210719 10:55:00.437"/>
</kw>
<msg timestamp="20210719 10:55:00.438" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:55:00.326" endtime="20210719 10:55:00.439"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:00.582" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:55:00.442" endtime="20210719 10:55:00.582"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:00.588" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:55:00.583" endtime="20210719 10:55:00.589"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:00.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:00.590" endtime="20210719 10:55:00.595"/>
</kw>
<msg timestamp="20210719 10:55:00.597" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:55:00.439" endtime="20210719 10:55:00.598"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:55:00.611" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:55:00.608" endtime="20210719 10:55:00.611"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:55:00.617" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:55:00.613" endtime="20210719 10:55:00.618"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:55:00.624" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:55:00.621" endtime="20210719 10:55:00.625"/>
</kw>
<status status="PASS" starttime="20210719 10:55:00.605" endtime="20210719 10:55:00.626"/>
</branch>
<status status="PASS" starttime="20210719 10:55:00.604" endtime="20210719 10:55:00.626"/>
</if>
<status status="PASS" starttime="20210719 10:55:00.600" endtime="20210719 10:55:00.627"/>
</branch>
<status status="PASS" starttime="20210719 10:55:00.599" endtime="20210719 10:55:00.627"/>
</if>
<status status="PASS" starttime="20210719 10:55:00.087" endtime="20210719 10:55:00.628"/>
</iter>
<status status="PASS" starttime="20210719 10:55:00.085" endtime="20210719 10:55:00.629"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:00.642" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:00.635" endtime="20210719 10:55:00.643"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:00.649" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:00.645" endtime="20210719 10:55:00.649"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:00.654" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:00.650" endtime="20210719 10:55:00.658"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:01.761" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:01.761" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:53 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:01.762" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:00.659" endtime="20210719 10:55:01.762"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:01.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:01.763" endtime="20210719 10:55:01.770"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:01.771" endtime="20210719 10:55:01.773"/>
</kw>
<status status="PASS" starttime="20210719 10:55:00.630" endtime="20210719 10:55:01.774"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:01.780" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:01.777" endtime="20210719 10:55:01.781"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:01.786" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:01.782" endtime="20210719 10:55:01.786"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:01.788" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:01.787" endtime="20210719 10:55:01.790"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:02.770" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:02.770" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:54 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:02.771" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:01.790" endtime="20210719 10:55:02.771"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:02.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:02.772" endtime="20210719 10:55:02.780"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:02.780" endtime="20210719 10:55:02.783"/>
</kw>
<status status="PASS" starttime="20210719 10:55:01.775" endtime="20210719 10:55:02.784"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:02.785" endtime="20210719 10:55:02.787"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:02.901" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:02.795" endtime="20210719 10:55:02.901"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:02.906" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:02.902" endtime="20210719 10:55:02.906"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:02.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:02.907" endtime="20210719 10:55:02.909"/>
</kw>
<msg timestamp="20210719 10:55:02.910" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:02.791" endtime="20210719 10:55:02.910"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.039" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:02.913" endtime="20210719 10:55:03.041"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.044" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:03.041" endtime="20210719 10:55:03.045"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.047" endtime="20210719 10:55:03.049"/>
</kw>
<msg timestamp="20210719 10:55:03.050" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:02.911" endtime="20210719 10:55:03.051"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.165" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:55:03.056" endtime="20210719 10:55:03.165"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.167" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:55:03.166" endtime="20210719 10:55:03.167"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.169" endtime="20210719 10:55:03.169"/>
</kw>
<msg timestamp="20210719 10:55:03.171" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:55:03.051" endtime="20210719 10:55:03.171"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.285" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:55:03.175" endtime="20210719 10:55:03.285"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.288" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:55:03.286" endtime="20210719 10:55:03.288"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.290" endtime="20210719 10:55:03.292"/>
</kw>
<msg timestamp="20210719 10:55:03.294" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:55:03.172" endtime="20210719 10:55:03.294"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:03.296" endtime="20210719 10:55:03.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:03.300" endtime="20210719 10:55:03.302"/>
</kw>
<status status="PASS" starttime="20210719 10:55:02.790" endtime="20210719 10:55:03.303"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.412" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:03.311" endtime="20210719 10:55:03.415"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.419" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:03.416" endtime="20210719 10:55:03.419"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.420" endtime="20210719 10:55:03.421"/>
</kw>
<msg timestamp="20210719 10:55:03.423" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:03.306" endtime="20210719 10:55:03.423"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.519" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:03.426" endtime="20210719 10:55:03.520"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.524" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:03.521" endtime="20210719 10:55:03.525"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.526" endtime="20210719 10:55:03.528"/>
</kw>
<msg timestamp="20210719 10:55:03.529" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:03.424" endtime="20210719 10:55:03.529"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.639" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:55:03.534" endtime="20210719 10:55:03.639"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.643" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:55:03.640" endtime="20210719 10:55:03.644"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.645" endtime="20210719 10:55:03.647"/>
</kw>
<msg timestamp="20210719 10:55:03.648" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:55:03.530" endtime="20210719 10:55:03.648"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:03.738" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:55:03.651" endtime="20210719 10:55:03.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:03.741" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:55:03.739" endtime="20210719 10:55:03.741"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:03.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:03.742" endtime="20210719 10:55:03.743"/>
</kw>
<msg timestamp="20210719 10:55:03.744" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:55:03.649" endtime="20210719 10:55:03.744"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:03.752" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:03.749" endtime="20210719 10:55:03.752"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:03.757" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:03.753" endtime="20210719 10:55:03.758"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:03.760" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:03.758" endtime="20210719 10:55:03.761"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:04.762" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:04.762" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:56 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:04.763" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:03.762" endtime="20210719 10:55:04.763"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:04.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:04.764" endtime="20210719 10:55:04.769"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:04.770" endtime="20210719 10:55:04.772"/>
</kw>
<status status="PASS" starttime="20210719 10:55:03.747" endtime="20210719 10:55:04.773"/>
</kw>
<status status="PASS" starttime="20210719 10:55:03.745" endtime="20210719 10:55:04.774"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:04.783" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:04.778" endtime="20210719 10:55:04.783"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:04.787" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:04.784" endtime="20210719 10:55:04.787"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:04.789" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:04.788" endtime="20210719 10:55:04.790"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:05.790" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:05.791" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:57 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:05.791" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:04.791" endtime="20210719 10:55:05.791"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:05.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:05.793" endtime="20210719 10:55:05.803"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:05.804" endtime="20210719 10:55:05.806"/>
</kw>
<status status="PASS" starttime="20210719 10:55:04.777" endtime="20210719 10:55:05.807"/>
</kw>
<status status="PASS" starttime="20210719 10:55:04.774" endtime="20210719 10:55:05.808"/>
</kw>
<status status="PASS" starttime="20210719 10:55:03.304" endtime="20210719 10:55:05.808"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:05.930" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:05.816" endtime="20210719 10:55:05.930"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:05.933" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:05.931" endtime="20210719 10:55:05.933"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:05.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:05.934" endtime="20210719 10:55:05.936"/>
</kw>
<msg timestamp="20210719 10:55:05.937" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:05.810" endtime="20210719 10:55:05.937"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:06.159" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:05.942" endtime="20210719 10:55:06.159"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:06.162" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:06.161" endtime="20210719 10:55:06.162"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:06.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:06.163" endtime="20210719 10:55:06.165"/>
</kw>
<msg timestamp="20210719 10:55:06.166" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:05.938" endtime="20210719 10:55:06.166"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:06.273" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:55:06.170" endtime="20210719 10:55:06.273"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:06.278" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:55:06.275" endtime="20210719 10:55:06.278"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:06.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:06.279" endtime="20210719 10:55:06.281"/>
</kw>
<msg timestamp="20210719 10:55:06.284" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:55:06.168" endtime="20210719 10:55:06.284"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:06.387" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:55:06.289" endtime="20210719 10:55:06.388"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:06.390" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:55:06.388" endtime="20210719 10:55:06.390"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:06.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:06.391" endtime="20210719 10:55:06.393"/>
</kw>
<msg timestamp="20210719 10:55:06.396" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:55:06.285" endtime="20210719 10:55:06.396"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:06.403" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:06.400" endtime="20210719 10:55:06.403"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:06.406" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:06.404" endtime="20210719 10:55:06.406"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:06.409" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:06.408" endtime="20210719 10:55:06.410"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:07.466" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:07.466" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:22:59 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:07.467" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:06.411" endtime="20210719 10:55:07.467"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:07.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:07.468" endtime="20210719 10:55:07.475"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:07.477" endtime="20210719 10:55:07.480"/>
</kw>
<status status="PASS" starttime="20210719 10:55:06.399" endtime="20210719 10:55:07.482"/>
</kw>
<status status="PASS" starttime="20210719 10:55:06.396" endtime="20210719 10:55:07.483"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:07.496" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:07.491" endtime="20210719 10:55:07.496"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:07.502" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:07.497" endtime="20210719 10:55:07.502"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:07.505" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:07.503" endtime="20210719 10:55:07.506"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:09.592" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:09.593" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:00 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:09.594" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:07.507" endtime="20210719 10:55:09.594"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:09.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:09.595" endtime="20210719 10:55:09.602"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:09.603" endtime="20210719 10:55:09.605"/>
</kw>
<status status="PASS" starttime="20210719 10:55:07.489" endtime="20210719 10:55:09.606"/>
</kw>
<status status="PASS" starttime="20210719 10:55:07.485" endtime="20210719 10:55:09.607"/>
</kw>
<status status="PASS" starttime="20210719 10:55:05.809" endtime="20210719 10:55:09.608"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:09.741" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:09.613" endtime="20210719 10:55:09.741"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:09.746" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:09.743" endtime="20210719 10:55:09.746"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:09.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:09.748" endtime="20210719 10:55:09.749"/>
</kw>
<msg timestamp="20210719 10:55:09.752" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:09.610" endtime="20210719 10:55:09.752"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:09.870" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:09.756" endtime="20210719 10:55:09.870"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:09.873" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:09.871" endtime="20210719 10:55:09.874"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:09.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:09.875" endtime="20210719 10:55:09.877"/>
</kw>
<msg timestamp="20210719 10:55:09.879" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:09.753" endtime="20210719 10:55:09.880"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:09.993" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:55:09.886" endtime="20210719 10:55:09.993"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:09.997" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:55:09.994" endtime="20210719 10:55:09.997"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:10.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:09.999" endtime="20210719 10:55:10.002"/>
</kw>
<msg timestamp="20210719 10:55:10.004" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:55:09.882" endtime="20210719 10:55:10.005"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:10.150" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:55:10.009" endtime="20210719 10:55:10.150"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:10.155" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:55:10.151" endtime="20210719 10:55:10.155"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:10.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:10.156" endtime="20210719 10:55:10.157"/>
</kw>
<msg timestamp="20210719 10:55:10.159" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:55:10.006" endtime="20210719 10:55:10.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:10.170" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:10.166" endtime="20210719 10:55:10.170"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:10.175" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:10.171" endtime="20210719 10:55:10.175"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:10.178" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:10.175" endtime="20210719 10:55:10.179"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:11.197" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:11.197" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:02 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:11.198" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:10.180" endtime="20210719 10:55:11.198"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:11.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:11.200" endtime="20210719 10:55:11.207"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:11.208" endtime="20210719 10:55:11.212"/>
</kw>
<status status="PASS" starttime="20210719 10:55:10.162" endtime="20210719 10:55:11.213"/>
</kw>
<status status="PASS" starttime="20210719 10:55:10.160" endtime="20210719 10:55:11.214"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:11.224" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:11.220" endtime="20210719 10:55:11.224"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:11.228" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:11.224" endtime="20210719 10:55:11.228"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:11.230" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:11.229" endtime="20210719 10:55:11.231"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:12.218" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:12.219" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:04 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:12.220" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:11.232" endtime="20210719 10:55:12.220"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:12.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:12.221" endtime="20210719 10:55:12.228"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:12.229" endtime="20210719 10:55:12.232"/>
</kw>
<status status="PASS" starttime="20210719 10:55:11.218" endtime="20210719 10:55:12.233"/>
</kw>
<status status="PASS" starttime="20210719 10:55:11.215" endtime="20210719 10:55:12.234"/>
</kw>
<status status="PASS" starttime="20210719 10:55:09.608" endtime="20210719 10:55:12.235"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:12.348" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:12.240" endtime="20210719 10:55:12.348"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:12.352" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:12.349" endtime="20210719 10:55:12.352"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:12.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:12.353" endtime="20210719 10:55:12.354"/>
</kw>
<msg timestamp="20210719 10:55:12.356" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:12.237" endtime="20210719 10:55:12.356"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:12.469" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:12.360" endtime="20210719 10:55:12.469"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:12.472" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:12.470" endtime="20210719 10:55:12.472"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:12.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:12.473" endtime="20210719 10:55:12.475"/>
</kw>
<msg timestamp="20210719 10:55:12.476" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:12.357" endtime="20210719 10:55:12.476"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:12.582" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:55:12.479" endtime="20210719 10:55:12.582"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:12.585" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:55:12.583" endtime="20210719 10:55:12.586"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:12.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:12.587" endtime="20210719 10:55:12.590"/>
</kw>
<msg timestamp="20210719 10:55:12.591" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:55:12.477" endtime="20210719 10:55:12.591"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:12.705" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:55:12.595" endtime="20210719 10:55:12.705"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:12.709" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:55:12.707" endtime="20210719 10:55:12.709"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:12.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:12.710" endtime="20210719 10:55:12.712"/>
</kw>
<msg timestamp="20210719 10:55:12.714" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:55:12.592" endtime="20210719 10:55:12.715"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:12.725" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:12.721" endtime="20210719 10:55:12.726"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:12.729" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:12.726" endtime="20210719 10:55:12.729"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:12.732" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:12.730" endtime="20210719 10:55:12.732"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:13.789" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:13.789" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:05 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:13.790" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:12.734" endtime="20210719 10:55:13.790"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:13.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:13.791" endtime="20210719 10:55:13.798"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:13.799" endtime="20210719 10:55:13.802"/>
</kw>
<status status="PASS" starttime="20210719 10:55:12.719" endtime="20210719 10:55:13.802"/>
</kw>
<status status="PASS" starttime="20210719 10:55:12.716" endtime="20210719 10:55:13.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:13.812" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:13.808" endtime="20210719 10:55:13.812"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:13.818" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:13.814" endtime="20210719 10:55:13.818"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:13.821" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:13.819" endtime="20210719 10:55:13.822"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:14.990" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:14.991" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:06 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:14.991" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:13.823" endtime="20210719 10:55:14.992"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:14.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:14.993" endtime="20210719 10:55:14.997"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:14.999" endtime="20210719 10:55:15.000"/>
</kw>
<status status="PASS" starttime="20210719 10:55:13.806" endtime="20210719 10:55:15.002"/>
</kw>
<status status="PASS" starttime="20210719 10:55:13.804" endtime="20210719 10:55:15.002"/>
</kw>
<status status="PASS" starttime="20210719 10:55:12.235" endtime="20210719 10:55:15.003"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:15.156" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:15.010" endtime="20210719 10:55:15.157"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:15.161" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:15.159" endtime="20210719 10:55:15.161"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:15.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:15.162" endtime="20210719 10:55:15.164"/>
</kw>
<msg timestamp="20210719 10:55:15.166" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:15.006" endtime="20210719 10:55:15.166"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:15.283" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:15.169" endtime="20210719 10:55:15.283"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:15.286" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:15.284" endtime="20210719 10:55:15.286"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:15.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:15.287" endtime="20210719 10:55:15.288"/>
</kw>
<msg timestamp="20210719 10:55:15.290" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:15.166" endtime="20210719 10:55:15.291"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:15.441" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:55:15.293" endtime="20210719 10:55:15.441"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:15.445" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:55:15.442" endtime="20210719 10:55:15.445"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:15.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:15.446" endtime="20210719 10:55:15.448"/>
</kw>
<msg timestamp="20210719 10:55:15.449" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:55:15.291" endtime="20210719 10:55:15.450"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:15.566" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:55:15.454" endtime="20210719 10:55:15.566"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:15.570" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:55:15.568" endtime="20210719 10:55:15.570"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:15.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:15.571" endtime="20210719 10:55:15.572"/>
</kw>
<msg timestamp="20210719 10:55:15.574" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:55:15.451" endtime="20210719 10:55:15.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:15.583" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:15.580" endtime="20210719 10:55:15.584"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:15.587" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:15.585" endtime="20210719 10:55:15.587"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:15.589" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:15.588" endtime="20210719 10:55:15.590"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:16.821" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:16.821" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:08 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:16.823" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:15.591" endtime="20210719 10:55:16.823"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:16.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:16.825" endtime="20210719 10:55:16.835"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:16.836" endtime="20210719 10:55:16.840"/>
</kw>
<status status="PASS" starttime="20210719 10:55:15.578" endtime="20210719 10:55:16.841"/>
</kw>
<status status="PASS" starttime="20210719 10:55:15.575" endtime="20210719 10:55:16.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:16.856" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:16.852" endtime="20210719 10:55:16.856"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:16.863" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:16.858" endtime="20210719 10:55:16.863"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:16.867" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:16.864" endtime="20210719 10:55:16.869"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:17.927" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:17.928" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:09 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:17.929" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:16.870" endtime="20210719 10:55:17.929"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:17.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:17.930" endtime="20210719 10:55:17.939"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:17.939" endtime="20210719 10:55:17.941"/>
</kw>
<status status="PASS" starttime="20210719 10:55:16.849" endtime="20210719 10:55:17.942"/>
</kw>
<status status="PASS" starttime="20210719 10:55:16.844" endtime="20210719 10:55:17.943"/>
</kw>
<status status="PASS" starttime="20210719 10:55:15.004" endtime="20210719 10:55:17.943"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:18.046" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:17.949" endtime="20210719 10:55:18.046"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:18.049" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:18.047" endtime="20210719 10:55:18.049"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:18.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:18.050" endtime="20210719 10:55:18.052"/>
</kw>
<msg timestamp="20210719 10:55:18.053" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:17.945" endtime="20210719 10:55:18.053"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:18.159" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:18.056" endtime="20210719 10:55:18.160"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:18.164" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:18.162" endtime="20210719 10:55:18.165"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:18.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:18.166" endtime="20210719 10:55:18.167"/>
</kw>
<msg timestamp="20210719 10:55:18.169" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:18.054" endtime="20210719 10:55:18.170"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:18.263" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:55:18.175" endtime="20210719 10:55:18.263"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:18.266" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:55:18.264" endtime="20210719 10:55:18.266"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:18.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:18.267" endtime="20210719 10:55:18.269"/>
</kw>
<msg timestamp="20210719 10:55:18.270" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:55:18.171" endtime="20210719 10:55:18.271"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:18.375" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:55:18.274" endtime="20210719 10:55:18.375"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:18.379" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:55:18.376" endtime="20210719 10:55:18.379"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:18.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:18.380" endtime="20210719 10:55:18.381"/>
</kw>
<msg timestamp="20210719 10:55:18.382" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:55:18.271" endtime="20210719 10:55:18.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:18.391" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:18.388" endtime="20210719 10:55:18.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:18.395" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:18.392" endtime="20210719 10:55:18.395"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:18.397" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:18.395" endtime="20210719 10:55:18.398"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:19.503" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:19.503" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:11 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:19.504" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:18.398" endtime="20210719 10:55:19.504"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:19.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:19.506" endtime="20210719 10:55:19.510"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:19.512" endtime="20210719 10:55:19.514"/>
</kw>
<status status="PASS" starttime="20210719 10:55:18.386" endtime="20210719 10:55:19.516"/>
</kw>
<status status="PASS" starttime="20210719 10:55:18.383" endtime="20210719 10:55:19.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:19.527" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:19.523" endtime="20210719 10:55:19.527"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:19.530" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:19.527" endtime="20210719 10:55:19.530"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:19.534" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:19.531" endtime="20210719 10:55:19.536"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:20.662" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:20.662" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:12 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:20.663" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:19.537" endtime="20210719 10:55:20.663"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:20.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:20.664" endtime="20210719 10:55:20.670"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:20.671" endtime="20210719 10:55:20.675"/>
</kw>
<status status="PASS" starttime="20210719 10:55:19.521" endtime="20210719 10:55:20.676"/>
</kw>
<status status="PASS" starttime="20210719 10:55:19.518" endtime="20210719 10:55:20.677"/>
</kw>
<status status="PASS" starttime="20210719 10:55:17.944" endtime="20210719 10:55:20.677"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:20.792" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:55:20.682" endtime="20210719 10:55:20.792"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:20.795" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:20.793" endtime="20210719 10:55:20.796"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:20.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:20.797" endtime="20210719 10:55:20.798"/>
</kw>
<msg timestamp="20210719 10:55:20.800" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:55:20.679" endtime="20210719 10:55:20.800"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:20.924" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:55:20.803" endtime="20210719 10:55:20.925"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:20.928" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:20.926" endtime="20210719 10:55:20.928"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:20.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:20.929" endtime="20210719 10:55:20.931"/>
</kw>
<msg timestamp="20210719 10:55:20.932" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:55:20.801" endtime="20210719 10:55:20.932"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:21.060" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:55:20.937" endtime="20210719 10:55:21.060"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:21.064" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:55:21.061" endtime="20210719 10:55:21.064"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:21.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:21.065" endtime="20210719 10:55:21.068"/>
</kw>
<msg timestamp="20210719 10:55:21.069" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:55:20.933" endtime="20210719 10:55:21.069"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:21.245" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:55:21.073" endtime="20210719 10:55:21.246"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:21.251" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:55:21.248" endtime="20210719 10:55:21.251"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:21.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:21.253" endtime="20210719 10:55:21.256"/>
</kw>
<msg timestamp="20210719 10:55:21.258" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:55:21.070" endtime="20210719 10:55:21.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:21.273" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:21.269" endtime="20210719 10:55:21.274"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:21.279" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:21.275" endtime="20210719 10:55:21.279"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:21.282" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:21.281" endtime="20210719 10:55:21.285"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:22.706" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:22.706" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:14 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:22.707" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:21.286" endtime="20210719 10:55:22.707"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:22.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:22.709" endtime="20210719 10:55:22.715"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:22.717" endtime="20210719 10:55:22.720"/>
</kw>
<status status="PASS" starttime="20210719 10:55:21.264" endtime="20210719 10:55:22.721"/>
</kw>
<status status="PASS" starttime="20210719 10:55:21.260" endtime="20210719 10:55:22.721"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:22.731" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:55:22.729" endtime="20210719 10:55:22.732"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:55:22.736" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:55:22.733" endtime="20210719 10:55:22.736"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:55:22.739" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:55:22.737" endtime="20210719 10:55:22.740"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:55:24.740" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:55:24.741" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:23:16 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:55:24.742" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:55:22.740" endtime="20210719 10:55:24.742"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:55:24.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:55:24.744" endtime="20210719 10:55:24.749"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:24.750" endtime="20210719 10:55:24.752"/>
</kw>
<status status="PASS" starttime="20210719 10:55:22.725" endtime="20210719 10:55:24.752"/>
</kw>
<status status="PASS" starttime="20210719 10:55:22.722" endtime="20210719 10:55:24.754"/>
</kw>
<status status="PASS" starttime="20210719 10:55:20.678" endtime="20210719 10:55:24.754"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:24.820" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:55:24.762" endtime="20210719 10:55:24.820"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:24.822" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:24.821" endtime="20210719 10:55:24.822"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:24.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:24.823" endtime="20210719 10:55:24.824"/>
</kw>
<msg timestamp="20210719 10:55:24.826" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:24.757" endtime="20210719 10:55:24.826"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:24.883" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:55:24.828" endtime="20210719 10:55:24.883"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:24.885" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:24.884" endtime="20210719 10:55:24.886"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:24.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:24.886" endtime="20210719 10:55:24.886"/>
</kw>
<msg timestamp="20210719 10:55:24.887" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:24.827" endtime="20210719 10:55:24.887"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:24.939" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:55:24.888" endtime="20210719 10:55:24.939"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:24.940" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:55:24.939" endtime="20210719 10:55:24.940"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:24.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:24.941" endtime="20210719 10:55:24.942"/>
</kw>
<msg timestamp="20210719 10:55:24.942" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:55:24.887" endtime="20210719 10:55:24.943"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:24.996" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:55:24.945" endtime="20210719 10:55:24.996"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:24.998" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:55:24.996" endtime="20210719 10:55:24.998"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:24.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:24.998" endtime="20210719 10:55:24.999"/>
</kw>
<msg timestamp="20210719 10:55:25.000" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:55:24.943" endtime="20210719 10:55:25.000"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.000" endtime="20210719 10:55:25.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.002" endtime="20210719 10:55:25.003"/>
</kw>
<status status="PASS" starttime="20210719 10:55:24.756" endtime="20210719 10:55:25.003"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.069" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:55:25.006" endtime="20210719 10:55:25.069"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.070" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:25.069" endtime="20210719 10:55:25.070"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.071" endtime="20210719 10:55:25.072"/>
</kw>
<msg timestamp="20210719 10:55:25.072" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:25.005" endtime="20210719 10:55:25.072"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.122" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:55:25.074" endtime="20210719 10:55:25.123"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.124" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:25.123" endtime="20210719 10:55:25.124"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.125" endtime="20210719 10:55:25.125"/>
</kw>
<msg timestamp="20210719 10:55:25.126" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:25.073" endtime="20210719 10:55:25.126"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.187" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:55:25.128" endtime="20210719 10:55:25.187"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.189" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:55:25.188" endtime="20210719 10:55:25.189"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.190" endtime="20210719 10:55:25.191"/>
</kw>
<msg timestamp="20210719 10:55:25.191" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:55:25.126" endtime="20210719 10:55:25.192"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.247" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:55:25.193" endtime="20210719 10:55:25.247"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.249" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:55:25.248" endtime="20210719 10:55:25.249"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.250" endtime="20210719 10:55:25.251"/>
</kw>
<msg timestamp="20210719 10:55:25.252" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:55:25.192" endtime="20210719 10:55:25.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.252" endtime="20210719 10:55:25.253"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.254" endtime="20210719 10:55:25.255"/>
</kw>
<status status="PASS" starttime="20210719 10:55:25.005" endtime="20210719 10:55:25.255"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.310" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:55:25.258" endtime="20210719 10:55:25.310"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.311" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:25.310" endtime="20210719 10:55:25.311"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.312" endtime="20210719 10:55:25.312"/>
</kw>
<msg timestamp="20210719 10:55:25.313" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:55:25.256" endtime="20210719 10:55:25.313"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.403" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:55:25.316" endtime="20210719 10:55:25.403"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.406" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:25.404" endtime="20210719 10:55:25.406"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.406" endtime="20210719 10:55:25.407"/>
</kw>
<msg timestamp="20210719 10:55:25.408" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:55:25.314" endtime="20210719 10:55:25.408"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.460" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:55:25.409" endtime="20210719 10:55:25.460"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.462" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:55:25.461" endtime="20210719 10:55:25.462"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.462" endtime="20210719 10:55:25.463"/>
</kw>
<msg timestamp="20210719 10:55:25.464" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:55:25.408" endtime="20210719 10:55:25.464"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:55:25.523" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:55:25.466" endtime="20210719 10:55:25.523"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:55:25.524" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:55:25.523" endtime="20210719 10:55:25.524"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:55:25.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:55:25.525" endtime="20210719 10:55:25.526"/>
</kw>
<msg timestamp="20210719 10:55:25.526" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:55:25.464" endtime="20210719 10:55:25.526"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.527" endtime="20210719 10:55:25.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:55:25.528" endtime="20210719 10:55:25.529"/>
</kw>
<status status="PASS" starttime="20210719 10:55:25.255" endtime="20210719 10:55:25.529"/>
</iter>
<status status="PASS" starttime="20210719 10:55:02.788" endtime="20210719 10:55:25.529"/>
</for>
<status status="PASS" starttime="20210719 10:54:58.381" endtime="20210719 10:55:25.530"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:55:25.532" endtime="20210719 10:55:25.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:56:25.548" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:55:25.534" endtime="20210719 10:56:25.549"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:25.550" endtime="20210719 10:56:25.552"/>
</kw>
<status status="PASS" starttime="20210719 10:55:25.531" endtime="20210719 10:56:25.554"/>
</kw>
<status status="PASS" starttime="20210719 10:55:25.530" endtime="20210719 10:56:25.555"/>
</kw>
<status status="PASS" starttime="20210719 10:54:58.378" endtime="20210719 10:56:25.556"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:25.566" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:56:25.562" endtime="20210719 10:56:25.567"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:56:25.570" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:56:25.572" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:56:25.568" endtime="20210719 10:56:25.572"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:25.578" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:56:25.574" endtime="20210719 10:56:25.578"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:25.581" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:25.579" endtime="20210719 10:56:25.582"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:26.594" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:56:26.595" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:56:26.597" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:25.583" endtime="20210719 10:56:26.597"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:26.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:26.598" endtime="20210719 10:56:26.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:56:26.610" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:56:26.604" endtime="20210719 10:56:26.610"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:26.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:26.611" endtime="20210719 10:56:26.614"/>
</kw>
<msg timestamp="20210719 10:56:26.617" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:56:25.560" endtime="20210719 10:56:26.617"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:26.751" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:56:26.620" endtime="20210719 10:56:26.752"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:56:26.754" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:56:26.754" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:56:26.752" endtime="20210719 10:56:26.755"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:56:26.757" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:56:26.755" endtime="20210719 10:56:26.758"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:26.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:26.759" endtime="20210719 10:56:26.761"/>
</kw>
<msg timestamp="20210719 10:56:26.762" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:56:26.618" endtime="20210719 10:56:26.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:26.763" endtime="20210719 10:56:26.765"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:26.768" endtime="20210719 10:56:26.770"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:26.879" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:26.774" endtime="20210719 10:56:26.879"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:26.882" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:26.880" endtime="20210719 10:56:26.883"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:26.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:26.884" endtime="20210719 10:56:26.886"/>
</kw>
<msg timestamp="20210719 10:56:26.887" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:26.771" endtime="20210719 10:56:26.887"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:26.984" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:26.890" endtime="20210719 10:56:26.985"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:26.989" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:26.987" endtime="20210719 10:56:26.989"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:26.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:26.990" endtime="20210719 10:56:26.991"/>
</kw>
<msg timestamp="20210719 10:56:26.992" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:26.888" endtime="20210719 10:56:26.992"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:27.099" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:56:26.995" endtime="20210719 10:56:27.099"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:27.103" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:56:27.100" endtime="20210719 10:56:27.103"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:27.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:27.104" endtime="20210719 10:56:27.105"/>
</kw>
<msg timestamp="20210719 10:56:27.106" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:56:26.993" endtime="20210719 10:56:27.107"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:27.209" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:56:27.110" endtime="20210719 10:56:27.209"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:27.212" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:56:27.210" endtime="20210719 10:56:27.212"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:27.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:27.213" endtime="20210719 10:56:27.214"/>
</kw>
<msg timestamp="20210719 10:56:27.215" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:56:27.107" endtime="20210719 10:56:27.215"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:56:27.222" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:56:27.220" endtime="20210719 10:56:27.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:56:27.226" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:56:27.224" endtime="20210719 10:56:27.226"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:56:27.228" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:56:27.227" endtime="20210719 10:56:27.228"/>
</kw>
<status status="PASS" starttime="20210719 10:56:27.218" endtime="20210719 10:56:27.229"/>
</branch>
<status status="PASS" starttime="20210719 10:56:27.217" endtime="20210719 10:56:27.229"/>
</if>
<status status="PASS" starttime="20210719 10:56:27.216" endtime="20210719 10:56:27.229"/>
</branch>
<status status="PASS" starttime="20210719 10:56:27.216" endtime="20210719 10:56:27.230"/>
</if>
<status status="PASS" starttime="20210719 10:56:26.767" endtime="20210719 10:56:27.230"/>
</iter>
<status status="PASS" starttime="20210719 10:56:26.765" endtime="20210719 10:56:27.230"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:27.236" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:27.233" endtime="20210719 10:56:27.237"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:27.241" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:27.238" endtime="20210719 10:56:27.241"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:27.243" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:27.242" endtime="20210719 10:56:27.244"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:28.222" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:28.223" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:20 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:28.224" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:27.245" endtime="20210719 10:56:28.225"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:28.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:28.227" endtime="20210719 10:56:28.232"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:28.232" endtime="20210719 10:56:28.234"/>
</kw>
<status status="PASS" starttime="20210719 10:56:27.231" endtime="20210719 10:56:28.235"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:28.242" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:28.238" endtime="20210719 10:56:28.242"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:28.246" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:28.243" endtime="20210719 10:56:28.246"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:28.249" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:28.247" endtime="20210719 10:56:28.250"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:29.232" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:29.233" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:21 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:29.233" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:28.250" endtime="20210719 10:56:29.234"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:29.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:29.235" endtime="20210719 10:56:29.240"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:29.241" endtime="20210719 10:56:29.243"/>
</kw>
<status status="PASS" starttime="20210719 10:56:28.236" endtime="20210719 10:56:29.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:29.246" endtime="20210719 10:56:29.249"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:29.375" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:29.256" endtime="20210719 10:56:29.375"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:29.378" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:29.376" endtime="20210719 10:56:29.379"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:29.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:29.380" endtime="20210719 10:56:29.381"/>
</kw>
<msg timestamp="20210719 10:56:29.383" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:29.252" endtime="20210719 10:56:29.383"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:29.496" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:29.388" endtime="20210719 10:56:29.497"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:29.501" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:29.498" endtime="20210719 10:56:29.501"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:29.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:29.503" endtime="20210719 10:56:29.505"/>
</kw>
<msg timestamp="20210719 10:56:29.507" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:29.384" endtime="20210719 10:56:29.507"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:29.625" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:56:29.511" endtime="20210719 10:56:29.625"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:29.628" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:56:29.626" endtime="20210719 10:56:29.628"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:29.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:29.629" endtime="20210719 10:56:29.631"/>
</kw>
<msg timestamp="20210719 10:56:29.632" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:56:29.508" endtime="20210719 10:56:29.632"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:29.781" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:56:29.638" endtime="20210719 10:56:29.782"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:29.785" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:56:29.782" endtime="20210719 10:56:29.785"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:29.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:29.786" endtime="20210719 10:56:29.788"/>
</kw>
<msg timestamp="20210719 10:56:29.790" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:56:29.633" endtime="20210719 10:56:29.790"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:29.791" endtime="20210719 10:56:29.795"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:29.795" endtime="20210719 10:56:29.799"/>
</kw>
<status status="PASS" starttime="20210719 10:56:29.251" endtime="20210719 10:56:29.799"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:29.930" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:29.805" endtime="20210719 10:56:29.930"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:29.933" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:29.931" endtime="20210719 10:56:29.933"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:29.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:29.934" endtime="20210719 10:56:29.936"/>
</kw>
<msg timestamp="20210719 10:56:29.937" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:29.801" endtime="20210719 10:56:29.937"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:30.047" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:29.941" endtime="20210719 10:56:30.047"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:30.050" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:30.048" endtime="20210719 10:56:30.050"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:30.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:30.051" endtime="20210719 10:56:30.053"/>
</kw>
<msg timestamp="20210719 10:56:30.054" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:29.938" endtime="20210719 10:56:30.054"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:30.150" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:56:30.057" endtime="20210719 10:56:30.150"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:30.155" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:56:30.152" endtime="20210719 10:56:30.155"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:30.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:30.156" endtime="20210719 10:56:30.157"/>
</kw>
<msg timestamp="20210719 10:56:30.159" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:56:30.055" endtime="20210719 10:56:30.159"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:30.281" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:56:30.163" endtime="20210719 10:56:30.282"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:30.286" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:56:30.283" endtime="20210719 10:56:30.286"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:30.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:30.286" endtime="20210719 10:56:30.288"/>
</kw>
<msg timestamp="20210719 10:56:30.289" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:56:30.160" endtime="20210719 10:56:30.289"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:30.296" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:30.294" endtime="20210719 10:56:30.297"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:30.300" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:30.297" endtime="20210719 10:56:30.300"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:30.302" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:30.300" endtime="20210719 10:56:30.303"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:31.291" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:31.292" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:23 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:31.292" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:30.304" endtime="20210719 10:56:31.293"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:31.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:31.295" endtime="20210719 10:56:31.300"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:31.300" endtime="20210719 10:56:31.303"/>
</kw>
<status status="PASS" starttime="20210719 10:56:30.292" endtime="20210719 10:56:31.304"/>
</kw>
<status status="PASS" starttime="20210719 10:56:30.290" endtime="20210719 10:56:31.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:31.315" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:31.311" endtime="20210719 10:56:31.315"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:31.318" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:31.315" endtime="20210719 10:56:31.319"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:31.323" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:31.321" endtime="20210719 10:56:31.324"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:32.330" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:32.330" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:24 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:32.331" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:31.324" endtime="20210719 10:56:32.331"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:32.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:32.333" endtime="20210719 10:56:32.338"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:32.339" endtime="20210719 10:56:32.341"/>
</kw>
<status status="PASS" starttime="20210719 10:56:31.309" endtime="20210719 10:56:32.343"/>
</kw>
<status status="PASS" starttime="20210719 10:56:31.307" endtime="20210719 10:56:32.344"/>
</kw>
<status status="PASS" starttime="20210719 10:56:29.800" endtime="20210719 10:56:32.345"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:32.484" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:32.350" endtime="20210719 10:56:32.484"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:32.489" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:32.485" endtime="20210719 10:56:32.489"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:32.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:32.490" endtime="20210719 10:56:32.491"/>
</kw>
<msg timestamp="20210719 10:56:32.492" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:32.348" endtime="20210719 10:56:32.492"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:32.617" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:32.495" endtime="20210719 10:56:32.617"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:32.621" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:32.619" endtime="20210719 10:56:32.621"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:32.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:32.622" endtime="20210719 10:56:32.624"/>
</kw>
<msg timestamp="20210719 10:56:32.625" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:32.493" endtime="20210719 10:56:32.625"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:32.769" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:56:32.629" endtime="20210719 10:56:32.770"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:32.773" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:56:32.770" endtime="20210719 10:56:32.774"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:32.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:32.775" endtime="20210719 10:56:32.777"/>
</kw>
<msg timestamp="20210719 10:56:32.778" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:56:32.626" endtime="20210719 10:56:32.778"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:32.908" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:56:32.781" endtime="20210719 10:56:32.908"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:32.911" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:56:32.909" endtime="20210719 10:56:32.911"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:32.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:32.913" endtime="20210719 10:56:32.914"/>
</kw>
<msg timestamp="20210719 10:56:32.915" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:56:32.779" endtime="20210719 10:56:32.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:32.922" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:32.920" endtime="20210719 10:56:32.923"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:32.926" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:32.924" endtime="20210719 10:56:32.926"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:32.928" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:32.927" endtime="20210719 10:56:32.930"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:33.951" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:33.951" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:25 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:33.952" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:32.931" endtime="20210719 10:56:33.952"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:33.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:33.953" endtime="20210719 10:56:33.960"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:33.961" endtime="20210719 10:56:33.964"/>
</kw>
<status status="PASS" starttime="20210719 10:56:32.918" endtime="20210719 10:56:33.966"/>
</kw>
<status status="PASS" starttime="20210719 10:56:32.916" endtime="20210719 10:56:33.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:33.977" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:33.973" endtime="20210719 10:56:33.977"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:33.983" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:33.979" endtime="20210719 10:56:33.983"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:33.986" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:33.984" endtime="20210719 10:56:33.987"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:35.082" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:35.082" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:26 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:35.083" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:33.988" endtime="20210719 10:56:35.083"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:35.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:35.086" endtime="20210719 10:56:35.092"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:35.093" endtime="20210719 10:56:35.096"/>
</kw>
<status status="PASS" starttime="20210719 10:56:33.971" endtime="20210719 10:56:35.097"/>
</kw>
<status status="PASS" starttime="20210719 10:56:33.968" endtime="20210719 10:56:35.098"/>
</kw>
<status status="PASS" starttime="20210719 10:56:32.346" endtime="20210719 10:56:35.098"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:35.250" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:35.106" endtime="20210719 10:56:35.250"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:35.254" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:35.251" endtime="20210719 10:56:35.255"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:35.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:35.257" endtime="20210719 10:56:35.260"/>
</kw>
<msg timestamp="20210719 10:56:35.261" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:35.101" endtime="20210719 10:56:35.261"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:35.369" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:35.265" endtime="20210719 10:56:35.369"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:35.373" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:35.370" endtime="20210719 10:56:35.373"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:35.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:35.374" endtime="20210719 10:56:35.377"/>
</kw>
<msg timestamp="20210719 10:56:35.378" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:35.262" endtime="20210719 10:56:35.379"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:35.485" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:56:35.382" endtime="20210719 10:56:35.485"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:35.487" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:56:35.486" endtime="20210719 10:56:35.488"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:35.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:35.488" endtime="20210719 10:56:35.490"/>
</kw>
<msg timestamp="20210719 10:56:35.492" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:56:35.379" endtime="20210719 10:56:35.492"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:35.585" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:56:35.496" endtime="20210719 10:56:35.585"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:35.588" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:56:35.587" endtime="20210719 10:56:35.589"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:35.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:35.589" endtime="20210719 10:56:35.591"/>
</kw>
<msg timestamp="20210719 10:56:35.592" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:56:35.493" endtime="20210719 10:56:35.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:35.602" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:35.600" endtime="20210719 10:56:35.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:35.605" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:35.603" endtime="20210719 10:56:35.606"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:35.608" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:35.606" endtime="20210719 10:56:35.609"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:36.628" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:36.628" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:28 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:36.629" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:35.610" endtime="20210719 10:56:36.629"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:36.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:36.630" endtime="20210719 10:56:36.640"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:36.641" endtime="20210719 10:56:36.643"/>
</kw>
<status status="PASS" starttime="20210719 10:56:35.596" endtime="20210719 10:56:36.644"/>
</kw>
<status status="PASS" starttime="20210719 10:56:35.592" endtime="20210719 10:56:36.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:36.655" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:36.652" endtime="20210719 10:56:36.655"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:36.657" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:36.655" endtime="20210719 10:56:36.658"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:36.660" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:36.658" endtime="20210719 10:56:36.661"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:37.647" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:37.648" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:29 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:37.648" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:36.662" endtime="20210719 10:56:37.648"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:37.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:37.649" endtime="20210719 10:56:37.660"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:37.661" endtime="20210719 10:56:37.663"/>
</kw>
<status status="PASS" starttime="20210719 10:56:36.649" endtime="20210719 10:56:37.664"/>
</kw>
<status status="PASS" starttime="20210719 10:56:36.646" endtime="20210719 10:56:37.665"/>
</kw>
<status status="PASS" starttime="20210719 10:56:35.099" endtime="20210719 10:56:37.665"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:37.815" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:37.671" endtime="20210719 10:56:37.815"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:37.818" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:37.816" endtime="20210719 10:56:37.818"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:37.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:37.819" endtime="20210719 10:56:37.820"/>
</kw>
<msg timestamp="20210719 10:56:37.822" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:37.668" endtime="20210719 10:56:37.822"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:37.933" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:37.826" endtime="20210719 10:56:37.933"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:37.936" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:37.934" endtime="20210719 10:56:37.937"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:37.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:37.938" endtime="20210719 10:56:37.940"/>
</kw>
<msg timestamp="20210719 10:56:37.941" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:37.822" endtime="20210719 10:56:37.941"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:38.070" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:56:37.946" endtime="20210719 10:56:38.071"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:38.074" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:56:38.072" endtime="20210719 10:56:38.074"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:38.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:38.075" endtime="20210719 10:56:38.076"/>
</kw>
<msg timestamp="20210719 10:56:38.078" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:56:37.942" endtime="20210719 10:56:38.079"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:38.196" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:56:38.085" endtime="20210719 10:56:38.196"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:38.199" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:56:38.197" endtime="20210719 10:56:38.199"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:38.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:38.200" endtime="20210719 10:56:38.203"/>
</kw>
<msg timestamp="20210719 10:56:38.205" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:56:38.080" endtime="20210719 10:56:38.205"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:38.214" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:38.211" endtime="20210719 10:56:38.214"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:38.220" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:38.215" endtime="20210719 10:56:38.221"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:38.223" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:38.221" endtime="20210719 10:56:38.225"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:39.828" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:39.829" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:39.829" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:38.226" endtime="20210719 10:56:39.830"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:39.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:39.831" endtime="20210719 10:56:39.838"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:39.838" endtime="20210719 10:56:39.840"/>
</kw>
<status status="PASS" starttime="20210719 10:56:38.209" endtime="20210719 10:56:39.841"/>
</kw>
<status status="PASS" starttime="20210719 10:56:38.206" endtime="20210719 10:56:39.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:39.853" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:39.848" endtime="20210719 10:56:39.854"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:39.859" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:39.855" endtime="20210719 10:56:39.859"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:39.861" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:39.860" endtime="20210719 10:56:39.863"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:40.869" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:40.869" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:32 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:40.870" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:39.864" endtime="20210719 10:56:40.871"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:40.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:40.872" endtime="20210719 10:56:40.879"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:40.879" endtime="20210719 10:56:40.881"/>
</kw>
<status status="PASS" starttime="20210719 10:56:39.845" endtime="20210719 10:56:40.882"/>
</kw>
<status status="PASS" starttime="20210719 10:56:39.843" endtime="20210719 10:56:40.883"/>
</kw>
<status status="PASS" starttime="20210719 10:56:37.667" endtime="20210719 10:56:40.883"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:41.002" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:40.888" endtime="20210719 10:56:41.002"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:41.006" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:41.003" endtime="20210719 10:56:41.006"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:41.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:41.008" endtime="20210719 10:56:41.011"/>
</kw>
<msg timestamp="20210719 10:56:41.012" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:40.885" endtime="20210719 10:56:41.012"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:41.127" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:41.016" endtime="20210719 10:56:41.129"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:41.132" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:41.129" endtime="20210719 10:56:41.132"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:41.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:41.133" endtime="20210719 10:56:41.135"/>
</kw>
<msg timestamp="20210719 10:56:41.137" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:41.014" endtime="20210719 10:56:41.137"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:41.260" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:56:41.140" endtime="20210719 10:56:41.260"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:41.264" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:56:41.261" endtime="20210719 10:56:41.264"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:41.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:41.266" endtime="20210719 10:56:41.268"/>
</kw>
<msg timestamp="20210719 10:56:41.270" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:56:41.137" endtime="20210719 10:56:41.270"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:41.377" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:56:41.274" endtime="20210719 10:56:41.377"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:41.380" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:56:41.378" endtime="20210719 10:56:41.380"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:41.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:41.382" endtime="20210719 10:56:41.384"/>
</kw>
<msg timestamp="20210719 10:56:41.385" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:56:41.270" endtime="20210719 10:56:41.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:41.395" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:41.391" endtime="20210719 10:56:41.395"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:41.400" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:41.396" endtime="20210719 10:56:41.400"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:41.404" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:41.401" endtime="20210719 10:56:41.405"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:42.429" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:42.430" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:34 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:42.431" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:41.406" endtime="20210719 10:56:42.431"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:42.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:42.432" endtime="20210719 10:56:42.439"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:42.440" endtime="20210719 10:56:42.442"/>
</kw>
<status status="PASS" starttime="20210719 10:56:41.389" endtime="20210719 10:56:42.443"/>
</kw>
<status status="PASS" starttime="20210719 10:56:41.387" endtime="20210719 10:56:42.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:42.453" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:42.449" endtime="20210719 10:56:42.453"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:42.459" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:42.455" endtime="20210719 10:56:42.460"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:42.463" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:42.461" endtime="20210719 10:56:42.465"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:43.564" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:43.564" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:35 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:43.565" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:42.465" endtime="20210719 10:56:43.565"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:43.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:43.566" endtime="20210719 10:56:43.572"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:43.572" endtime="20210719 10:56:43.575"/>
</kw>
<status status="PASS" starttime="20210719 10:56:42.447" endtime="20210719 10:56:43.576"/>
</kw>
<status status="PASS" starttime="20210719 10:56:42.445" endtime="20210719 10:56:43.577"/>
</kw>
<status status="PASS" starttime="20210719 10:56:40.884" endtime="20210719 10:56:43.578"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:43.757" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:43.584" endtime="20210719 10:56:43.757"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:43.760" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:43.758" endtime="20210719 10:56:43.760"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:43.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:43.761" endtime="20210719 10:56:43.762"/>
</kw>
<msg timestamp="20210719 10:56:43.764" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:43.581" endtime="20210719 10:56:43.764"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:43.883" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:43.770" endtime="20210719 10:56:43.883"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:43.886" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:43.884" endtime="20210719 10:56:43.886"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:43.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:43.887" endtime="20210719 10:56:43.889"/>
</kw>
<msg timestamp="20210719 10:56:43.890" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:43.766" endtime="20210719 10:56:43.890"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:43.999" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:56:43.893" endtime="20210719 10:56:44.000"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:44.005" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:56:44.001" endtime="20210719 10:56:44.005"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:44.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:44.008" endtime="20210719 10:56:44.010"/>
</kw>
<msg timestamp="20210719 10:56:44.011" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:56:43.891" endtime="20210719 10:56:44.012"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:44.120" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:56:44.015" endtime="20210719 10:56:44.120"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:44.124" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:56:44.122" endtime="20210719 10:56:44.124"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:44.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:44.125" endtime="20210719 10:56:44.127"/>
</kw>
<msg timestamp="20210719 10:56:44.129" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:56:44.012" endtime="20210719 10:56:44.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:44.142" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:44.137" endtime="20210719 10:56:44.142"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:44.147" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:44.144" endtime="20210719 10:56:44.147"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:44.150" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:44.148" endtime="20210719 10:56:44.151"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:45.144" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:45.145" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:36 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:45.146" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:44.151" endtime="20210719 10:56:45.146"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:45.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:45.147" endtime="20210719 10:56:45.153"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:45.154" endtime="20210719 10:56:45.157"/>
</kw>
<status status="PASS" starttime="20210719 10:56:44.134" endtime="20210719 10:56:45.158"/>
</kw>
<status status="PASS" starttime="20210719 10:56:44.131" endtime="20210719 10:56:45.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:45.172" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:45.168" endtime="20210719 10:56:45.172"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:45.178" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:45.174" endtime="20210719 10:56:45.178"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:45.183" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:45.180" endtime="20210719 10:56:45.185"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:46.163" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:46.164" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:37 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:46.164" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:45.186" endtime="20210719 10:56:46.164"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:46.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:46.166" endtime="20210719 10:56:46.171"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:46.172" endtime="20210719 10:56:46.174"/>
</kw>
<status status="PASS" starttime="20210719 10:56:45.166" endtime="20210719 10:56:46.175"/>
</kw>
<status status="PASS" starttime="20210719 10:56:45.160" endtime="20210719 10:56:46.176"/>
</kw>
<status status="PASS" starttime="20210719 10:56:43.579" endtime="20210719 10:56:46.177"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:46.288" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:56:46.184" endtime="20210719 10:56:46.288"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:46.292" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:46.289" endtime="20210719 10:56:46.292"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:46.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:46.293" endtime="20210719 10:56:46.294"/>
</kw>
<msg timestamp="20210719 10:56:46.295" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:56:46.180" endtime="20210719 10:56:46.296"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:46.411" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:56:46.299" endtime="20210719 10:56:46.411"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:46.412" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:46.411" endtime="20210719 10:56:46.412"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:46.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:46.413" endtime="20210719 10:56:46.413"/>
</kw>
<msg timestamp="20210719 10:56:46.414" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:56:46.296" endtime="20210719 10:56:46.414"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:46.465" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:56:46.416" endtime="20210719 10:56:46.466"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:46.467" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:56:46.466" endtime="20210719 10:56:46.467"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:46.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:46.467" endtime="20210719 10:56:46.468"/>
</kw>
<msg timestamp="20210719 10:56:46.468" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:56:46.414" endtime="20210719 10:56:46.468"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:46.524" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:56:46.471" endtime="20210719 10:56:46.524"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:46.525" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:56:46.524" endtime="20210719 10:56:46.525"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:46.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:46.526" endtime="20210719 10:56:46.527"/>
</kw>
<msg timestamp="20210719 10:56:46.527" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:56:46.469" endtime="20210719 10:56:46.527"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:46.531" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:46.530" endtime="20210719 10:56:46.531"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:46.533" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:46.532" endtime="20210719 10:56:46.533"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:46.534" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:46.534" endtime="20210719 10:56:46.535"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:47.483" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:47.483" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:39 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:47.484" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:46.536" endtime="20210719 10:56:47.484"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:47.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:47.485" endtime="20210719 10:56:47.491"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:47.492" endtime="20210719 10:56:47.496"/>
</kw>
<status status="PASS" starttime="20210719 10:56:46.529" endtime="20210719 10:56:47.497"/>
</kw>
<status status="PASS" starttime="20210719 10:56:46.528" endtime="20210719 10:56:47.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:47.507" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:56:47.504" endtime="20210719 10:56:47.507"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:56:47.512" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:56:47.509" endtime="20210719 10:56:47.512"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:56:47.515" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:56:47.513" endtime="20210719 10:56:47.516"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:56:48.502" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:56:48.503" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:24:40 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:56:48.504" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:56:47.517" endtime="20210719 10:56:48.504"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:56:48.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:56:48.505" endtime="20210719 10:56:48.511"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:48.511" endtime="20210719 10:56:48.515"/>
</kw>
<status status="PASS" starttime="20210719 10:56:47.502" endtime="20210719 10:56:48.516"/>
</kw>
<status status="PASS" starttime="20210719 10:56:47.499" endtime="20210719 10:56:48.517"/>
</kw>
<status status="PASS" starttime="20210719 10:56:46.178" endtime="20210719 10:56:48.518"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:48.633" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:56:48.523" endtime="20210719 10:56:48.634"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:48.638" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:48.635" endtime="20210719 10:56:48.639"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:48.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:48.643" endtime="20210719 10:56:48.646"/>
</kw>
<msg timestamp="20210719 10:56:48.648" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:48.520" endtime="20210719 10:56:48.648"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:48.761" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:56:48.654" endtime="20210719 10:56:48.761"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:48.764" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:48.762" endtime="20210719 10:56:48.764"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:48.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:48.765" endtime="20210719 10:56:48.767"/>
</kw>
<msg timestamp="20210719 10:56:48.768" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:48.649" endtime="20210719 10:56:48.768"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:48.900" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:56:48.773" endtime="20210719 10:56:48.900"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:48.903" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:56:48.901" endtime="20210719 10:56:48.903"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:48.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:48.905" endtime="20210719 10:56:48.907"/>
</kw>
<msg timestamp="20210719 10:56:48.910" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:56:48.770" endtime="20210719 10:56:48.910"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.019" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:56:48.914" endtime="20210719 10:56:49.019"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.022" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:56:49.020" endtime="20210719 10:56:49.022"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.023" endtime="20210719 10:56:49.026"/>
</kw>
<msg timestamp="20210719 10:56:49.026" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:56:48.911" endtime="20210719 10:56:49.027"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.028" endtime="20210719 10:56:49.030"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.031" endtime="20210719 10:56:49.033"/>
</kw>
<status status="PASS" starttime="20210719 10:56:48.519" endtime="20210719 10:56:49.034"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.137" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:56:49.040" endtime="20210719 10:56:49.137"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.139" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:49.138" endtime="20210719 10:56:49.140"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.140" endtime="20210719 10:56:49.142"/>
</kw>
<msg timestamp="20210719 10:56:49.144" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:49.037" endtime="20210719 10:56:49.144"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.249" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:56:49.149" endtime="20210719 10:56:49.250"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.253" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:49.251" endtime="20210719 10:56:49.253"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.254" endtime="20210719 10:56:49.256"/>
</kw>
<msg timestamp="20210719 10:56:49.257" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:49.145" endtime="20210719 10:56:49.257"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.363" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:56:49.260" endtime="20210719 10:56:49.363"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.368" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:56:49.365" endtime="20210719 10:56:49.368"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.369" endtime="20210719 10:56:49.370"/>
</kw>
<msg timestamp="20210719 10:56:49.372" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:56:49.258" endtime="20210719 10:56:49.372"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.482" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:56:49.375" endtime="20210719 10:56:49.482"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.486" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:56:49.483" endtime="20210719 10:56:49.487"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.487" endtime="20210719 10:56:49.489"/>
</kw>
<msg timestamp="20210719 10:56:49.490" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:56:49.373" endtime="20210719 10:56:49.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.491" endtime="20210719 10:56:49.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.493" endtime="20210719 10:56:49.495"/>
</kw>
<status status="PASS" starttime="20210719 10:56:49.035" endtime="20210719 10:56:49.495"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.596" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:56:49.500" endtime="20210719 10:56:49.596"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.599" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:49.597" endtime="20210719 10:56:49.599"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.600" endtime="20210719 10:56:49.601"/>
</kw>
<msg timestamp="20210719 10:56:49.603" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:56:49.497" endtime="20210719 10:56:49.603"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.700" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:56:49.608" endtime="20210719 10:56:49.700"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.704" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:49.701" endtime="20210719 10:56:49.704"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.705" endtime="20210719 10:56:49.707"/>
</kw>
<msg timestamp="20210719 10:56:49.709" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:56:49.604" endtime="20210719 10:56:49.709"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.772" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:56:49.712" endtime="20210719 10:56:49.772"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.773" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:56:49.772" endtime="20210719 10:56:49.773"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.773" endtime="20210719 10:56:49.774"/>
</kw>
<msg timestamp="20210719 10:56:49.775" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:56:49.710" endtime="20210719 10:56:49.775"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:56:49.834" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:56:49.776" endtime="20210719 10:56:49.834"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:56:49.835" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:56:49.835" endtime="20210719 10:56:49.836"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:56:49.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:56:49.836" endtime="20210719 10:56:49.838"/>
</kw>
<msg timestamp="20210719 10:56:49.838" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:56:49.775" endtime="20210719 10:56:49.838"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.838" endtime="20210719 10:56:49.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:56:49.840" endtime="20210719 10:56:49.843"/>
</kw>
<status status="PASS" starttime="20210719 10:56:49.496" endtime="20210719 10:56:49.844"/>
</iter>
<status status="PASS" starttime="20210719 10:56:29.249" endtime="20210719 10:56:49.844"/>
</for>
<status status="PASS" starttime="20210719 10:56:25.558" endtime="20210719 10:56:49.845"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:56:49.848" endtime="20210719 10:56:49.849"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:57:49.858" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:56:49.849" endtime="20210719 10:57:49.859"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:49.860" endtime="20210719 10:57:49.862"/>
</kw>
<status status="PASS" starttime="20210719 10:56:49.847" endtime="20210719 10:57:49.863"/>
</kw>
<status status="PASS" starttime="20210719 10:56:49.846" endtime="20210719 10:57:49.864"/>
</kw>
<status status="PASS" starttime="20210719 10:56:25.556" endtime="20210719 10:57:49.865"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="setTwoSetOfSensorTemperatureForRack" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<arg>${sensor_point_cooling_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:49.876" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9'}</msg>
<status status="PASS" starttime="20210719 10:57:49.872" endtime="20210719 10:57:49.877"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${file}</var>
<arg>./Inputs/GraphQL/getRackPoints.gql</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210719 10:57:49.880" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql"&gt;C:\Users\grees\PycharmProjects\AuQA\Inputs\GraphQL\getRackPoints.gql&lt;/a&gt;'.</msg>
<msg timestamp="20210719 10:57:49.881" level="INFO">${file} =  query rackSensorPoints {
            site {
              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {
                oid name
               racks: children(selecto...</msg>
<status status="PASS" starttime="20210719 10:57:49.878" endtime="20210719 10:57:49.881"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:49.885" level="INFO">${body} = {'query': '  query rackSensorPoints {\r\n            site {\r\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\r\n                oid name\r\n               rac...</msg>
<status status="PASS" starttime="20210719 10:57:49.883" endtime="20210719 10:57:49.885"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:49.888" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:49.886" endtime="20210719 10:57:49.891"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:50.900" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'EekHfQugKTtGuy3yWhKt6WN9', 'Content-Length': '524'} 
 body=b'{"query": "  query rackSensorPoints {\\r\\n            site {\\r\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\r\\n                oid name\\r\\n               racks: children(selector:{type: Rack},){\\r\\n\\r\\n                  oid\\r\\n                  displayName\\r\\n              points: children{\\r\\n                oid\\r\\n                name\\r\\n                  type\\r\\n              }\\r\\n\\r\\n\\r\\n\\r\\n                }\\r\\n\\r\\n                }\\r\\n              }\\r\\n            }"}' 
 </msg>
<msg timestamp="20210719 10:57:50.900" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:42 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '359', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot"},{"oid":12018,"name":"Rack Top","type":"CTop"}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot"},{"oid":12034,"name":"Rack Top","type":"CTop"}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot"},{"oid":12050,"name":"Rack Top","type":"CTop"}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot"},{"oid":12066,"name":"Rack Top","type":"CTop"}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot"},{"oid":12082,"name":"Rack Top","type":"CTop"}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot"},{"oid":12098,"name":"Rack Top","type":"CTop"}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot"},{"oid":27372,"name":"Rack Top","type":"CTop"}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot"},{"oid":26279,"name":"Rack Top","type":"CTop"}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM"},{"oid":21856,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM"},{"oid":21875,"name":"Internal Thermistor","type":"ZNT"}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM"},{"oid":21894,"name":"Internal Thermistor","type":"ZNT"}]}]}]}}} 
 </msg>
<msg timestamp="20210719 10:57:50.901" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:49.892" endtime="20210719 10:57:50.901"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:50.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:50.902" endtime="20210719 10:57:50.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:57:50.916" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:57:50.910" endtime="20210719 10:57:50.916"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:50.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:50.918" endtime="20210719 10:57:50.919"/>
</kw>
<msg timestamp="20210719 10:57:50.921" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name'...</msg>
<status status="PASS" starttime="20210719 10:57:49.870" endtime="20210719 10:57:50.921"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:51.073" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot'}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop'}]}, {'oid': 1291, 'displayName': 'CAT...</msg>
<status status="PASS" starttime="20210719 10:57:50.927" endtime="20210719 10:57:51.074"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210719 10:57:51.076" level="INFO">Length is 11</msg>
<msg timestamp="20210719 10:57:51.077" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210719 10:57:51.075" endtime="20210719 10:57:51.077"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210719 10:57:51.082" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:57:51.079" endtime="20210719 10:57:51.082"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:51.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:51.083" endtime="20210719 10:57:51.085"/>
</kw>
<msg timestamp="20210719 10:57:51.087" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210719 10:57:50.922" endtime="20210719 10:57:51.087"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:51.088" endtime="20210719 10:57:51.090"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:51.093" endtime="20210719 10:57:51.096"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:51.247" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:57:51.102" endtime="20210719 10:57:51.247"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:51.250" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:51.247" endtime="20210719 10:57:51.250"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:51.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:51.252" endtime="20210719 10:57:51.254"/>
</kw>
<msg timestamp="20210719 10:57:51.255" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:51.097" endtime="20210719 10:57:51.256"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:51.308" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:57:51.259" endtime="20210719 10:57:51.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:51.309" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:51.309" endtime="20210719 10:57:51.310"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:51.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:51.310" endtime="20210719 10:57:51.312"/>
</kw>
<msg timestamp="20210719 10:57:51.313" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:51.256" endtime="20210719 10:57:51.313"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:51.433" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:57:51.316" endtime="20210719 10:57:51.433"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:51.437" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:57:51.434" endtime="20210719 10:57:51.438"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:51.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:51.439" endtime="20210719 10:57:51.442"/>
</kw>
<msg timestamp="20210719 10:57:51.445" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:57:51.313" endtime="20210719 10:57:51.445"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:51.563" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:57:51.448" endtime="20210719 10:57:51.564"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:51.567" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:57:51.565" endtime="20210719 10:57:51.567"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:51.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:51.568" endtime="20210719 10:57:51.569"/>
</kw>
<msg timestamp="20210719 10:57:51.570" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:57:51.445" endtime="20210719 10:57:51.571"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:57:51.578" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210719 10:57:51.576" endtime="20210719 10:57:51.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210719 10:57:51.581" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210719 10:57:51.579" endtime="20210719 10:57:51.581"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210719 10:57:51.583" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210719 10:57:51.582" endtime="20210719 10:57:51.583"/>
</kw>
<status status="PASS" starttime="20210719 10:57:51.575" endtime="20210719 10:57:51.583"/>
</branch>
<status status="PASS" starttime="20210719 10:57:51.574" endtime="20210719 10:57:51.584"/>
</if>
<status status="PASS" starttime="20210719 10:57:51.573" endtime="20210719 10:57:51.584"/>
</branch>
<status status="PASS" starttime="20210719 10:57:51.572" endtime="20210719 10:57:51.585"/>
</if>
<status status="PASS" starttime="20210719 10:57:51.092" endtime="20210719 10:57:51.585"/>
</iter>
<status status="PASS" starttime="20210719 10:57:51.090" endtime="20210719 10:57:51.585"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:51.591" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:51.588" endtime="20210719 10:57:51.591"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:51.595" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:51.592" endtime="20210719 10:57:51.595"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:51.597" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:51.596" endtime="20210719 10:57:51.598"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:52.585" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:52.585" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:52.586" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:51.599" endtime="20210719 10:57:52.586"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:52.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:52.587" endtime="20210719 10:57:52.592"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:52.594" endtime="20210719 10:57:52.597"/>
</kw>
<status status="PASS" starttime="20210719 10:57:51.585" endtime="20210719 10:57:52.598"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${tempH}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:52.606" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:52.603" endtime="20210719 10:57:52.606"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:52.609" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:52.607" endtime="20210719 10:57:52.610"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:52.613" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:52.610" endtime="20210719 10:57:52.615"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:53.613" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:53.613" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:53.614" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:52.617" endtime="20210719 10:57:53.614"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:53.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:53.616" endtime="20210719 10:57:53.624"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:53.624" endtime="20210719 10:57:53.627"/>
</kw>
<status status="PASS" starttime="20210719 10:57:52.600" endtime="20210719 10:57:53.628"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for other Sensors-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:53.629" endtime="20210719 10:57:53.631"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:53.759" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:57:53.643" endtime="20210719 10:57:53.761"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:53.763" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:53.761" endtime="20210719 10:57:53.763"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:53.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:53.765" endtime="20210719 10:57:53.767"/>
</kw>
<msg timestamp="20210719 10:57:53.768" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:53.637" endtime="20210719 10:57:53.768"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:53.880" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:57:53.772" endtime="20210719 10:57:53.880"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:53.884" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:53.882" endtime="20210719 10:57:53.884"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:53.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:53.885" endtime="20210719 10:57:53.887"/>
</kw>
<msg timestamp="20210719 10:57:53.888" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:53.769" endtime="20210719 10:57:53.889"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.002" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210719 10:57:53.893" endtime="20210719 10:57:54.002"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.005" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210719 10:57:54.002" endtime="20210719 10:57:54.005"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.006" endtime="20210719 10:57:54.007"/>
</kw>
<msg timestamp="20210719 10:57:54.010" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210719 10:57:53.890" endtime="20210719 10:57:54.010"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.116" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210719 10:57:54.012" endtime="20210719 10:57:54.116"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.119" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210719 10:57:54.117" endtime="20210719 10:57:54.119"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.119" endtime="20210719 10:57:54.121"/>
</kw>
<msg timestamp="20210719 10:57:54.122" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210719 10:57:54.011" endtime="20210719 10:57:54.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:57:54.122" endtime="20210719 10:57:54.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:57:54.128" endtime="20210719 10:57:54.132"/>
</kw>
<status status="PASS" starttime="20210719 10:57:53.634" endtime="20210719 10:57:54.133"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.227" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:57:54.137" endtime="20210719 10:57:54.227"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.230" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:54.228" endtime="20210719 10:57:54.231"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.232" endtime="20210719 10:57:54.234"/>
</kw>
<msg timestamp="20210719 10:57:54.235" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:54.135" endtime="20210719 10:57:54.235"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.339" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:57:54.239" endtime="20210719 10:57:54.340"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.344" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:54.341" endtime="20210719 10:57:54.344"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.346" endtime="20210719 10:57:54.348"/>
</kw>
<msg timestamp="20210719 10:57:54.351" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:54.236" endtime="20210719 10:57:54.351"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.461" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210719 10:57:54.357" endtime="20210719 10:57:54.461"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.466" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210719 10:57:54.463" endtime="20210719 10:57:54.467"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.467" endtime="20210719 10:57:54.470"/>
</kw>
<msg timestamp="20210719 10:57:54.470" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210719 10:57:54.353" endtime="20210719 10:57:54.470"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:54.651" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210719 10:57:54.474" endtime="20210719 10:57:54.651"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:54.656" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210719 10:57:54.653" endtime="20210719 10:57:54.656"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:54.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:54.658" endtime="20210719 10:57:54.659"/>
</kw>
<msg timestamp="20210719 10:57:54.660" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210719 10:57:54.472" endtime="20210719 10:57:54.661"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:54.668" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:54.666" endtime="20210719 10:57:54.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:54.672" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:54.669" endtime="20210719 10:57:54.672"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:54.676" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:54.673" endtime="20210719 10:57:54.676"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:55.663" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:55.664" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:47 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:55.665" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:54.676" endtime="20210719 10:57:55.665"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:55.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:55.666" endtime="20210719 10:57:55.671"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:55.672" endtime="20210719 10:57:55.674"/>
</kw>
<status status="PASS" starttime="20210719 10:57:54.663" endtime="20210719 10:57:55.675"/>
</kw>
<status status="PASS" starttime="20210719 10:57:54.661" endtime="20210719 10:57:55.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:55.684" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:55.682" endtime="20210719 10:57:55.684"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:55.689" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:55.686" endtime="20210719 10:57:55.689"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:55.692" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:55.690" endtime="20210719 10:57:55.694"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:56.681" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:56.682" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:56.683" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:55.695" endtime="20210719 10:57:56.683"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:56.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:56.685" endtime="20210719 10:57:56.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:56.691" endtime="20210719 10:57:56.693"/>
</kw>
<status status="PASS" starttime="20210719 10:57:55.680" endtime="20210719 10:57:56.693"/>
</kw>
<status status="PASS" starttime="20210719 10:57:55.677" endtime="20210719 10:57:56.694"/>
</kw>
<status status="PASS" starttime="20210719 10:57:54.134" endtime="20210719 10:57:56.695"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:56.804" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:57:56.701" endtime="20210719 10:57:56.805"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:56.808" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:56.805" endtime="20210719 10:57:56.808"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:56.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:56.808" endtime="20210719 10:57:56.810"/>
</kw>
<msg timestamp="20210719 10:57:56.811" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:56.698" endtime="20210719 10:57:56.811"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:56.919" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:57:56.814" endtime="20210719 10:57:56.919"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:56.923" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:56.921" endtime="20210719 10:57:56.924"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:56.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:56.924" endtime="20210719 10:57:56.926"/>
</kw>
<msg timestamp="20210719 10:57:56.928" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:56.812" endtime="20210719 10:57:56.928"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:57.042" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210719 10:57:56.935" endtime="20210719 10:57:57.042"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:57.045" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210719 10:57:57.043" endtime="20210719 10:57:57.045"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:57.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:57.046" endtime="20210719 10:57:57.048"/>
</kw>
<msg timestamp="20210719 10:57:57.049" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210719 10:57:56.930" endtime="20210719 10:57:57.049"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:57.148" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210719 10:57:57.057" endtime="20210719 10:57:57.148"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:57.151" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210719 10:57:57.149" endtime="20210719 10:57:57.151"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:57.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:57.152" endtime="20210719 10:57:57.153"/>
</kw>
<msg timestamp="20210719 10:57:57.154" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210719 10:57:57.050" endtime="20210719 10:57:57.154"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:57.164" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:57.162" endtime="20210719 10:57:57.164"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:57.167" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:57.165" endtime="20210719 10:57:57.167"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:57.169" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:57.168" endtime="20210719 10:57:57.170"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:58.201" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:58.201" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:49 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:58.202" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:57.172" endtime="20210719 10:57:58.202"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:58.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:58.203" endtime="20210719 10:57:58.208"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:58.208" endtime="20210719 10:57:58.210"/>
</kw>
<status status="PASS" starttime="20210719 10:57:57.158" endtime="20210719 10:57:58.211"/>
</kw>
<status status="PASS" starttime="20210719 10:57:57.155" endtime="20210719 10:57:58.212"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:58.219" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:58.217" endtime="20210719 10:57:58.219"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:58.222" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:58.220" endtime="20210719 10:57:58.222"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:58.224" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:58.223" endtime="20210719 10:57:58.225"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:57:59.202" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:57:59.203" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:50 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:57:59.205" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:58.226" endtime="20210719 10:57:59.205"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:57:59.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:57:59.206" endtime="20210719 10:57:59.212"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:57:59.213" endtime="20210719 10:57:59.216"/>
</kw>
<status status="PASS" starttime="20210719 10:57:58.215" endtime="20210719 10:57:59.217"/>
</kw>
<status status="PASS" starttime="20210719 10:57:58.213" endtime="20210719 10:57:59.218"/>
</kw>
<status status="PASS" starttime="20210719 10:57:56.697" endtime="20210719 10:57:59.218"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:59.324" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:57:59.223" endtime="20210719 10:57:59.324"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:59.326" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:59.325" endtime="20210719 10:57:59.327"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:59.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:59.327" endtime="20210719 10:57:59.329"/>
</kw>
<msg timestamp="20210719 10:57:59.330" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:57:59.220" endtime="20210719 10:57:59.330"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:59.448" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:57:59.333" endtime="20210719 10:57:59.448"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:59.451" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:59.449" endtime="20210719 10:57:59.451"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:59.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:59.452" endtime="20210719 10:57:59.455"/>
</kw>
<msg timestamp="20210719 10:57:59.456" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:57:59.330" endtime="20210719 10:57:59.457"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:59.548" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210719 10:57:59.461" endtime="20210719 10:57:59.548"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:59.550" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210719 10:57:59.549" endtime="20210719 10:57:59.550"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:59.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:59.551" endtime="20210719 10:57:59.552"/>
</kw>
<msg timestamp="20210719 10:57:59.554" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210719 10:57:59.458" endtime="20210719 10:57:59.555"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:57:59.666" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210719 10:57:59.562" endtime="20210719 10:57:59.667"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:57:59.670" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210719 10:57:59.668" endtime="20210719 10:57:59.671"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:57:59.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:57:59.672" endtime="20210719 10:57:59.675"/>
</kw>
<msg timestamp="20210719 10:57:59.677" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210719 10:57:59.556" endtime="20210719 10:57:59.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:59.686" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:57:59.684" endtime="20210719 10:57:59.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:57:59.689" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:57:59.687" endtime="20210719 10:57:59.690"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:57:59.693" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:57:59.690" endtime="20210719 10:57:59.695"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:00.719" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:00.719" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:52 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:00.721" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:57:59.696" endtime="20210719 10:58:00.721"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:00.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:00.722" endtime="20210719 10:58:00.728"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:00.729" endtime="20210719 10:58:00.734"/>
</kw>
<status status="PASS" starttime="20210719 10:57:59.682" endtime="20210719 10:58:00.735"/>
</kw>
<status status="PASS" starttime="20210719 10:57:59.678" endtime="20210719 10:58:00.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:00.745" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:00.742" endtime="20210719 10:58:00.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:00.750" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:00.746" endtime="20210719 10:58:00.750"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:00.752" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:00.751" endtime="20210719 10:58:00.753"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:01.788" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:01.789" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:53 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:01.789" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:00.754" endtime="20210719 10:58:01.789"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:01.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:01.790" endtime="20210719 10:58:01.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:01.797" endtime="20210719 10:58:01.801"/>
</kw>
<status status="PASS" starttime="20210719 10:58:00.740" endtime="20210719 10:58:01.801"/>
</kw>
<status status="PASS" starttime="20210719 10:58:00.737" endtime="20210719 10:58:01.802"/>
</kw>
<status status="PASS" starttime="20210719 10:57:59.219" endtime="20210719 10:58:01.802"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:01.917" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:58:01.809" endtime="20210719 10:58:01.918"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:01.921" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:01.919" endtime="20210719 10:58:01.922"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:01.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:01.923" endtime="20210719 10:58:01.925"/>
</kw>
<msg timestamp="20210719 10:58:01.926" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:01.806" endtime="20210719 10:58:01.927"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:02.040" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:58:01.930" endtime="20210719 10:58:02.041"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:02.046" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:02.043" endtime="20210719 10:58:02.046"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:02.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:02.048" endtime="20210719 10:58:02.049"/>
</kw>
<msg timestamp="20210719 10:58:02.051" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:01.927" endtime="20210719 10:58:02.051"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:02.157" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210719 10:58:02.055" endtime="20210719 10:58:02.157"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:02.162" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210719 10:58:02.159" endtime="20210719 10:58:02.162"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:02.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:02.164" endtime="20210719 10:58:02.166"/>
</kw>
<msg timestamp="20210719 10:58:02.168" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210719 10:58:02.052" endtime="20210719 10:58:02.168"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:02.287" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210719 10:58:02.172" endtime="20210719 10:58:02.287"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:02.293" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210719 10:58:02.289" endtime="20210719 10:58:02.293"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:02.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:02.295" endtime="20210719 10:58:02.298"/>
</kw>
<msg timestamp="20210719 10:58:02.300" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210719 10:58:02.169" endtime="20210719 10:58:02.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:02.310" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:02.307" endtime="20210719 10:58:02.310"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:02.315" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:02.311" endtime="20210719 10:58:02.315"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:02.318" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:02.316" endtime="20210719 10:58:02.319"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:03.308" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:03.309" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:55 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:03.309" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:02.320" endtime="20210719 10:58:03.310"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:03.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:03.311" endtime="20210719 10:58:03.318"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:03.319" endtime="20210719 10:58:03.322"/>
</kw>
<status status="PASS" starttime="20210719 10:58:02.305" endtime="20210719 10:58:03.323"/>
</kw>
<status status="PASS" starttime="20210719 10:58:02.301" endtime="20210719 10:58:03.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:03.332" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:03.328" endtime="20210719 10:58:03.333"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:03.337" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:03.333" endtime="20210719 10:58:03.338"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:03.341" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:03.338" endtime="20210719 10:58:03.342"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:04.317" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:04.317" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:56 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:04.317" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:03.343" endtime="20210719 10:58:04.317"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:04.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:04.318" endtime="20210719 10:58:04.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:04.328" endtime="20210719 10:58:04.329"/>
</kw>
<status status="PASS" starttime="20210719 10:58:03.326" endtime="20210719 10:58:04.330"/>
</kw>
<status status="PASS" starttime="20210719 10:58:03.324" endtime="20210719 10:58:04.330"/>
</kw>
<status status="PASS" starttime="20210719 10:58:01.804" endtime="20210719 10:58:04.331"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:04.444" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:58:04.335" endtime="20210719 10:58:04.444"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:04.447" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:04.445" endtime="20210719 10:58:04.447"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:04.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:04.448" endtime="20210719 10:58:04.449"/>
</kw>
<msg timestamp="20210719 10:58:04.450" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:04.333" endtime="20210719 10:58:04.450"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:04.547" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:58:04.453" endtime="20210719 10:58:04.547"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:04.550" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:04.548" endtime="20210719 10:58:04.550"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:04.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:04.551" endtime="20210719 10:58:04.552"/>
</kw>
<msg timestamp="20210719 10:58:04.555" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:04.451" endtime="20210719 10:58:04.555"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:04.655" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210719 10:58:04.560" endtime="20210719 10:58:04.656"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:04.658" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210719 10:58:04.657" endtime="20210719 10:58:04.658"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:04.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:04.659" endtime="20210719 10:58:04.660"/>
</kw>
<msg timestamp="20210719 10:58:04.662" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210719 10:58:04.556" endtime="20210719 10:58:04.662"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:04.767" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210719 10:58:04.667" endtime="20210719 10:58:04.767"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:04.772" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210719 10:58:04.769" endtime="20210719 10:58:04.772"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:04.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:04.773" endtime="20210719 10:58:04.775"/>
</kw>
<msg timestamp="20210719 10:58:04.776" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210719 10:58:04.663" endtime="20210719 10:58:04.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:04.788" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:04.783" endtime="20210719 10:58:04.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:04.791" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:04.789" endtime="20210719 10:58:04.791"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:04.795" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:04.792" endtime="20210719 10:58:04.796"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:05.788" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:05.789" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:57 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:05.790" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:04.798" endtime="20210719 10:58:05.790"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:05.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:05.791" endtime="20210719 10:58:05.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:05.797" endtime="20210719 10:58:05.798"/>
</kw>
<status status="PASS" starttime="20210719 10:58:04.780" endtime="20210719 10:58:05.799"/>
</kw>
<status status="PASS" starttime="20210719 10:58:04.777" endtime="20210719 10:58:05.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:05.810" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:05.807" endtime="20210719 10:58:05.810"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:05.813" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:05.811" endtime="20210719 10:58:05.813"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:05.815" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:05.813" endtime="20210719 10:58:05.816"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:06.848" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:06.849" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:25:58 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:06.849" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:05.817" endtime="20210719 10:58:06.849"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:06.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:06.850" endtime="20210719 10:58:06.860"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:06.860" endtime="20210719 10:58:06.864"/>
</kw>
<status status="PASS" starttime="20210719 10:58:05.805" endtime="20210719 10:58:06.865"/>
</kw>
<status status="PASS" starttime="20210719 10:58:05.801" endtime="20210719 10:58:06.866"/>
</kw>
<status status="PASS" starttime="20210719 10:58:04.331" endtime="20210719 10:58:06.867"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:06.986" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:58:06.872" endtime="20210719 10:58:06.986"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:06.989" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:06.987" endtime="20210719 10:58:06.989"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:06.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:06.990" endtime="20210719 10:58:06.991"/>
</kw>
<msg timestamp="20210719 10:58:06.992" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:06.869" endtime="20210719 10:58:06.992"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:07.099" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:58:06.996" endtime="20210719 10:58:07.100"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:07.103" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:07.101" endtime="20210719 10:58:07.103"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:07.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:07.104" endtime="20210719 10:58:07.105"/>
</kw>
<msg timestamp="20210719 10:58:07.106" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:06.994" endtime="20210719 10:58:07.106"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:07.208" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210719 10:58:07.110" endtime="20210719 10:58:07.209"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:07.211" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210719 10:58:07.209" endtime="20210719 10:58:07.211"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:07.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:07.212" endtime="20210719 10:58:07.215"/>
</kw>
<msg timestamp="20210719 10:58:07.217" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210719 10:58:07.107" endtime="20210719 10:58:07.218"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:07.329" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210719 10:58:07.222" endtime="20210719 10:58:07.329"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:07.332" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210719 10:58:07.330" endtime="20210719 10:58:07.332"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:07.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:07.333" endtime="20210719 10:58:07.335"/>
</kw>
<msg timestamp="20210719 10:58:07.337" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210719 10:58:07.219" endtime="20210719 10:58:07.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:07.346" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:07.344" endtime="20210719 10:58:07.347"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:07.350" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:07.348" endtime="20210719 10:58:07.350"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:07.354" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:07.351" endtime="20210719 10:58:07.356"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:08.337" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:08.338" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:26:00 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:08.339" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:07.357" endtime="20210719 10:58:08.339"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:08.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:08.341" endtime="20210719 10:58:08.348"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:08.349" endtime="20210719 10:58:08.351"/>
</kw>
<status status="PASS" starttime="20210719 10:58:07.342" endtime="20210719 10:58:08.352"/>
</kw>
<status status="PASS" starttime="20210719 10:58:07.339" endtime="20210719 10:58:08.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:08.363" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:08.361" endtime="20210719 10:58:08.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:08.367" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:08.365" endtime="20210719 10:58:08.367"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:08.369" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:08.368" endtime="20210719 10:58:08.371"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:09.366" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:09.367" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:26:01 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:09.367" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:08.373" endtime="20210719 10:58:09.367"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:09.368" endtime="20210719 10:58:09.374"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:09.376" endtime="20210719 10:58:09.377"/>
</kw>
<status status="PASS" starttime="20210719 10:58:08.357" endtime="20210719 10:58:09.379"/>
</kw>
<status status="PASS" starttime="20210719 10:58:08.354" endtime="20210719 10:58:09.379"/>
</kw>
<status status="PASS" starttime="20210719 10:58:06.868" endtime="20210719 10:58:09.380"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:09.531" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210719 10:58:09.386" endtime="20210719 10:58:09.531"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:09.536" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:09.533" endtime="20210719 10:58:09.537"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:09.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:09.537" endtime="20210719 10:58:09.539"/>
</kw>
<msg timestamp="20210719 10:58:09.540" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210719 10:58:09.384" endtime="20210719 10:58:09.540"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:09.715" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210719 10:58:09.545" endtime="20210719 10:58:09.715"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:09.716" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:09.715" endtime="20210719 10:58:09.716"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:09.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:09.716" endtime="20210719 10:58:09.718"/>
</kw>
<msg timestamp="20210719 10:58:09.719" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210719 10:58:09.541" endtime="20210719 10:58:09.719"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:09.784" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210719 10:58:09.721" endtime="20210719 10:58:09.785"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:09.787" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210719 10:58:09.785" endtime="20210719 10:58:09.787"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:09.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:09.787" endtime="20210719 10:58:09.788"/>
</kw>
<msg timestamp="20210719 10:58:09.789" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210719 10:58:09.720" endtime="20210719 10:58:09.789"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:09.858" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210719 10:58:09.791" endtime="20210719 10:58:09.858"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:09.862" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210719 10:58:09.859" endtime="20210719 10:58:09.862"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:09.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:09.864" endtime="20210719 10:58:09.865"/>
</kw>
<msg timestamp="20210719 10:58:09.866" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210719 10:58:09.790" endtime="20210719 10:58:09.867"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:09.874" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:09.872" endtime="20210719 10:58:09.874"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:09.880" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:09.876" endtime="20210719 10:58:09.881"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:09.883" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:09.881" endtime="20210719 10:58:09.884"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:10.863" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:10.863" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:26:02 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:10.864" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:09.885" endtime="20210719 10:58:10.864"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:10.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:10.865" endtime="20210719 10:58:10.870"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:10.870" endtime="20210719 10:58:10.873"/>
</kw>
<status status="PASS" starttime="20210719 10:58:09.869" endtime="20210719 10:58:10.873"/>
</kw>
<status status="PASS" starttime="20210719 10:58:09.868" endtime="20210719 10:58:10.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:10.882" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P'}</msg>
<status status="PASS" starttime="20210719 10:58:10.879" endtime="20210719 10:58:10.882"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210719 10:58:10.887" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210719 10:58:10.884" endtime="20210719 10:58:10.887"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210719 10:58:10.890" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.37/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210719 10:58:10.888" endtime="20210719 10:58:10.891"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210719 10:58:11.884" level="INFO">POST Request : url=https://10.252.9.37/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'Q9uPuYdzSev9x5ww8RWDsW6P', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210719 10:58:11.885" level="INFO">POST Response : url=https://10.252.9.37/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Mon, 19 Jul 2021 05:26:03 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210719 10:58:11.885" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210719 10:58:10.891" endtime="20210719 10:58:11.886"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210719 10:58:11.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210719 10:58:11.887" endtime="20210719 10:58:11.893"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:11.894" endtime="20210719 10:58:11.899"/>
</kw>
<status status="PASS" starttime="20210719 10:58:10.878" endtime="20210719 10:58:11.900"/>
</kw>
<status status="PASS" starttime="20210719 10:58:10.875" endtime="20210719 10:58:11.901"/>
</kw>
<status status="PASS" starttime="20210719 10:58:09.382" endtime="20210719 10:58:11.901"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.022" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:58:11.906" endtime="20210719 10:58:12.022"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.025" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:12.023" endtime="20210719 10:58:12.026"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.026" endtime="20210719 10:58:12.028"/>
</kw>
<msg timestamp="20210719 10:58:12.029" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:11.903" endtime="20210719 10:58:12.029"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.143" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:58:12.034" endtime="20210719 10:58:12.143"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.147" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:12.144" endtime="20210719 10:58:12.147"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.148" endtime="20210719 10:58:12.149"/>
</kw>
<msg timestamp="20210719 10:58:12.151" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:12.030" endtime="20210719 10:58:12.151"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.262" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210719 10:58:12.155" endtime="20210719 10:58:12.263"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.266" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210719 10:58:12.263" endtime="20210719 10:58:12.266"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.268" endtime="20210719 10:58:12.269"/>
</kw>
<msg timestamp="20210719 10:58:12.271" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210719 10:58:12.152" endtime="20210719 10:58:12.272"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.397" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210719 10:58:12.275" endtime="20210719 10:58:12.398"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.401" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210719 10:58:12.398" endtime="20210719 10:58:12.401"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.402" endtime="20210719 10:58:12.405"/>
</kw>
<msg timestamp="20210719 10:58:12.407" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210719 10:58:12.273" endtime="20210719 10:58:12.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:12.408" endtime="20210719 10:58:12.411"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:12.412" endtime="20210719 10:58:12.414"/>
</kw>
<status status="PASS" starttime="20210719 10:58:11.902" endtime="20210719 10:58:12.415"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.546" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:58:12.419" endtime="20210719 10:58:12.546"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.549" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:12.547" endtime="20210719 10:58:12.549"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.550" endtime="20210719 10:58:12.551"/>
</kw>
<msg timestamp="20210719 10:58:12.552" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:12.417" endtime="20210719 10:58:12.553"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.663" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:58:12.556" endtime="20210719 10:58:12.664"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.665" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:12.664" endtime="20210719 10:58:12.666"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.667" endtime="20210719 10:58:12.668"/>
</kw>
<msg timestamp="20210719 10:58:12.669" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:12.554" endtime="20210719 10:58:12.669"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.839" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210719 10:58:12.673" endtime="20210719 10:58:12.839"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.842" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210719 10:58:12.840" endtime="20210719 10:58:12.842"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.842" endtime="20210719 10:58:12.844"/>
</kw>
<msg timestamp="20210719 10:58:12.845" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210719 10:58:12.670" endtime="20210719 10:58:12.845"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:12.943" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210719 10:58:12.849" endtime="20210719 10:58:12.943"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:12.946" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210719 10:58:12.944" endtime="20210719 10:58:12.946"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:12.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:12.947" endtime="20210719 10:58:12.949"/>
</kw>
<msg timestamp="20210719 10:58:12.950" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210719 10:58:12.846" endtime="20210719 10:58:12.950"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:12.951" endtime="20210719 10:58:12.954"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:12.954" endtime="20210719 10:58:12.957"/>
</kw>
<status status="PASS" starttime="20210719 10:58:12.415" endtime="20210719 10:58:12.957"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:13.070" level="INFO">${field_value_list} = ['RHUM']</msg>
<status status="PASS" starttime="20210719 10:58:12.962" endtime="20210719 10:58:13.071"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:13.075" level="INFO">${field_value} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:13.073" endtime="20210719 10:58:13.075"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:13.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:13.075" endtime="20210719 10:58:13.077"/>
</kw>
<msg timestamp="20210719 10:58:13.078" level="INFO">${rack_type1} = RHUM</msg>
<status status="PASS" starttime="20210719 10:58:12.959" endtime="20210719 10:58:13.078"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:13.171" level="INFO">${field_value_list} = ['ZNT']</msg>
<status status="PASS" starttime="20210719 10:58:13.081" endtime="20210719 10:58:13.172"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:13.175" level="INFO">${field_value} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:13.172" endtime="20210719 10:58:13.175"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:13.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:13.176" endtime="20210719 10:58:13.178"/>
</kw>
<msg timestamp="20210719 10:58:13.179" level="INFO">${rack_type2} = ZNT</msg>
<status status="PASS" starttime="20210719 10:58:13.079" endtime="20210719 10:58:13.180"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:13.278" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210719 10:58:13.185" endtime="20210719 10:58:13.278"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:13.281" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210719 10:58:13.280" endtime="20210719 10:58:13.282"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:13.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:13.282" endtime="20210719 10:58:13.283"/>
</kw>
<msg timestamp="20210719 10:58:13.285" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210719 10:58:13.181" endtime="20210719 10:58:13.285"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210719 10:58:13.382" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210719 10:58:13.288" endtime="20210719 10:58:13.382"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210719 10:58:13.385" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210719 10:58:13.384" endtime="20210719 10:58:13.385"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210719 10:58:13.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210719 10:58:13.386" endtime="20210719 10:58:13.387"/>
</kw>
<msg timestamp="20210719 10:58:13.388" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210719 10:58:13.285" endtime="20210719 10:58:13.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type1}'=='CBot' and '${oid1}'!='${sensor_A_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:13.389" endtime="20210719 10:58:13.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>('${rack_type2}'=='CTop' and '${oid2}'!='${sensor_B_oid}')</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempC}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210719 10:58:13.392" endtime="20210719 10:58:13.395"/>
</kw>
<status status="PASS" starttime="20210719 10:58:12.958" endtime="20210719 10:58:13.395"/>
</iter>
<status status="PASS" starttime="20210719 10:57:53.632" endtime="20210719 10:58:13.397"/>
</for>
<status status="PASS" starttime="20210719 10:57:49.867" endtime="20210719 10:58:13.399"/>
</kw>
<kw name="waitForOneMinute" library="apiresources">
<kw name="waitForMinutes" library="common">
<arg>1</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!------------Waiting for ${minutes} minutes------------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:58:13.403" endtime="20210719 10:58:13.405"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${minutes} minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210719 10:59:13.420" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210719 10:58:13.405" endtime="20210719 10:59:13.422"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---------Waiting - Done--------------------!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210719 10:59:13.423" endtime="20210719 10:59:13.425"/>
</kw>
<status status="PASS" starttime="20210719 10:58:13.401" endtime="20210719 10:59:13.427"/>
</kw>
<status status="PASS" starttime="20210719 10:58:13.400" endtime="20210719 10:59:13.428"/>
</kw>
<status status="PASS" starttime="20210719 10:57:49.865" endtime="20210719 10:59:13.429"/>
</iter>
<status status="PASS" starttime="20210719 10:49:09.863" endtime="20210719 10:59:13.430"/>
</for>
<status status="PASS" starttime="20210719 10:44:52.454" endtime="20210719 10:59:13.432"/>
</test>
<status status="PASS" starttime="20210719 10:44:51.796" endtime="20210719 10:59:13.436"/>
</suite>
<status status="PASS" starttime="20210719 10:44:51.781" endtime="20210719 10:59:13.445"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Suites">Suites</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="staleStatePrevention">Suites.staleStatePrevention</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
