<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.5 on win32)" generated="20210721 11:54:35.210" rpa="false" schemaversion="2">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="basicHotAbsoluteGuardTest" source="C:\Users\grees\PycharmProjects\AuQA\Testcases\basicHotAbsoluteGuardTest.robot">
<test id="s1-s1-t1" name="BasicHotAbsoluteGuardTest">
<kw name="establishConnectionAndStartProcesses" library="connection">
<doc>Establish connection and start processes on the remote machine.
HISTIGNORE command is used to avoid saving the password in history</doc>
<kw name="openConnectionAndLogIn" library="connection">
<kw name="Log To Console" library="BuiltIn">
<arg>!--------Opening SSH Connection----------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:35.795" endtime="20210721 11:54:35.795"/>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20210721 11:54:35.795" endtime="20210721 11:54:35.795"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20210721 11:54:35.795" level="INFO">Logging into '10.252.9.64:22' as 'fc'.</msg>
<msg timestamp="20210721 11:54:40.639" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-74-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue 20 Jul 2021 11:22:29 PM PDT

  System load:  0.06                Processes:               244
  Usage of /:   2.6% of 1005.94GB   Users logged in:         1
  Memory usage: 3%                  IPv4 address for ens160: 10.252.9.64
  Swap usage:   0%

Last login: Tue Jul 20 23:21:15 2021 from 10.253.2.183
fc@QA-ideavat-vems-2:~$</msg>
<status status="PASS" starttime="20210721 11:54:35.795" endtime="20210721 11:54:40.639"/>
</kw>
<status status="PASS" starttime="20210721 11:54:35.795" endtime="20210721 11:54:40.639"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!------Connection opened and now starting the processes----!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:40.639" endtime="20210721 11:54:40.639"/>
</kw>
<kw name="executeProcessCommandWithoutTraceInHistory" library="connection">
<arg>vx_server</arg>
<kw name="Execute Command" library="SSHLibrary">
<arg>export HISTIGNORE='*sudo -S*'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:40.654" level="INFO">Executing command 'export HISTIGNORE='*sudo -S*''.</msg>
<msg timestamp="20210721 11:54:41.256" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:40.654" endtime="20210721 11:54:41.256"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<arg>echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start ${process_name}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:41.263" level="INFO">Executing command 'echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start vx_server'.</msg>
<msg timestamp="20210721 11:54:42.164" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:41.256" endtime="20210721 11:54:42.164"/>
</kw>
<status status="PASS" starttime="20210721 11:54:40.639" endtime="20210721 11:54:42.164"/>
</kw>
<kw name="executeProcessCommandWithoutTraceInHistory" library="connection">
<arg>facs_trend</arg>
<kw name="Execute Command" library="SSHLibrary">
<arg>export HISTIGNORE='*sudo -S*'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:42.164" level="INFO">Executing command 'export HISTIGNORE='*sudo -S*''.</msg>
<msg timestamp="20210721 11:54:43.028" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:42.164" endtime="20210721 11:54:43.028"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<arg>echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start ${process_name}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:43.028" level="INFO">Executing command 'echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start facs_trend'.</msg>
<msg timestamp="20210721 11:54:43.983" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:43.028" endtime="20210721 11:54:43.983"/>
</kw>
<status status="PASS" starttime="20210721 11:54:42.164" endtime="20210721 11:54:43.983"/>
</kw>
<kw name="executeProcessCommandWithoutTraceInHistory" library="connection">
<arg>facs_launcher</arg>
<kw name="Execute Command" library="SSHLibrary">
<arg>export HISTIGNORE='*sudo -S*'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:43.983" level="INFO">Executing command 'export HISTIGNORE='*sudo -S*''.</msg>
<msg timestamp="20210721 11:54:44.832" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:43.983" endtime="20210721 11:54:44.832"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<arg>echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start ${process_name}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:44.832" level="INFO">Executing command 'echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start facs_launcher'.</msg>
<msg timestamp="20210721 11:54:45.768" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:44.832" endtime="20210721 11:54:45.768"/>
</kw>
<status status="PASS" starttime="20210721 11:54:43.983" endtime="20210721 11:54:45.769"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${high_speed}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:54:50.774" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210721 11:54:45.769" endtime="20210721 11:54:50.774"/>
</kw>
<kw name="closeAllConnections" library="connection">
<kw name="Execute Command" library="SSHLibrary">
<arg>exit</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:54:50.776" level="INFO">Executing command 'exit'.</msg>
<msg timestamp="20210721 11:54:51.347" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:54:50.775" endtime="20210721 11:54:51.347"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>*******************Processes(start or stop) completed and Closed ssh connection********************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:51.347" endtime="20210721 11:54:51.351"/>
</kw>
<status status="PASS" starttime="20210721 11:54:50.774" endtime="20210721 11:54:51.351"/>
</kw>
<status status="PASS" starttime="20210721 11:54:35.795" endtime="20210721 11:54:51.351"/>
</kw>
<kw name="resetSystemPropertiesUsingLoadTemplateOptionWithOverwrite" library="uiresources">
<kw name="startBrowserAndLoginToAIEngine" library="uiresources">
<kw name="startBrowserAndAccessAIEngineCXWebUI" library="uiresources">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url_cx}</arg>
<arg>${browser}</arg>
<arg>options=add_argument("--disable-popup-blocking"); add_argument("--ignore-certificate-errors"); add_argument("--no-sandbox"); add_argument("--disable-extensions"); add_argument("--disable-dev-shm-usage")</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210721 11:54:51.355" level="INFO">Opening browser 'headlesschrome' to base url 'https://10.252.9.64/vems/cx.php'.</msg>
<status status="PASS" starttime="20210721 11:54:51.354" endtime="20210721 11:54:59.386"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210721 11:54:59.387" endtime="20210721 11:54:59.513"/>
</kw>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<arg>${high_speed}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20210721 11:54:59.513" endtime="20210721 11:54:59.523"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Accessed AI Engine</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:59.523" endtime="20210721 11:54:59.523"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.354" endtime="20210721 11:54:59.523"/>
</kw>
<kw name="loginByEnteringUsernameAndPassword" library="uiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Entering user name and password</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:54:59.523" endtime="20210721 11:54:59.528"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${uname}</arg>
<arg>${ui_username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210721 11:54:59.528" level="INFO">Typing text 'ideavat' into text field 'css:#textfield-1009-inputEl'.</msg>
<status status="PASS" starttime="20210721 11:54:59.528" endtime="20210721 11:54:59.809"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${upwd}</arg>
<arg>${ui_password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210721 11:54:59.810" level="INFO">Typing text 'Crick3t!' into text field 'css:#textfield-1010-inputEl'.</msg>
<status status="PASS" starttime="20210721 11:54:59.810" endtime="20210721 11:54:59.901"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${EXECDIR}/Reports/Screenshots/inputUserNameAndPwd_1.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210721 11:54:59.962" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="../../Screenshots/inputUserNameAndPwd_1.png"&gt;&lt;img src="../../Screenshots/inputUserNameAndPwd_1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210721 11:54:59.901" endtime="20210721 11:54:59.962"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:54:59.962" level="INFO">Clicking element 'css:span#button-1011-btnInnerEl'.</msg>
<status status="PASS" starttime="20210721 11:54:59.962" endtime="20210721 11:55:00.028"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${banner}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20210721 11:55:00.029" endtime="20210721 11:55:00.912"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${tools_button}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20210721 11:55:00.912" endtime="20210721 11:55:00.943"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${EXECDIR}/Reports/Screenshots/siteEditorHomePage_2.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210721 11:55:01.010" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="../../Screenshots/siteEditorHomePage_2.png"&gt;&lt;img src="../../Screenshots/siteEditorHomePage_2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210721 11:55:00.943" endtime="20210721 11:55:01.010"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Logged in succesfully</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:01.011" endtime="20210721 11:55:01.011"/>
</kw>
<status status="PASS" starttime="20210721 11:54:59.523" endtime="20210721 11:55:01.011"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.353" endtime="20210721 11:55:01.011"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${tools_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:01.012" level="INFO">Clicking element 'css:#button-1267-btnEl'.</msg>
<status status="PASS" starttime="20210721 11:55:01.011" endtime="20210721 11:55:01.080"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${configs_option_in_tools}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:01.081" level="INFO">Clicking element 'css:#menuitem-1235-itemEl'.</msg>
<status status="PASS" starttime="20210721 11:55:01.080" endtime="20210721 11:55:01.154"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${load_time}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:55:11.158" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210721 11:55:01.154" endtime="20210721 11:55:11.158"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${load_template_in_config_popup}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210721 11:55:11.158" endtime="20210721 11:55:11.195"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${load_template_in_config_popup}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20210721 11:55:11.195" endtime="20210721 11:55:11.227"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${load_template_in_config_popup}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.227" level="INFO">Clicking element 'xpath=//span[contains(text(),'Load Template')]'.</msg>
<status status="PASS" starttime="20210721 11:55:11.227" endtime="20210721 11:55:11.301"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${template_dropbox_picker}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.302" level="INFO">Clicking element 'css:#combo-1358-trigger-picker'.</msg>
<status status="PASS" starttime="20210721 11:55:11.301" endtime="20210721 11:55:11.356"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${template_option}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.357" level="INFO">Clicking element 'xpath=//li[contains(text(),'DASHAM_MIX')]'.</msg>
<status status="PASS" starttime="20210721 11:55:11.356" endtime="20210721 11:55:11.402"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${temperature_scale_dropbox_picker}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.403" level="INFO">Clicking element 'css:#combo-1359-trigger-picker'.</msg>
<status status="PASS" starttime="20210721 11:55:11.403" endtime="20210721 11:55:11.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${temperature_scale_option}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.452" level="INFO">Clicking element 'xpath=//li[contains(text(),'Fahrenheit')]'.</msg>
<status status="PASS" starttime="20210721 11:55:11.451" endtime="20210721 11:55:11.492"/>
</kw>
<kw name="Select Checkbox" library="SeleniumLibrary">
<arg>${overwrite_checkbox}</arg>
<doc>Selects the checkbox identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.493" level="INFO">Selecting checkbox 'css:#checkbox-1360-inputEl'.</msg>
<status status="PASS" starttime="20210721 11:55:11.492" endtime="20210721 11:55:11.559"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${apply_button_load_template}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.560" level="INFO">Clicking element 'css:#button-1356-btnInnerEl'.</msg>
<status status="PASS" starttime="20210721 11:55:11.559" endtime="20210721 11:55:11.652"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${save_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:11.653" level="INFO">Clicking element 'css:#button-1302-btnIconEl'.</msg>
<status status="PASS" starttime="20210721 11:55:11.652" endtime="20210721 11:55:11.700"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Loaded default template succesfully</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:11.700" endtime="20210721 11:55:11.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${high_speed}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:55:16.715" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210721 11:55:11.701" endtime="20210721 11:55:16.715"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${close_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210721 11:55:16.717" level="INFO">Clicking element 'css:#button-1303-btnIconEl'.</msg>
<status status="PASS" starttime="20210721 11:55:16.716" endtime="20210721 11:55:16.795"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${close_button}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210721 11:55:16.795" endtime="20210721 11:55:16.813"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Closed config popup</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:16.813" endtime="20210721 11:55:16.814"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20210721 11:55:16.814" endtime="20210721 11:55:18.889"/>
</kw>
<status status="PASS" starttime="20210721 11:54:51.352" endtime="20210721 11:55:18.889"/>
</kw>
<kw name="changeCxConfigsDashm_NumGuardUnits_NumMinutesGuardTimer_PercentDeadSensorThreshold_AndSystem_NumMinutesPast" library="apiresources">
<arg>${num_guard_units}</arg>
<arg>${num_minutes_guard_timer}</arg>
<arg>${percent_deadsensor_threshold}</arg>
<arg>${num_minutes_past}</arg>
<kw name="changeCxConfigsTabModuleFieldValues" library="apiresources">
<arg>DASHM</arg>
<arg>NumGuardUnits</arg>
<arg>${num_guard_units_val}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:18.889" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:18.889" endtime="20210721 11:55:18.889"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation configWrite { configSet(requests: [{module: "${module_name}", name: "${field_name}", value: "${value}"}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:18.889" level="INFO">${body} = {'query': ' mutation configWrite { configSet(requests: [{module: "DASHM", name: "NumGuardUnits", value: "1"}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:18.889" endtime="20210721 11:55:18.889"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:18.895" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:18.895" endtime="20210721 11:55:18.895"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:19.779" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '136'} 
 body=b'{"query": " mutation configWrite { configSet(requests: [{module: \\"DASHM\\", name: \\"NumGuardUnits\\", value: \\"1\\"}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:19.779" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:11 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '45', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"configSet":[]}} 
 </msg>
<msg timestamp="20210721 11:55:19.779" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:18.895" endtime="20210721 11:55:19.779"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:19.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:19.779" endtime="20210721 11:55:19.779"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Config module :${module_name}-&gt;Field:${field_name}-&gt;Value:${value}-is updated</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:19.779" endtime="20210721 11:55:19.779"/>
</kw>
<status status="PASS" starttime="20210721 11:55:18.889" endtime="20210721 11:55:19.779"/>
</kw>
<kw name="changeCxConfigsTabModuleFieldValues" library="apiresources">
<arg>DASHM</arg>
<arg>NumMinutesGuardTimer</arg>
<arg>${num_minutes_guard_timer_val}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:19.795" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:19.795" endtime="20210721 11:55:19.795"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation configWrite { configSet(requests: [{module: "${module_name}", name: "${field_name}", value: "${value}"}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:19.797" level="INFO">${body} = {'query': ' mutation configWrite { configSet(requests: [{module: "DASHM", name: "NumMinutesGuardTimer", value: "3"}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:19.795" endtime="20210721 11:55:19.797"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:19.797" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:19.797" endtime="20210721 11:55:19.797"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:20.714" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '143'} 
 body=b'{"query": " mutation configWrite { configSet(requests: [{module: \\"DASHM\\", name: \\"NumMinutesGuardTimer\\", value: \\"3\\"}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:20.714" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:12 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '45', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"configSet":[]}} 
 </msg>
<msg timestamp="20210721 11:55:20.714" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:19.797" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:20.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Config module :${module_name}-&gt;Field:${field_name}-&gt;Value:${value}-is updated</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:20.714"/>
</kw>
<status status="PASS" starttime="20210721 11:55:19.795" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="changeCxConfigsTabModuleFieldValues" library="apiresources">
<arg>DASHM</arg>
<arg>PercentDeadSensorThreshold</arg>
<arg>${percent_dead_sensor_threshold_val}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:20.714" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation configWrite { configSet(requests: [{module: "${module_name}", name: "${field_name}", value: "${value}"}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:20.714" level="INFO">${body} = {'query': ' mutation configWrite { configSet(requests: [{module: "DASHM", name: "PercentDeadSensorThreshold", value: "100"}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:20.714" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:20.714"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:21.599" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '151'} 
 body=b'{"query": " mutation configWrite { configSet(requests: [{module: \\"DASHM\\", name: \\"PercentDeadSensorThreshold\\", value: \\"100\\"}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:21.599" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:13 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '45', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"configSet":[]}} 
 </msg>
<msg timestamp="20210721 11:55:21.599" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:21.599"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:21.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:21.599" endtime="20210721 11:55:21.615"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Config module :${module_name}-&gt;Field:${field_name}-&gt;Value:${value}-is updated</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:21.615" endtime="20210721 11:55:21.615"/>
</kw>
<status status="PASS" starttime="20210721 11:55:20.714" endtime="20210721 11:55:21.615"/>
</kw>
<kw name="changeCxConfigsTabModuleFieldValues" library="apiresources">
<arg>SYSTEM</arg>
<arg>NumMinutesPast</arg>
<arg>${num_minutes_past_val}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:21.615" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:21.615" endtime="20210721 11:55:21.615"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation configWrite { configSet(requests: [{module: "${module_name}", name: "${field_name}", value: "${value}"}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:21.615" level="INFO">${body} = {'query': ' mutation configWrite { configSet(requests: [{module: "SYSTEM", name: "NumMinutesPast", value: "5"}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:21.615" endtime="20210721 11:55:21.615"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:21.615" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:21.615" endtime="20210721 11:55:21.615"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:22.516" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '138'} 
 body=b'{"query": " mutation configWrite { configSet(requests: [{module: \\"SYSTEM\\", name: \\"NumMinutesPast\\", value: \\"5\\"}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:22.516" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:13 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '45', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"configSet":[]}} 
 </msg>
<msg timestamp="20210721 11:55:22.516" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:21.630" endtime="20210721 11:55:22.516"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:22.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:22.532"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Config module :${module_name}-&gt;Field:${field_name}-&gt;Value:${value}-is updated</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:22.532"/>
</kw>
<status status="PASS" starttime="20210721 11:55:21.615" endtime="20210721 11:55:22.532"/>
</kw>
<status status="PASS" starttime="20210721 11:55:18.889" endtime="20210721 11:55:22.532"/>
</kw>
<kw name="setGroupPropertiesGuardHotAbsTempAllowNumExceedencesGuardAndControl" library="apiresources">
<arg>${allow_num_exceedences_control_initial}</arg>
<arg>${allow_num_exceedences_guard_initial}</arg>
<arg>${alm_hot_abs_temp_initial}</arg>
<arg>${guard_hot_abs_temp_intial}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:22.532" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:22.532"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation setGrpProp { propertyWrite(requests: [{oid: 17, name: "AllowNumExceedencesGuard", int: ${allow_num_excd_guard}},{oid: 17, name: "AllowNumExceedencesControl", int: ${allow_num_excd_ctrl}},{oid: 17, name: "GuardHotAbsTemp", float: ${guard_hot_abs_temp}},{oid: 17, name: "AlmHotAbsTemp", float: ${alm_hot_abs_temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:22.532" level="INFO">${body} = {'query': ' mutation setGrpProp { propertyWrite(requests: [{oid: 17, name: "AllowNumExceedencesGuard", int: 10},{oid: 17, name: "AllowNumExceedencesControl", int: 10},{oid: 17, name: "GuardHotAbsTemp"...</msg>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:22.532"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:22.532" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:22.532"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:23.434" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '287'} 
 body=b'{"query": " mutation setGrpProp { propertyWrite(requests: [{oid: 17, name: \\"AllowNumExceedencesGuard\\", int: 10},{oid: 17, name: \\"AllowNumExceedencesControl\\", int: 10},{oid: 17, name: \\"GuardHotAbsTemp\\", float: 90},{oid: 17, name: \\"AlmHotAbsTemp\\", float: 200}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:23.434" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:14 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '49', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"propertyWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:23.434" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:23.434"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:23.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:23.450"/>
</kw>
<status status="PASS" starttime="20210721 11:55:22.532" endtime="20210721 11:55:23.450"/>
</kw>
<kw name="setRackSensorPointsTemperature" library="apiresources">
<arg>${sensor_point_cooling_temp}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Fetch the number of rack sensors -----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:23.450"/>
</kw>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:23.450" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:23.450"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:23.450" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:23.450"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:23.450" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:23.450"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:24.367" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:55:24.367" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:15 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:55:24.367" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:24.367"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:24.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:24.367" endtime="20210721 11:55:24.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:55:24.367" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:24.367" endtime="20210721 11:55:24.367"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.367" endtime="20210721 11:55:24.367"/>
</kw>
<msg timestamp="20210721 11:55:24.367" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:24.367"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:24.405" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:55:24.367" endtime="20210721 11:55:24.405"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:55:24.405" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:55:24.405" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.405"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:55:24.405" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.405"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.405"/>
</kw>
<msg timestamp="20210721 11:55:24.405" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:55:24.367" endtime="20210721 11:55:24.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for all sensor points-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.405"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.405"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:24.420" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.420"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:24.420" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:24.420" endtime="20210721 11:55:24.420"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.420" endtime="20210721 11:55:24.420"/>
</kw>
<msg timestamp="20210721 11:55:24.420" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:24.420"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:24.436" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:24.420" endtime="20210721 11:55:24.436"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:24.436" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:24.436" endtime="20210721 11:55:24.436"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.436" endtime="20210721 11:55:24.436"/>
</kw>
<msg timestamp="20210721 11:55:24.436" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:24.420" endtime="20210721 11:55:24.436"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:24.452" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:55:24.436" endtime="20210721 11:55:24.452"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:24.452" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:24.452" endtime="20210721 11:55:24.452"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.452" endtime="20210721 11:55:24.452"/>
</kw>
<msg timestamp="20210721 11:55:24.452" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:55:24.436" endtime="20210721 11:55:24.452"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:55:24.467" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:24.483"/>
</kw>
<msg timestamp="20210721 11:55:24.483" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:55:24.452" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:24.483" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:24.483"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:25.385" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:25.385" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:16 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:25.385" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:25.385"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:25.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:25.385" endtime="20210721 11:55:25.402"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:25.402"/>
</kw>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:25.402"/>
</kw>
<status status="PASS" starttime="20210721 11:55:24.483" endtime="20210721 11:55:25.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:25.402" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:25.402"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:25.402" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:25.402"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:25.402" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:25.402"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:26.309" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:26.309" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:17 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:26.309" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:26.309"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:26.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:26.309"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:26.309"/>
</kw>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:26.309"/>
</kw>
<status status="PASS" starttime="20210721 11:55:25.402" endtime="20210721 11:55:26.309"/>
</kw>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:26.309"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:26.309"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:26.340" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:26.340"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:26.340" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:26.340" endtime="20210721 11:55:26.340"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:26.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:26.340" endtime="20210721 11:55:26.340"/>
</kw>
<msg timestamp="20210721 11:55:26.340" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:26.340"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:26.356" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:26.340" endtime="20210721 11:55:26.356"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:26.356" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:26.356" endtime="20210721 11:55:26.356"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:26.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:26.356" endtime="20210721 11:55:26.356"/>
</kw>
<msg timestamp="20210721 11:55:26.356" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:26.340" endtime="20210721 11:55:26.356"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:26.372" level="INFO">${field_value_list} = [12026]</msg>
<status status="PASS" starttime="20210721 11:55:26.356" endtime="20210721 11:55:26.372"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:26.372" level="INFO">${field_value} = 12026</msg>
<status status="PASS" starttime="20210721 11:55:26.372" endtime="20210721 11:55:26.372"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:26.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:26.372" endtime="20210721 11:55:26.372"/>
</kw>
<msg timestamp="20210721 11:55:26.372" level="INFO">${oid1} = 12026</msg>
<status status="PASS" starttime="20210721 11:55:26.356" endtime="20210721 11:55:26.372"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">${field_value_list} = [12034]</msg>
<status status="PASS" starttime="20210721 11:55:26.372" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">${field_value} = 12034</msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:26.390"/>
</kw>
<msg timestamp="20210721 11:55:26.390" level="INFO">${oid2} = 12034</msg>
<status status="PASS" starttime="20210721 11:55:26.372" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:26.390" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:26.390"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:27.305" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12026, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:27.305" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:18 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:27.305" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:27.305"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:27.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:27.305" endtime="20210721 11:55:27.305"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:27.305" endtime="20210721 11:55:27.305"/>
</kw>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:27.305"/>
</kw>
<status status="PASS" starttime="20210721 11:55:26.390" endtime="20210721 11:55:27.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:27.311" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:27.311" endtime="20210721 11:55:27.311"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:27.311" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:27.311" endtime="20210721 11:55:27.311"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:27.311" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:27.311" endtime="20210721 11:55:27.311"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:28.206" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12034, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:28.206" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:19 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:28.206" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:27.311" endtime="20210721 11:55:28.206"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:28.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:28.206"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:28.206"/>
</kw>
<status status="PASS" starttime="20210721 11:55:27.305" endtime="20210721 11:55:28.206"/>
</kw>
<status status="PASS" starttime="20210721 11:55:27.305" endtime="20210721 11:55:28.206"/>
</kw>
<status status="PASS" starttime="20210721 11:55:26.309" endtime="20210721 11:55:28.206"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:28.206"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:28.212" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:28.212"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:28.228" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:28.212" endtime="20210721 11:55:28.228"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:28.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:28.228" endtime="20210721 11:55:28.228"/>
</kw>
<msg timestamp="20210721 11:55:28.228" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:28.228"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:28.244" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:28.228" endtime="20210721 11:55:28.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:28.244" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:28.244" endtime="20210721 11:55:28.244"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:28.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:28.244" endtime="20210721 11:55:28.244"/>
</kw>
<msg timestamp="20210721 11:55:28.244" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:28.228" endtime="20210721 11:55:28.244"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:28.259" level="INFO">${field_value_list} = [12042]</msg>
<status status="PASS" starttime="20210721 11:55:28.244" endtime="20210721 11:55:28.259"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:28.259" level="INFO">${field_value} = 12042</msg>
<status status="PASS" starttime="20210721 11:55:28.259" endtime="20210721 11:55:28.259"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:28.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:28.259" endtime="20210721 11:55:28.259"/>
</kw>
<msg timestamp="20210721 11:55:28.259" level="INFO">${oid1} = 12042</msg>
<status status="PASS" starttime="20210721 11:55:28.244" endtime="20210721 11:55:28.259"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:28.285" level="INFO">${field_value_list} = [12050]</msg>
<status status="PASS" starttime="20210721 11:55:28.259" endtime="20210721 11:55:28.285"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:28.286" level="INFO">${field_value} = 12050</msg>
<status status="PASS" starttime="20210721 11:55:28.285" endtime="20210721 11:55:28.286"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:28.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:28.286" endtime="20210721 11:55:28.286"/>
</kw>
<msg timestamp="20210721 11:55:28.286" level="INFO">${oid2} = 12050</msg>
<status status="PASS" starttime="20210721 11:55:28.259" endtime="20210721 11:55:28.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:28.288" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:28.287" endtime="20210721 11:55:28.288"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:28.288" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:28.288" endtime="20210721 11:55:28.288"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:28.289" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:28.288" endtime="20210721 11:55:28.289"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:29.192" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12042, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:29.192" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:20 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:29.192" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:28.289" endtime="20210721 11:55:29.192"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:29.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:29.192" endtime="20210721 11:55:29.208"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:29.208" endtime="20210721 11:55:29.215"/>
</kw>
<status status="PASS" starttime="20210721 11:55:28.287" endtime="20210721 11:55:29.215"/>
</kw>
<status status="PASS" starttime="20210721 11:55:28.287" endtime="20210721 11:55:29.215"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:29.215" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:29.215"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:29.215" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:29.215"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:29.215" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:29.215"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:30.332" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12050, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:30.332" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:21 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:30.332" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:30.332"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:30.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:30.332"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:30.332"/>
</kw>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:30.332"/>
</kw>
<status status="PASS" starttime="20210721 11:55:29.215" endtime="20210721 11:55:30.332"/>
</kw>
<status status="PASS" starttime="20210721 11:55:28.206" endtime="20210721 11:55:30.332"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:30.332"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:30.360" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:30.360"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:30.360" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:30.360" endtime="20210721 11:55:30.360"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:30.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:30.360" endtime="20210721 11:55:30.361"/>
</kw>
<msg timestamp="20210721 11:55:30.361" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:30.361"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:30.378" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:30.362" endtime="20210721 11:55:30.378"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:30.379" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:30.379" endtime="20210721 11:55:30.380"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:30.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:30.381" endtime="20210721 11:55:30.381"/>
</kw>
<msg timestamp="20210721 11:55:30.381" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:30.361" endtime="20210721 11:55:30.381"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:30.396" level="INFO">${field_value_list} = [12058]</msg>
<status status="PASS" starttime="20210721 11:55:30.381" endtime="20210721 11:55:30.396"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:30.396" level="INFO">${field_value} = 12058</msg>
<status status="PASS" starttime="20210721 11:55:30.396" endtime="20210721 11:55:30.396"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:30.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:30.396" endtime="20210721 11:55:30.396"/>
</kw>
<msg timestamp="20210721 11:55:30.396" level="INFO">${oid1} = 12058</msg>
<status status="PASS" starttime="20210721 11:55:30.381" endtime="20210721 11:55:30.396"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">${field_value_list} = [12066]</msg>
<status status="PASS" starttime="20210721 11:55:30.396" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">${field_value} = 12066</msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:30.416"/>
</kw>
<msg timestamp="20210721 11:55:30.416" level="INFO">${oid2} = 12066</msg>
<status status="PASS" starttime="20210721 11:55:30.396" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:30.416" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:30.416"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:31.318" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12058, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:31.318" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:22 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:31.318" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:31.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:31.318"/>
</kw>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:31.318"/>
</kw>
<status status="PASS" starttime="20210721 11:55:30.416" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:31.318" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:31.318" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:31.318" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:31.318"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:32.268" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12066, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:32.268" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:23 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:32.268" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:32.268"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:32.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:32.268"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:32.268"/>
</kw>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:32.268"/>
</kw>
<status status="PASS" starttime="20210721 11:55:31.318" endtime="20210721 11:55:32.268"/>
</kw>
<status status="PASS" starttime="20210721 11:55:30.332" endtime="20210721 11:55:32.268"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:32.268"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:32.299" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:32.299"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:32.299" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:32.299" endtime="20210721 11:55:32.299"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:32.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:32.299" endtime="20210721 11:55:32.299"/>
</kw>
<msg timestamp="20210721 11:55:32.299" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:32.299"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:32.321" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:32.299" endtime="20210721 11:55:32.321"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:32.321" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:32.321" endtime="20210721 11:55:32.321"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:32.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:32.321" endtime="20210721 11:55:32.321"/>
</kw>
<msg timestamp="20210721 11:55:32.321" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:32.299" endtime="20210721 11:55:32.321"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:32.337" level="INFO">${field_value_list} = [12074]</msg>
<status status="PASS" starttime="20210721 11:55:32.321" endtime="20210721 11:55:32.337"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:32.337" level="INFO">${field_value} = 12074</msg>
<status status="PASS" starttime="20210721 11:55:32.337" endtime="20210721 11:55:32.337"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:32.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:32.337" endtime="20210721 11:55:32.337"/>
</kw>
<msg timestamp="20210721 11:55:32.337" level="INFO">${oid1} = 12074</msg>
<status status="PASS" starttime="20210721 11:55:32.321" endtime="20210721 11:55:32.337"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">${field_value_list} = [12082]</msg>
<status status="PASS" starttime="20210721 11:55:32.337" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">${field_value} = 12082</msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:32.352"/>
</kw>
<msg timestamp="20210721 11:55:32.352" level="INFO">${oid2} = 12082</msg>
<status status="PASS" starttime="20210721 11:55:32.337" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:32.352" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:32.352"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:33.285" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12074, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:33.285" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:24 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:33.285" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:33.285"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:33.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:33.285" endtime="20210721 11:55:33.300"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:33.300"/>
</kw>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:33.300"/>
</kw>
<status status="PASS" starttime="20210721 11:55:32.352" endtime="20210721 11:55:33.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:33.300" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:33.300"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:33.300" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:33.300"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:33.316" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:33.316"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:34.203" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12082, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:34.203" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:25 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:34.203" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:33.316" endtime="20210721 11:55:34.203"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:34.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:34.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:34.203"/>
</kw>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:34.203"/>
</kw>
<status status="PASS" starttime="20210721 11:55:33.300" endtime="20210721 11:55:34.203"/>
</kw>
<status status="PASS" starttime="20210721 11:55:32.268" endtime="20210721 11:55:34.203"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:34.203"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:34.225" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:34.225"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:34.225" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:34.225" endtime="20210721 11:55:34.225"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:34.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:34.225" endtime="20210721 11:55:34.225"/>
</kw>
<msg timestamp="20210721 11:55:34.225" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:34.225"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:34.256" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:34.225" endtime="20210721 11:55:34.256"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:34.256" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:34.256" endtime="20210721 11:55:34.256"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:34.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:34.256" endtime="20210721 11:55:34.256"/>
</kw>
<msg timestamp="20210721 11:55:34.256" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:34.225" endtime="20210721 11:55:34.256"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:34.288" level="INFO">${field_value_list} = [12090]</msg>
<status status="PASS" starttime="20210721 11:55:34.256" endtime="20210721 11:55:34.288"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:34.288" level="INFO">${field_value} = 12090</msg>
<status status="PASS" starttime="20210721 11:55:34.288" endtime="20210721 11:55:34.288"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:34.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:34.288" endtime="20210721 11:55:34.288"/>
</kw>
<msg timestamp="20210721 11:55:34.288" level="INFO">${oid1} = 12090</msg>
<status status="PASS" starttime="20210721 11:55:34.256" endtime="20210721 11:55:34.288"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">${field_value_list} = [12098]</msg>
<status status="PASS" starttime="20210721 11:55:34.288" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">${field_value} = 12098</msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:34.303"/>
</kw>
<msg timestamp="20210721 11:55:34.303" level="INFO">${oid2} = 12098</msg>
<status status="PASS" starttime="20210721 11:55:34.288" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:34.303" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:34.303"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:35.226" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12090, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:35.226" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:26 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:35.226" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:35.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:35.226"/>
</kw>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:35.226"/>
</kw>
<status status="PASS" starttime="20210721 11:55:34.303" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:35.226" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:35.226" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:35.226" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:35.226"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:36.128" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12098, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:36.128" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:27 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:36.144" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:36.144"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:36.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:36.144"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:36.144"/>
</kw>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:36.144"/>
</kw>
<status status="PASS" starttime="20210721 11:55:35.226" endtime="20210721 11:55:36.144"/>
</kw>
<status status="PASS" starttime="20210721 11:55:34.203" endtime="20210721 11:55:36.144"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:36.144"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:36.175" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:36.175"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:36.175" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:36.175" endtime="20210721 11:55:36.175"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:36.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:36.191" endtime="20210721 11:55:36.191"/>
</kw>
<msg timestamp="20210721 11:55:36.191" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:36.191"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:36.206" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:36.191" endtime="20210721 11:55:36.206"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:36.206" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:36.206" endtime="20210721 11:55:36.206"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:36.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:36.206" endtime="20210721 11:55:36.206"/>
</kw>
<msg timestamp="20210721 11:55:36.206" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:36.191" endtime="20210721 11:55:36.206"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:36.228" level="INFO">${field_value_list} = [27363]</msg>
<status status="PASS" starttime="20210721 11:55:36.206" endtime="20210721 11:55:36.228"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:36.228" level="INFO">${field_value} = 27363</msg>
<status status="PASS" starttime="20210721 11:55:36.228" endtime="20210721 11:55:36.228"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:36.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:36.228" endtime="20210721 11:55:36.228"/>
</kw>
<msg timestamp="20210721 11:55:36.228" level="INFO">${oid1} = 27363</msg>
<status status="PASS" starttime="20210721 11:55:36.206" endtime="20210721 11:55:36.228"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">${field_value_list} = [27372]</msg>
<status status="PASS" starttime="20210721 11:55:36.228" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">${field_value} = 27372</msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:36.244"/>
</kw>
<msg timestamp="20210721 11:55:36.244" level="INFO">${oid2} = 27372</msg>
<status status="PASS" starttime="20210721 11:55:36.228" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:36.244" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:36.244"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:37.145" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27363, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:37.145" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:28 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:37.145" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:37.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:37.145"/>
</kw>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:37.145"/>
</kw>
<status status="PASS" starttime="20210721 11:55:36.244" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:37.145" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:37.145" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:37.145" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:37.145"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:38.046" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 27372, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:38.046" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:29 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:38.046" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:38.046"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:38.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:38.046" endtime="20210721 11:55:38.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:38.062" endtime="20210721 11:55:38.062"/>
</kw>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:38.062"/>
</kw>
<status status="PASS" starttime="20210721 11:55:37.145" endtime="20210721 11:55:38.062"/>
</kw>
<status status="PASS" starttime="20210721 11:55:36.144" endtime="20210721 11:55:38.062"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:38.062" endtime="20210721 11:55:38.062"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:38.077" level="INFO">${field_value_list} = ['Rack Bottom']</msg>
<status status="PASS" starttime="20210721 11:55:38.062" endtime="20210721 11:55:38.077"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:38.077" level="INFO">${field_value} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:38.077" endtime="20210721 11:55:38.077"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:38.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:38.077" endtime="20210721 11:55:38.077"/>
</kw>
<msg timestamp="20210721 11:55:38.077" level="INFO">${rack_type1} = Rack Bottom</msg>
<status status="PASS" starttime="20210721 11:55:38.062" endtime="20210721 11:55:38.077"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:38.093" level="INFO">${field_value_list} = ['Rack Top']</msg>
<status status="PASS" starttime="20210721 11:55:38.077" endtime="20210721 11:55:38.093"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:38.093" level="INFO">${field_value} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:38.093" endtime="20210721 11:55:38.093"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:38.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:38.093" endtime="20210721 11:55:38.093"/>
</kw>
<msg timestamp="20210721 11:55:38.093" level="INFO">${rack_type2} = Rack Top</msg>
<status status="PASS" starttime="20210721 11:55:38.077" endtime="20210721 11:55:38.093"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:38.109" level="INFO">${field_value_list} = [26270]</msg>
<status status="PASS" starttime="20210721 11:55:38.093" endtime="20210721 11:55:38.109"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:38.109" level="INFO">${field_value} = 26270</msg>
<status status="PASS" starttime="20210721 11:55:38.109" endtime="20210721 11:55:38.109"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:38.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:38.109" endtime="20210721 11:55:38.109"/>
</kw>
<msg timestamp="20210721 11:55:38.109" level="INFO">${oid1} = 26270</msg>
<status status="PASS" starttime="20210721 11:55:38.093" endtime="20210721 11:55:38.109"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">${field_value_list} = [26279]</msg>
<status status="PASS" starttime="20210721 11:55:38.109" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">${field_value} = 26279</msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:38.131"/>
</kw>
<msg timestamp="20210721 11:55:38.131" level="INFO">${oid2} = 26279</msg>
<status status="PASS" starttime="20210721 11:55:38.109" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:38.131" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:38.131"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:39.032" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26270, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:39.032" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:30 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:39.032" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:39.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.032"/>
</kw>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:39.032"/>
</kw>
<status status="PASS" starttime="20210721 11:55:38.131" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:39.032" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:55:39.032" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:55:39.032" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.032"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:55:39.949" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '103'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 26279, value: 65.0}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:55:39.949" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:23:31 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:55:39.949" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.949"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:55:39.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:39.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:39.949"/>
</kw>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.949"/>
</kw>
<status status="PASS" starttime="20210721 11:55:39.032" endtime="20210721 11:55:39.949"/>
</kw>
<status status="PASS" starttime="20210721 11:55:38.062" endtime="20210721 11:55:39.949"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:39.949"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:39.965" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:39.965"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:39.965" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:39.965" endtime="20210721 11:55:39.965"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:39.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:39.965" endtime="20210721 11:55:39.965"/>
</kw>
<msg timestamp="20210721 11:55:39.965" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:39.965"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:39.980" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:55:39.965" endtime="20210721 11:55:39.980"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:39.980" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:39.980" endtime="20210721 11:55:39.980"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:39.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:39.980" endtime="20210721 11:55:39.980"/>
</kw>
<msg timestamp="20210721 11:55:39.980" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:39.965" endtime="20210721 11:55:39.980"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:39.996" level="INFO">${field_value_list} = [21848]</msg>
<status status="PASS" starttime="20210721 11:55:39.980" endtime="20210721 11:55:39.996"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:39.996" level="INFO">${field_value} = 21848</msg>
<status status="PASS" starttime="20210721 11:55:39.996" endtime="20210721 11:55:39.996"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:39.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:39.996" endtime="20210721 11:55:39.996"/>
</kw>
<msg timestamp="20210721 11:55:39.996" level="INFO">${oid1} = 21848</msg>
<status status="PASS" starttime="20210721 11:55:39.980" endtime="20210721 11:55:39.996"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.012" level="INFO">${field_value_list} = [21856]</msg>
<status status="PASS" starttime="20210721 11:55:39.996" endtime="20210721 11:55:40.012"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.012" level="INFO">${field_value} = 21856</msg>
<status status="PASS" starttime="20210721 11:55:40.012" endtime="20210721 11:55:40.012"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.012" endtime="20210721 11:55:40.012"/>
</kw>
<msg timestamp="20210721 11:55:40.012" level="INFO">${oid2} = 21856</msg>
<status status="PASS" starttime="20210721 11:55:39.996" endtime="20210721 11:55:40.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.027"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.027"/>
</kw>
<status status="PASS" starttime="20210721 11:55:39.949" endtime="20210721 11:55:40.027"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.027"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.044" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.044"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.046" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:40.044" endtime="20210721 11:55:40.046"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.046" endtime="20210721 11:55:40.046"/>
</kw>
<msg timestamp="20210721 11:55:40.046" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.046"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.057" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:55:40.046" endtime="20210721 11:55:40.057"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.065" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:40.057" endtime="20210721 11:55:40.065"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.065" endtime="20210721 11:55:40.065"/>
</kw>
<msg timestamp="20210721 11:55:40.065" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:40.046" endtime="20210721 11:55:40.065"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.077" level="INFO">${field_value_list} = [21867]</msg>
<status status="PASS" starttime="20210721 11:55:40.067" endtime="20210721 11:55:40.077"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.077" level="INFO">${field_value} = 21867</msg>
<status status="PASS" starttime="20210721 11:55:40.077" endtime="20210721 11:55:40.077"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.077" endtime="20210721 11:55:40.077"/>
</kw>
<msg timestamp="20210721 11:55:40.077" level="INFO">${oid1} = 21867</msg>
<status status="PASS" starttime="20210721 11:55:40.065" endtime="20210721 11:55:40.077"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.098" level="INFO">${field_value_list} = [21875]</msg>
<status status="PASS" starttime="20210721 11:55:40.077" endtime="20210721 11:55:40.098"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.098" level="INFO">${field_value} = 21875</msg>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.098"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.098"/>
</kw>
<msg timestamp="20210721 11:55:40.098" level="INFO">${oid2} = 21875</msg>
<status status="PASS" starttime="20210721 11:55:40.077" endtime="20210721 11:55:40.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.098"/>
</kw>
<status status="PASS" starttime="20210721 11:55:40.027" endtime="20210721 11:55:40.098"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.098"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.119" level="INFO">${field_value_list} = ['Humidity Monitor']</msg>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.119"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.119" level="INFO">${field_value} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:40.119" endtime="20210721 11:55:40.119"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.119" endtime="20210721 11:55:40.119"/>
</kw>
<msg timestamp="20210721 11:55:40.119" level="INFO">${rack_type1} = Humidity Monitor</msg>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.119"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].name</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.137" level="INFO">${field_value_list} = ['Internal Thermistor']</msg>
<status status="PASS" starttime="20210721 11:55:40.119" endtime="20210721 11:55:40.137"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.137" level="INFO">${field_value} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:40.137" endtime="20210721 11:55:40.137"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.137" endtime="20210721 11:55:40.137"/>
</kw>
<msg timestamp="20210721 11:55:40.137" level="INFO">${rack_type2} = Internal Thermistor</msg>
<status status="PASS" starttime="20210721 11:55:40.119" endtime="20210721 11:55:40.137"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.149" level="INFO">${field_value_list} = [21886]</msg>
<status status="PASS" starttime="20210721 11:55:40.139" endtime="20210721 11:55:40.149"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.157" level="INFO">${field_value} = 21886</msg>
<status status="PASS" starttime="20210721 11:55:40.149" endtime="20210721 11:55:40.157"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.157" endtime="20210721 11:55:40.157"/>
</kw>
<msg timestamp="20210721 11:55:40.157" level="INFO">${oid1} = 21886</msg>
<status status="PASS" starttime="20210721 11:55:40.137" endtime="20210721 11:55:40.157"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:55:40.172" level="INFO">${field_value_list} = [21894]</msg>
<status status="PASS" starttime="20210721 11:55:40.157" endtime="20210721 11:55:40.172"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:55:40.172" level="INFO">${field_value} = 21894</msg>
<status status="PASS" starttime="20210721 11:55:40.172" endtime="20210721 11:55:40.172"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:55:40.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:55:40.172" endtime="20210721 11:55:40.172"/>
</kw>
<msg timestamp="20210721 11:55:40.172" level="INFO">${oid2} = 21894</msg>
<status status="PASS" starttime="20210721 11:55:40.157" endtime="20210721 11:55:40.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type1}'!='Humidity Monitor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid1}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.172" endtime="20210721 11:55:40.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rack_type2}'!='Internal Thermistor'</arg>
<arg>setRackPointSensorTemperature</arg>
<arg>${oid2}</arg>
<arg>${tempF}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210721 11:55:40.172" endtime="20210721 11:55:40.172"/>
</kw>
<status status="PASS" starttime="20210721 11:55:40.098" endtime="20210721 11:55:40.172"/>
</iter>
<status status="PASS" starttime="20210721 11:55:24.405" endtime="20210721 11:55:40.172"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>******************************Temperature set for all rack sensors*********************************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:40.172" endtime="20210721 11:55:40.172"/>
</kw>
<status status="PASS" starttime="20210721 11:55:23.450" endtime="20210721 11:55:40.179"/>
</kw>
<kw name="establishConnectionAndStartCoolingControlProcess" library="connection">
<doc>Establish connection and start processes on the remote machine.
HISTIGNORE command is used to avoid saving the password in history</doc>
<kw name="openConnectionAndLogIn" library="connection">
<kw name="Log To Console" library="BuiltIn">
<arg>!--------Opening SSH Connection----------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:40.179" endtime="20210721 11:55:40.179"/>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20210721 11:55:40.179" endtime="20210721 11:55:40.179"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20210721 11:55:40.179" level="INFO">Logging into '10.252.9.64:22' as 'fc'.</msg>
<msg timestamp="20210721 11:55:44.623" level="INFO">Read output: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-74-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue 20 Jul 2021 11:23:33 PM PDT

  System load:  0.15                Processes:               256
  Usage of /:   2.6% of 1005.94GB   Users logged in:         1
  Memory usage: 4%                  IPv4 address for ens160: 10.252.9.64
  Swap usage:   0%

Last login: Tue Jul 20 23:22:30 2021 from 10.253.2.183
fc@QA-ideavat-vems-2:~$</msg>
<status status="PASS" starttime="20210721 11:55:40.179" endtime="20210721 11:55:44.623"/>
</kw>
<status status="PASS" starttime="20210721 11:55:40.179" endtime="20210721 11:55:44.623"/>
</kw>
<kw name="executeProcessCommandWithoutTraceInHistory" library="connection">
<arg>facs_dash</arg>
<kw name="Execute Command" library="SSHLibrary">
<arg>export HISTIGNORE='*sudo -S*'</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:55:44.623" level="INFO">Executing command 'export HISTIGNORE='*sudo -S*''.</msg>
<msg timestamp="20210721 11:55:45.223" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:55:44.623" endtime="20210721 11:55:45.223"/>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<arg>echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start ${process_name}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:55:45.223" level="INFO">Executing command 'echo "Id3aV@tAcc3ss" | sudo -S -k systemctl start facs_dash'.</msg>
<msg timestamp="20210721 11:55:46.259" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:55:45.223" endtime="20210721 11:55:46.259"/>
</kw>
<status status="PASS" starttime="20210721 11:55:44.623" endtime="20210721 11:55:46.259"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${high_speed}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:55:51.267" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210721 11:55:46.260" endtime="20210721 11:55:51.268"/>
</kw>
<kw name="closeAllConnections" library="connection">
<kw name="Execute Command" library="SSHLibrary">
<arg>exit</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20210721 11:55:51.271" level="INFO">Executing command 'exit'.</msg>
<msg timestamp="20210721 11:55:51.877" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" starttime="20210721 11:55:51.270" endtime="20210721 11:55:51.878"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>*******************Processes(start or stop) completed and Closed ssh connection********************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:51.878" endtime="20210721 11:55:51.880"/>
</kw>
<status status="PASS" starttime="20210721 11:55:51.268" endtime="20210721 11:55:51.881"/>
</kw>
<status status="PASS" starttime="20210721 11:55:40.179" endtime="20210721 11:55:51.881"/>
</kw>
<kw name="waitForTwoMinutes" library="apiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for Two minutes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:55:51.884" endtime="20210721 11:55:51.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:57:51.898" level="INFO">Slept 2 minutes</msg>
<status status="PASS" starttime="20210721 11:55:51.886" endtime="20210721 11:57:51.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**************two minutes waiting done***************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:51.898" endtime="20210721 11:57:51.899"/>
</kw>
<status status="PASS" starttime="20210721 11:55:51.882" endtime="20210721 11:57:51.899"/>
</kw>
<kw name="checkGroupControlStatusValueNotInGuard" library="apiresources">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:51.901" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:57:51.900" endtime="20210721 11:57:51.901"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${getCtrlStateValue}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:51.901" level="INFO">${body} = {'query': ' query getCtrlStateValue\n{\n  site {\n    groups: children(selector:{type: Group, name: "GRP00"}) {\n      children(selector:{type: GroupStatus, name: "Group Status"}){\n        children(s...</msg>
<status status="PASS" starttime="20210721 11:57:51.901" endtime="20210721 11:57:51.901"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:51.902" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:51.901" endtime="20210721 11:57:51.902"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:52.777" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '338'} 
 body=b'{"query": " query getCtrlStateValue\\n{\\n  site {\\n    groups: children(selector:{type: Group, name: \\"GRP00\\"}) {\\n      children(selector:{type: GroupStatus, name: \\"Group Status\\"}){\\n        children(selector:{type: State, name: \\"CtrlState\\"}){\\n          name pointCurrent{\\n            value }\\n        }\\n      }\\n    }\\n  }\\n}\\n"}' 
 </msg>
<msg timestamp="20210721 11:57:52.777" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:44 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '100', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"children":[{"children":[{"name":"CtrlState","pointCurrent":{"value":4}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:57:52.777" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:51.902" endtime="20210721 11:57:52.777"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{ctrl_state_value}</var>
<arg>${result.json()}</arg>
<arg>${trends_groupStatus_controlStatus_value_path}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">@{ctrl_state_value} = [ 4 ]</msg>
<status status="PASS" starttime="20210721 11:57:52.777" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${value}</var>
<arg>${ctrl_state_value}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">${value} = 4</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>*********Validating the Ctrl Status is not Guard(expect any other value than 2)******</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<arg>${value}</arg>
<arg>2</arg>
<arg>System should not be in guard(2)</arg>
<doc>Fails if objects are equal after converting them to integers.</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>---------Status value is ${value}-Not in Guard--Validated Successfully------------------------</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<status status="PASS" starttime="20210721 11:57:51.899" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="setTemperatureForSensorsAandB" library="apiresources">
<arg>${sensor_point_hot_temp}</arg>
<kw name="queryToFetchJsonResponseContainingTheRackSensorsFromGroup" library="apiresources">
<var>${json_dict}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${rackSensorPoints}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">${body} = {'query': ' query rackSensorPoints {\n            site {\n              groups: children(selector: {type: Group,name: "GRP00"}) @skip(if:false) {\n                oid name\n               racks: child...</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:52.792" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:52.792"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:53.663" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '552'} 
 body=b'{"query": " query rackSensorPoints {\\n            site {\\n              groups: children(selector: {type: Group,name: \\"GRP00\\"}) @skip(if:false) {\\n                oid name\\n               racks: children(selector:{type: Rack},){\\n\\n                  oid\\n                  displayName\\n              points: children{\\n                oid\\n                name\\n                  type\\n                pointCurrent{\\n                  value\\n                }\\n\\n              }\\n\\n              }\\n              }\\n              }\\n            }\\n"}' 
 </msg>
<msg timestamp="20210721 11:57:53.663" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:45 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '433', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"name":"GRP00","racks":[{"oid":1272,"displayName":"CAT00-09-00","points":[{"oid":12010,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12018,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1291,"displayName":"CAT00-09-01","points":[{"oid":12026,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12034,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1310,"displayName":"CAT00-09-02","points":[{"oid":12042,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12050,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1329,"displayName":"CAT00-09-03","points":[{"oid":12058,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12066,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1348,"displayName":"CAT00-09-04","points":[{"oid":12074,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12082,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":1367,"displayName":"CAT00-09-05","points":[{"oid":12090,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":12098,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":27360,"displayName":"CAT00-10-10","points":[{"oid":27363,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":27372,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":26267,"displayName":"RACKMON","points":[{"oid":26270,"name":"Rack Bottom","type":"CBot","pointCurrent":{"value":65}},{"oid":26279,"name":"Rack Top","type":"CTop","pointCurrent":{"value":65}}]},{"oid":21845,"displayName":"RH-T_01","points":[{"oid":21848,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.416529329182689}},{"oid":21856,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":68.666}}]},{"oid":21864,"displayName":"RH-T_02","points":[{"oid":21867,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.426966977964964}},{"oid":21875,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":72.014}}]},{"oid":21883,"displayName":"RH-T_03","points":[{"oid":21886,"name":"Humidity Monitor","type":"RHUM","pointCurrent":{"value":0.43655008240249}},{"oid":21894,"name":"Internal Thermistor","type":"ZNT","pointCurrent":{"value":69.206}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:57:53.663" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:53.663"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:53.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:53.663" endtime="20210721 11:57:53.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dict}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:53.663" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:53.663" endtime="20210721 11:57:53.663"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dict}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.679" endtime="20210721 11:57:53.679"/>
</kw>
<msg timestamp="20210721 11:57:53.679" level="INFO">${json_dict} = {'data': {'site': {'groups': [{'oid': 17, 'name': 'GRP00', 'racks': [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'valu...</msg>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:53.679"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total}</var>
<arg>${json_dict}</arg>
<arg>${racks_in_group}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:53.710" level="INFO">@{points} = [ [{'oid': 1272, 'displayName': 'CAT00-09-00', 'points': [{'oid': 12010, 'name': 'Rack Bottom', 'type': 'CBot', 'pointCurrent': {'value': 65}}, {'oid': 12018, 'name': 'Rack Top', 'type': 'CTop', 'poin...</msg>
<status status="PASS" starttime="20210721 11:57:53.679" endtime="20210721 11:57:53.710"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:57:53.710" level="INFO">Length is 11</msg>
<msg timestamp="20210721 11:57:53.710" level="INFO">${total_points_to_write} = 11</msg>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.710"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:57:53.710" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.710"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.710"/>
</kw>
<msg timestamp="20210721 11:57:53.710" level="INFO">${total} = 11</msg>
<status status="PASS" starttime="20210721 11:57:53.679" endtime="20210721 11:57:53.710"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting temperature for Sensor A and B-----------------&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.710"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${i} Rack Sensor</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.710"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:53.725" level="INFO">${field_value_list} = ['CBot']</msg>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.725"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:53.725" level="INFO">${field_value} = CBot</msg>
<status status="PASS" starttime="20210721 11:57:53.725" endtime="20210721 11:57:53.725"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.725" endtime="20210721 11:57:53.725"/>
</kw>
<msg timestamp="20210721 11:57:53.725" level="INFO">${rack_type1} = CBot</msg>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.725"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${rack_type2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].type</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:53.748" level="INFO">${field_value_list} = ['CTop']</msg>
<status status="PASS" starttime="20210721 11:57:53.725" endtime="20210721 11:57:53.748"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:53.748" level="INFO">${field_value} = CTop</msg>
<status status="PASS" starttime="20210721 11:57:53.748" endtime="20210721 11:57:53.748"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.748" endtime="20210721 11:57:53.748"/>
</kw>
<msg timestamp="20210721 11:57:53.748" level="INFO">${rack_type2} = CTop</msg>
<status status="PASS" starttime="20210721 11:57:53.725" endtime="20210721 11:57:53.748"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid1}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[0].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:53.763" level="INFO">${field_value_list} = [12010]</msg>
<status status="PASS" starttime="20210721 11:57:53.748" endtime="20210721 11:57:53.763"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:53.763" level="INFO">${field_value} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:53.763" endtime="20210721 11:57:53.763"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.763" endtime="20210721 11:57:53.763"/>
</kw>
<msg timestamp="20210721 11:57:53.763" level="INFO">${oid1} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:53.748" endtime="20210721 11:57:53.763"/>
</kw>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${oid2}</var>
<arg>${json_dict}</arg>
<arg>$.data.site.groups[0].racks[${i}].points[1].oid</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${field_value_list} = [12018]</msg>
<status status="PASS" starttime="20210721 11:57:53.763" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${field_value} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<msg timestamp="20210721 11:57:53.780" level="INFO">${oid2} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:53.763" endtime="20210721 11:57:53.780"/>
</kw>
<if>
<branch type="IF" condition="'${rack_type1}'=='CBot'">
<if>
<branch type="IF" condition="'${rack_type2}'=='CTop'">
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_A_oid}</var>
<arg>${oid1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${sensor_A_oid} = 12010</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sensor_B_oid}</var>
<arg>${oid2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${sensor_B_oid} = 12018</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</branch>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</if>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</branch>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</if>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.780"/>
</iter>
<status status="PASS" starttime="20210721 11:57:53.710" endtime="20210721 11:57:53.780"/>
</for>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_A_oid}</arg>
<arg>${temp}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:53.780" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:53.780"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:54.680" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12010, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:54.680" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:54.680" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:54.680"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:54.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:54.680" endtime="20210721 11:57:54.680"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:54.680" endtime="20210721 11:57:54.680"/>
</kw>
<status status="PASS" starttime="20210721 11:57:53.780" endtime="20210721 11:57:54.680"/>
</kw>
<kw name="setRackPointSensorTemperature" library="apiresources">
<arg>${sensor_B_oid}</arg>
<arg>${temp}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${write_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:54.696" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN'}</msg>
<status status="PASS" starttime="20210721 11:57:54.680" endtime="20210721 11:57:54.696"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= mutation pointWrite { pointWrite(requests: [{oid: ${oid}, value: ${temp}}]) { index reason }}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:57:54.696" level="INFO">${body} = {'query': ' mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}'}</msg>
<status status="PASS" starttime="20210721 11:57:54.696" endtime="20210721 11:57:54.696"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:57:54.696" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:57:54.696" endtime="20210721 11:57:54.696"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:57:55.597" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'vd2R6aDXgz5e9zkmf7TfZzqN', 'Content-Length': '102'} 
 body=b'{"query": " mutation pointWrite { pointWrite(requests: [{oid: 12018, value: 100}]) { index reason }}"}' 
 </msg>
<msg timestamp="20210721 11:57:55.597" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:25:46 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '46', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"pointWrite":[]}} 
 </msg>
<msg timestamp="20210721 11:57:55.597" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:57:54.696" endtime="20210721 11:57:55.597"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:57:55.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:57:55.597" endtime="20210721 11:57:55.597"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Temperature ${temp} F set for ${oid}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:55.597" endtime="20210721 11:57:55.597"/>
</kw>
<status status="PASS" starttime="20210721 11:57:54.680" endtime="20210721 11:57:55.597"/>
</kw>
<status status="PASS" starttime="20210721 11:57:52.792" endtime="20210721 11:57:55.597"/>
</kw>
<kw name="waitForTwoMinutes" library="apiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Waiting for Two minutes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:57:55.597" endtime="20210721 11:57:55.597"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 minutes</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210721 11:59:55.608" level="INFO">Slept 2 minutes</msg>
<status status="PASS" starttime="20210721 11:57:55.597" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**************two minutes waiting done***************</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:55.608"/>
</kw>
<status status="PASS" starttime="20210721 11:57:55.597" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="checkGroupControlStausValueInGuard" library="apiresources">
<kw name="Log To Console" library="BuiltIn">
<arg>Checking Group Control Status for the value to be in guard.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:55.608" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${getCtrlStateValue}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:55.608" level="INFO">${body} = {'query': ' query getCtrlStateValue\n{\n  site {\n    groups: children(selector:{type: Group, name: "GRP00"}) {\n      children(selector:{type: GroupStatus, name: "Group Status"}){\n        children(s...</msg>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:55.608" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:55.608"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:56.508" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '338'} 
 body=b'{"query": " query getCtrlStateValue\\n{\\n  site {\\n    groups: children(selector:{type: Group, name: \\"GRP00\\"}) {\\n      children(selector:{type: GroupStatus, name: \\"Group Status\\"}){\\n        children(selector:{type: State, name: \\"CtrlState\\"}){\\n          name pointCurrent{\\n            value }\\n        }\\n      }\\n    }\\n  }\\n}\\n"}' 
 </msg>
<msg timestamp="20210721 11:59:56.508" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:47 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '100', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"children":[{"children":[{"name":"CtrlState","pointCurrent":{"value":2}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:59:56.508" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:56.508"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{ctrl_state_value}</var>
<arg>${result.json()}</arg>
<arg>${trends_groupStatus_controlStatus_value_path}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:56.533" level="INFO">@{ctrl_state_value} = [ 2 ]</msg>
<status status="PASS" starttime="20210721 11:59:56.508" endtime="20210721 11:59:56.533"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${value}</var>
<arg>${ctrl_state_value}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:56.533" level="INFO">${value} = 2</msg>
<status status="PASS" starttime="20210721 11:59:56.533" endtime="20210721 11:59:56.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${value}</arg>
<arg>2</arg>
<arg>System should be in guard(2)</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210721 11:59:56.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:56.533" endtime="20210721 11:59:56.533"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Validated and the Group is in Guard</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:56.533" endtime="20210721 11:59:56.533"/>
</kw>
<status status="PASS" starttime="20210721 11:59:55.608" endtime="20210721 11:59:56.533"/>
</kw>
<kw name="checkForAHUToBeInGuardAtRegularIntervalUntilFourAHUsReached" library="apiresources">
<arg>${num_guard_units}</arg>
<arg>${num_minutes_guard_timer}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;----Validation on the AHUs going on guard at regular interval-----&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:56.538"/>
</kw>
<for flavor="IN RANGE">
<var>${reps}</var>
<value>1</value>
<value>5</value>
<iter>
<var name="${reps}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>XX----------Entering--${reps}-Cycle of Checking AHUs in Guard----------------XX</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:56.538"/>
</kw>
<kw name="queryToFetchJsonResponseContaingTheCurrentAHUStatus" library="apiresources">
<var>${json_dictionary}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=${content_type}</arg>
<arg>Vigilent-Api-Token=${query_api_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:56.538" level="INFO">${headers} = {'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST'}</msg>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:56.538"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>query= ${getAHUStatusInGroupGRP00}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210721 11:59:56.538" level="INFO">${body} = {'query': ' query getAHUStatusInGroupGRP00 {\n            site {\n                groups : children(selector:{type: Group,oid:17}) {\n                    oid type displayName\n                    ahus...</msg>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:56.538"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AIEngine</arg>
<arg>${base_url}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210721 11:59:56.538" level="INFO">Creating Session using : alias=AIEngine, url=https://10.252.9.64/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:56.538"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${result}</var>
<arg>AIEngine</arg>
<arg>/public/graphql</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210721 11:59:57.408" level="INFO">POST Request : url=https://10.252.9.64/api/public/graphql 
 path_url=/api/public/graphql 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Vigilent-Api-Token': 'bZVd43sS4Y9WZfZ7du3kY6ST', 'Content-Length': '607'} 
 body=b'{"query": " query getAHUStatusInGroupGRP00 {\\n            site {\\n                groups : children(selector:{type: Group,oid:17}) {\\n                    oid type displayName\\n                    ahus: children(selector:{type: AHU}) {\\n                        oid type displayName name\\n                        controls: search(selector: {target: CONTROL}, pruneDepth: false){\\n                            oid type displayName name\\n                              status:targetStatus(target: CONTROL) {origin}\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n"}' 
 </msg>
<msg timestamp="20210721 11:59:57.408" level="INFO">POST Response : url=https://10.252.9.64/api/public/graphql 
 status=200, reason=OK 
 headers={'Date': 'Wed, 21 Jul 2021 06:27:48 GMT', 'Server': 'Apache', 'Content-Encoding': 'gzip', 'Vary': 'Accept-Encoding', 'Content-Length': '384', 'Keep-Alive': 'timeout=10, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json;charset=UTF-8'} 
 body={"data":{"site":{"groups":[{"oid":17,"type":"Group","displayName":"GRP00","ahus":[{"oid":20,"type":"AHU","displayName":"AHU00-00-A","name":"AHU00-00-A","controls":[{"oid":10986,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}}]},{"oid":55,"type":"AHU","displayName":"AHU00-00-B","name":"AHU00-00-B","controls":[{"oid":11026,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":90,"type":"AHU","displayName":"AHU00-02-A","name":"AHU00-02-A","controls":[{"oid":11034,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}},{"oid":11058,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":133,"type":"AHU","displayName":"AHU00-02-B","name":"AHU00-02-B","controls":[{"oid":11066,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}}]},{"oid":168,"type":"AHU","displayName":"AHU00-04-A","name":"AHU00-04-A","controls":[{"oid":11106,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":203,"type":"AHU","displayName":"AHU00-04-B","name":"AHU00-04-B","controls":[{"oid":11114,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}},{"oid":11138,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":14758,"type":"AHU","displayName":"AHU00-10-A","name":"AHU00-10-A","controls":[{"oid":14892,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}}]},{"oid":14825,"type":"AHU","displayName":"AHU00-10-B","name":"AHU00-10-B","controls":[{"oid":14900,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}}]},{"oid":15034,"type":"AHU","displayName":"AHU00-12-A","name":"AHU00-12-A","controls":[{"oid":15101,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"GUARD"}}]},{"oid":15109,"type":"AHU","displayName":"AHU00-12-B","name":"AHU00-12-B","controls":[{"oid":15176,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":15310,"type":"AHU","displayName":"AHU00-14-A","name":"AHU00-14-A","controls":[{"oid":15313,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}},{"oid":15385,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]},{"oid":15393,"type":"AHU","displayName":"AHU00-14-B","name":"AHU00-14-B","controls":[{"oid":15396,"type":"BOP","displayName":"BOP","name":"BOP","status":{"origin":"CONTROL"}},{"oid":15468,"type":"SFC","displayName":"SFC","name":"SFC","status":{"origin":"CONTROL"}}]}]}]}}} 
 </msg>
<msg timestamp="20210721 11:59:57.408" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:57.408"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210721 11:59:57.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_dictionary}</var>
<arg>${result.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210721 11:59:57.408" level="INFO">${json_dictionary} = {'data': {'site': {'groups': [{'oid': 17, 'type': 'Group', 'displayName': 'GRP00', 'ahus': [{'oid': 20, 'type': 'AHU', 'displayName': 'AHU00-00-A', 'name': 'AHU00-00-A', 'controls': [{'oid': 10986, 't...</msg>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.408"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${json_dictionary}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.408"/>
</kw>
<msg timestamp="20210721 11:59:57.408" level="INFO">${json_dictionary} = {'data': {'site': {'groups': [{'oid': 17, 'type': 'Group', 'displayName': 'GRP00', 'ahus': [{'oid': 20, 'type': 'AHU', 'displayName': 'AHU00-00-A', 'name': 'AHU00-00-A', 'controls': [{'oid': 10986, 't...</msg>
<status status="PASS" starttime="20210721 11:59:56.538" endtime="20210721 11:59:57.408"/>
</kw>
<if>
<branch type="IF" condition="&quot;${reps}&quot;==&quot;1&quot;">
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${total_no_ahus}</var>
<arg>${json_dictionary}</arg>
<arg>${ahus_list_path}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">@{points} = [ [{'oid': 20, 'type': 'AHU', 'displayName': 'AHU00-00-A', 'name': 'AHU00-00-A', 'controls': [{'oid': 10986, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}]}, {'o...</msg>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">Length is 12</msg>
<msg timestamp="20210721 11:59:57.458" level="INFO">${total_points_to_write} = 12</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">${total} = 12</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<msg timestamp="20210721 11:59:57.458" level="INFO">${total_no_ahus} = 12</msg>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!---Total Number of Ahus is ${total_no_ahus}------!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${ahus_to_be_on}</var>
<arg>${num_guard_units_val} * 4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">${ahus_to_be_on} = 4</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!----We need to wait until ${ahus_to_be_on} AHUs are in Guard-----!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.458"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.408" endtime="20210721 11:59:57.458"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_ahus_in_guard}</var>
<arg>${num_guard_units_val} * ${reps}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210721 11:59:57.458" level="INFO">${expected_ahus_in_guard} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>LL------We Expect ${expected_ahus_in_guard} to be in guard now---LL</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<if>
<branch type="IF" condition="${total_no_ahus} &gt;= ${expected_ahus_in_guard}">
<kw name="fetchNumberOfAHUsWithGuardON" library="apiresources">
<var>${current_ahus_in_guard}</var>
<arg>${total_no_ahus}</arg>
<arg>${json_dictionary}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>!---Intial counter value is ${counter}---!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<for flavor="IN RANGE">
<var>${ahu}</var>
<value>0</value>
<value>${total}</value>
<iter>
<var name="${ahu}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.458"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.478" level="INFO">@{points} = [ [{'oid': 10986, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.478"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.478" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.478" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.478" endtime="20210721 11:59:57.478"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.478" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.478" endtime="20210721 11:59:57.478"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.478" endtime="20210721 11:59:57.478"/>
</kw>
<msg timestamp="20210721 11:59:57.478" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.478" endtime="20210721 11:59:57.478"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.503" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.488" endtime="20210721 11:59:57.503"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.506" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.503" endtime="20210721 11:59:57.506"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.506"/>
</kw>
<msg timestamp="20210721 11:59:57.506" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.488" endtime="20210721 11:59:57.506"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.506"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.506"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.508"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.508"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.508"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.506" endtime="20210721 11:59:57.508"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.488" endtime="20210721 11:59:57.508"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.488" endtime="20210721 11:59:57.508"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.458" endtime="20210721 11:59:57.508"/>
</iter>
<iter>
<var name="${ahu}">1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.508"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.528" level="INFO">@{points} = [ [{'oid': 11026, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.528"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.528" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.528" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.528"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.528" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.528"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.528"/>
</kw>
<msg timestamp="20210721 11:59:57.528" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.528"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.543" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.543"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.548" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.543" endtime="20210721 11:59:57.548"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<msg timestamp="20210721 11:59:57.548" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.548"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.548"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.528" endtime="20210721 11:59:57.548"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.508" endtime="20210721 11:59:57.548"/>
</iter>
<iter>
<var name="${ahu}">2</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.548"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.563" level="INFO">@{points} = [ [{'oid': 11034, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}, {'oid': 11058, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL...</msg>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.568" level="INFO">Length is 2</msg>
<msg timestamp="20210721 11:59:57.568" level="INFO">${total_points_to_write} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.563" endtime="20210721 11:59:57.568"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.568" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.568"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.568"/>
</kw>
<msg timestamp="20210721 11:59:57.568" level="INFO">${no_of_controls} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.568"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.568"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.578" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.578"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.588" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.578" endtime="20210721 11:59:57.588"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<msg timestamp="20210721 11:59:57.588" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.588"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.588"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.588"/>
</iter>
<iter>
<var name="${controls}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.608" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.608"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.608" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.608"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.608"/>
</kw>
<msg timestamp="20210721 11:59:57.608" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.608"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.608"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.608"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.613"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.613"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.613"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.608" endtime="20210721 11:59:57.613"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.588" endtime="20210721 11:59:57.613"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.568" endtime="20210721 11:59:57.613"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.548" endtime="20210721 11:59:57.613"/>
</iter>
<iter>
<var name="${ahu}">3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.613"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.629" level="INFO">@{points} = [ [{'oid': 11066, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.629"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.633" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.633" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.629" endtime="20210721 11:59:57.633"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.633" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.633"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.633"/>
</kw>
<msg timestamp="20210721 11:59:57.633" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.633"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.633"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.649" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.649"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.649" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<msg timestamp="20210721 11:59:57.649" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.649"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.649"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.658"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.658"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.658" endtime="20210721 11:59:57.658"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.658"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.649" endtime="20210721 11:59:57.658"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.658"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.633" endtime="20210721 11:59:57.658"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.613" endtime="20210721 11:59:57.658"/>
</iter>
<iter>
<var name="${ahu}">4</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.658" endtime="20210721 11:59:57.658"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.670" level="INFO">@{points} = [ [{'oid': 11106, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.658" endtime="20210721 11:59:57.670"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.670" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.670" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.670" endtime="20210721 11:59:57.670"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.670" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.670" endtime="20210721 11:59:57.670"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.670" endtime="20210721 11:59:57.670"/>
</kw>
<msg timestamp="20210721 11:59:57.670" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.658" endtime="20210721 11:59:57.670"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.670" endtime="20210721 11:59:57.670"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.690" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.678" endtime="20210721 11:59:57.690"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.690" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<msg timestamp="20210721 11:59:57.690" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.678" endtime="20210721 11:59:57.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.690"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.698" endtime="20210721 11:59:57.698"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.698" endtime="20210721 11:59:57.698"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.690" endtime="20210721 11:59:57.698"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.678" endtime="20210721 11:59:57.698"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.670" endtime="20210721 11:59:57.698"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.658" endtime="20210721 11:59:57.698"/>
</iter>
<iter>
<var name="${ahu}">5</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.698" endtime="20210721 11:59:57.698"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.710" level="INFO">@{points} = [ [{'oid': 11114, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}, {'oid': 11138, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL...</msg>
<status status="PASS" starttime="20210721 11:59:57.700" endtime="20210721 11:59:57.710"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.718" level="INFO">Length is 2</msg>
<msg timestamp="20210721 11:59:57.718" level="INFO">${total_points_to_write} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.710" endtime="20210721 11:59:57.718"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.718" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.718" endtime="20210721 11:59:57.718"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.718" endtime="20210721 11:59:57.718"/>
</kw>
<msg timestamp="20210721 11:59:57.718" level="INFO">${no_of_controls} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.698" endtime="20210721 11:59:57.718"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.718" endtime="20210721 11:59:57.718"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.738" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.720" endtime="20210721 11:59:57.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.739" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.738" endtime="20210721 11:59:57.739"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.739"/>
</kw>
<msg timestamp="20210721 11:59:57.739" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.720" endtime="20210721 11:59:57.739"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.739"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.739"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.741"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.741"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.741"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.741"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.739" endtime="20210721 11:59:57.741"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.718" endtime="20210721 11:59:57.741"/>
</iter>
<iter>
<var name="${controls}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.759" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.759"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.759" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.759" endtime="20210721 11:59:57.759"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.759" endtime="20210721 11:59:57.759"/>
</kw>
<msg timestamp="20210721 11:59:57.759" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.759"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.759" endtime="20210721 11:59:57.761"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.741" endtime="20210721 11:59:57.761"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.718" endtime="20210721 11:59:57.761"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.698" endtime="20210721 11:59:57.761"/>
</iter>
<iter>
<var name="${ahu}">6</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.761"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.782" level="INFO">@{points} = [ [{'oid': 14892, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.782"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.782" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.782" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.782"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.782" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.782"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.782"/>
</kw>
<msg timestamp="20210721 11:59:57.782" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.782"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.782"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.800" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.800"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.800" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.800" endtime="20210721 11:59:57.800"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.800" endtime="20210721 11:59:57.800"/>
</kw>
<msg timestamp="20210721 11:59:57.800" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.800"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.800" endtime="20210721 11:59:57.802"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.802"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.782" endtime="20210721 11:59:57.802"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.761" endtime="20210721 11:59:57.802"/>
</iter>
<iter>
<var name="${ahu}">7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.802"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.822" level="INFO">@{points} = [ [{'oid': 14900, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.822"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.822" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.822" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.822"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.822" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.822"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.822"/>
</kw>
<msg timestamp="20210721 11:59:57.822" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.822"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.822"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.841" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.841"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.843" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.841" endtime="20210721 11:59:57.843"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<msg timestamp="20210721 11:59:57.843" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.843"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.843"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.822" endtime="20210721 11:59:57.843"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.802" endtime="20210721 11:59:57.843"/>
</iter>
<iter>
<var name="${ahu}">8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.843"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.864" level="INFO">@{points} = [ [{'oid': 15101, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'GUARD'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.864"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.864" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.864" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.864" endtime="20210721 11:59:57.864"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.864" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.864" endtime="20210721 11:59:57.864"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.868"/>
</kw>
<msg timestamp="20210721 11:59:57.868" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.868"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.868"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.885" level="INFO">${field_value_list} = ['GUARD']</msg>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.885"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.888" level="INFO">${field_value} = GUARD</msg>
<status status="PASS" starttime="20210721 11:59:57.885" endtime="20210721 11:59:57.888"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<msg timestamp="20210721 11:59:57.888" level="INFO">${ahu_status_ctrl_value} = GUARD</msg>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.888"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<kw name="Increment By One" library="common">
<var>${value}</var>
<arg>${before_val}</arg>
<msg timestamp="20210721 11:59:57.888" level="INFO">${value} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<msg timestamp="20210721 11:59:57.888" level="INFO">${counter} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.888"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20210721 11:59:57.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210721 11:59:57.893" endtime="20210721 11:59:57.893"/>
</kw>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.893"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.888" endtime="20210721 11:59:57.893"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.893"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.868" endtime="20210721 11:59:57.893"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.843" endtime="20210721 11:59:57.893"/>
</iter>
<iter>
<var name="${ahu}">9</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.893" endtime="20210721 11:59:57.893"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.913" level="INFO">@{points} = [ [{'oid': 15176, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL'}}] ]</msg>
<status status="PASS" starttime="20210721 11:59:57.893" endtime="20210721 11:59:57.913"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.913" level="INFO">Length is 1</msg>
<msg timestamp="20210721 11:59:57.913" level="INFO">${total_points_to_write} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.913" endtime="20210721 11:59:57.913"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.913" level="INFO">${total} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.913" endtime="20210721 11:59:57.913"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.915"/>
</kw>
<msg timestamp="20210721 11:59:57.915" level="INFO">${no_of_controls} = 1</msg>
<status status="PASS" starttime="20210721 11:59:57.893" endtime="20210721 11:59:57.915"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.915"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.933" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.933"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.934" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.933" endtime="20210721 11:59:57.934"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.934"/>
</kw>
<msg timestamp="20210721 11:59:57.934" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.934"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.934"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.934"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.936"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.936"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.936"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.936"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.934" endtime="20210721 11:59:57.936"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.936"/>
</iter>
<status status="PASS" starttime="20210721 11:59:57.915" endtime="20210721 11:59:57.936"/>
</for>
<status status="PASS" starttime="20210721 11:59:57.893" endtime="20210721 11:59:57.936"/>
</iter>
<iter>
<var name="${ahu}">10</var>
<kw name="Log To Console" library="BuiltIn">
<arg>!!---Checking ahu at position ${ahu}---!!s</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.936" endtime="20210721 11:59:57.938"/>
</kw>
<kw name="fetchTheNumberOfItemsInDictionary" library="apiresources">
<var>${no_of_controls}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{points}</var>
<arg>${dictionary}</arg>
<arg>${json_of_required_node}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.954" level="INFO">@{points} = [ [{'oid': 15313, 'type': 'BOP', 'displayName': 'BOP', 'name': 'BOP', 'status': {'origin': 'CONTROL'}}, {'oid': 15385, 'type': 'SFC', 'displayName': 'SFC', 'name': 'SFC', 'status': {'origin': 'CONTROL...</msg>
<status status="PASS" starttime="20210721 11:59:57.938" endtime="20210721 11:59:57.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${total_points_to_write}</var>
<arg>@{points}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210721 11:59:57.954" level="INFO">Length is 2</msg>
<msg timestamp="20210721 11:59:57.954" level="INFO">${total_points_to_write} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.954" endtime="20210721 11:59:57.954"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${total}</var>
<arg>${total_points_to_write}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210721 11:59:57.956" level="INFO">${total} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.956" endtime="20210721 11:59:57.956"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${total}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.956" endtime="20210721 11:59:57.956"/>
</kw>
<msg timestamp="20210721 11:59:57.956" level="INFO">${no_of_controls} = 2</msg>
<status status="PASS" starttime="20210721 11:59:57.938" endtime="20210721 11:59:57.956"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!!!--No of Controls for ${ahu} is ${no_of_controls}---!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.956" endtime="20210721 11:59:57.956"/>
</kw>
<for flavor="IN RANGE">
<var>${controls}</var>
<value>0</value>
<value>${no_of_controls}</value>
<iter>
<var name="${controls}">0</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.974" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.958" endtime="20210721 11:59:57.974"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.974" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.974" endtime="20210721 11:59:57.974"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.974" endtime="20210721 11:59:57.974"/>
</kw>
<msg timestamp="20210721 11:59:57.976" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.958" endtime="20210721 11:59:57.976"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.976"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.976"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
<var name="${remaining_controls}">${remaining_controls}</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${remaining_controls}].status.origin</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.976"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${remaining_controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.976"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ahu_status_ctrl_value}</arg>
<arg>GUARD</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</iter>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</for>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</branch>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</if>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20210721 11:59:57.978" endtime="20210721 11:59:57.978"/>
</kw>
<status status="NOT RUN" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</branch>
<status status="PASS" starttime="20210721 11:59:57.976" endtime="20210721 11:59:57.978"/>
</if>
<status status="PASS" starttime="20210721 11:59:57.956" endtime="20210721 11:59:57.978"/>
</iter>
<iter>
<var name="${controls}">1</var>
<kw name="fetchValueOfFieldFromJsonDictionary" library="apiresources">
<var>${ahu_status_ctrl_value}</var>
<arg>${json_dictionary}</arg>
<arg>$.data.site.groups[0].ahus[${ahu}].controls[${controls}].status.origin</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${field_value_list}</var>
<arg>${json_dictionary}</arg>
<arg>${json_path_of_required_field}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20210721 11:59:57.997" level="INFO">${field_value_list} = ['CONTROL']</msg>
<status status="PASS" starttime="20210721 11:59:57.978" endtime="20210721 11:59:57.997"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${field_value}</var>
<arg>${field_value_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20210721 11:59:57.997" level="INFO">${field_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.997" endtime="20210721 11:59:57.997"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${field_value}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20210721 11:59:57.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210721 11:59:57.997" endtime="20210721 11:59:57.997"/>
</kw>
<msg timestamp="20210721 11:59:57.997" level="INFO">${ahu_status_ctrl_value} = CONTROL</msg>
<status status="PASS" starttime="20210721 11:59:57.978" endtime="20210721 11:59:57.997"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>!V-------Status value for AHU:${ahu} control:${controls} is ${ahu_status_ctrl_value}-----!V</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210721 11:59:57.997" endtime="20210721 11:59:57.998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${ahu_status_ctrl_value}&quot;==&quot;GUARD&quot;">
<kw name="incrementingByOne" library="common">
<var>${counter}</var>
<arg>${counter}</arg>
<status status="NOT RUN" starttime="20210721 11:59:57.998" endtime="20210721 11:59:57.998"/>
</kw>
<if>
<branch type="IF" condition="${no_of_controls} &gt; 1">
<for flavor="IN RANGE">
<var>${remaining_controls}</var>
<value>1</value>
<value>${no_of_controls}</value>
<iter>
